Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WS
    STRING_START_SINGLE
    STRING_START_TRIPLE
    STRING_CONTINUE
    STRING_END

Grammar

Rule 0     S' -> file_input
Rule 1     file_input -> ENDMARKER
Rule 2     file_input -> file_input_star ENDMARKER
Rule 3     file_input_star -> NEWLINE
Rule 4     file_input_star -> file_input_star NEWLINE
Rule 5     file_input_star -> stmt
Rule 6     file_input_star -> file_input_star stmt
Rule 7     decorator -> AT dotted_name NEWLINE
Rule 8     decorator -> AT dotted_name LPAR RPAR NEWLINE
Rule 9     decorator -> AT dotted_name LPAR arglist RPAR NEWLINE
Rule 10    decorators -> decorators_plus
Rule 11    decorators_plus -> decorator
Rule 12    decorators_plus -> decorators_plus decorator
Rule 13    funcdef -> DEF NAME parameters COLON suite
Rule 14    funcdef -> decorators DEF NAME parameters COLON suite
Rule 15    parameters -> LPAR RPAR
Rule 16    parameters -> LPAR varargslist RPAR
Rule 17    varargslist -> fpdef COMMA STAR NAME
Rule 18    varargslist -> fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME
Rule 19    varargslist -> fpdef COMMA DOUBLESTAR NAME
Rule 20    varargslist -> fpdef
Rule 21    varargslist -> fpdef COMMA
Rule 22    varargslist -> fpdef varargslist_star COMMA STAR NAME
Rule 23    varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
Rule 24    varargslist -> fpdef varargslist_star COMMA DOUBLESTAR NAME
Rule 25    varargslist -> fpdef varargslist_star
Rule 26    varargslist -> fpdef varargslist_star COMMA
Rule 27    varargslist -> fpdef EQUAL test COMMA STAR NAME
Rule 28    varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME
Rule 29    varargslist -> fpdef EQUAL test COMMA DOUBLESTAR NAME
Rule 30    varargslist -> fpdef EQUAL test
Rule 31    varargslist -> fpdef EQUAL test COMMA
Rule 32    varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME
Rule 33    varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
Rule 34    varargslist -> fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME
Rule 35    varargslist -> fpdef EQUAL test varargslist_star
Rule 36    varargslist -> fpdef EQUAL test varargslist_star COMMA
Rule 37    varargslist -> STAR NAME
Rule 38    varargslist -> STAR NAME COMMA DOUBLESTAR NAME
Rule 39    varargslist -> DOUBLESTAR NAME
Rule 40    varargslist_star -> COMMA fpdef
Rule 41    varargslist_star -> COMMA fpdef EQUAL test
Rule 42    varargslist_star -> varargslist_star COMMA fpdef
Rule 43    varargslist_star -> varargslist_star COMMA fpdef EQUAL test
Rule 44    fpdef -> NAME
Rule 45    fpdef -> LPAR fplist RPAR
Rule 46    fplist -> fpdef
Rule 47    fplist -> fpdef COMMA
Rule 48    fplist -> fpdef fplist_star
Rule 49    fplist -> fpdef fplist_star COMMA
Rule 50    fplist_star -> COMMA fpdef
Rule 51    fplist_star -> fplist_star COMMA fpdef
Rule 52    stmt -> simple_stmt
Rule 53    stmt -> compound_stmt
Rule 54    simple_stmt -> small_stmt NEWLINE
Rule 55    simple_stmt -> small_stmt SEMI NEWLINE
Rule 56    simple_stmt -> small_stmt simple_stmt_star NEWLINE
Rule 57    simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE
Rule 58    simple_stmt_star -> SEMI small_stmt
Rule 59    simple_stmt_star -> simple_stmt_star SEMI small_stmt
Rule 60    small_stmt -> expr_stmt
Rule 61    small_stmt -> print_stmt
Rule 62    small_stmt -> del_stmt
Rule 63    small_stmt -> pass_stmt
Rule 64    small_stmt -> flow_stmt
Rule 65    small_stmt -> import_stmt
Rule 66    small_stmt -> global_stmt
Rule 67    small_stmt -> exec_stmt
Rule 68    small_stmt -> assert_stmt
Rule 69    expr_stmt -> NAME NAME EQUAL yield_expr
Rule 70    expr_stmt -> NAME NAME EQUAL testlist
Rule 71    expr_stmt -> testlist augassign yield_expr
Rule 72    expr_stmt -> testlist augassign testlist
Rule 73    expr_stmt -> testlist
Rule 74    expr_stmt -> testlist expr_stmt_star
Rule 75    expr_stmt_star -> EQUAL yield_expr
Rule 76    expr_stmt_star -> EQUAL testlist
Rule 77    expr_stmt_star -> expr_stmt_star EQUAL yield_expr
Rule 78    expr_stmt_star -> expr_stmt_star EQUAL testlist
Rule 79    augassign -> PLUSEQUAL
Rule 80    augassign -> MINEQUAL
Rule 81    augassign -> STAREQUAL
Rule 82    augassign -> SLASHEQUAL
Rule 83    augassign -> PERCENTEQUAL
Rule 84    augassign -> AMPEREQUAL
Rule 85    augassign -> VBAREQUAL
Rule 86    augassign -> CIRCUMFLEXEQUAL
Rule 87    augassign -> LEFTSHIFTEQUAL
Rule 88    augassign -> RIGHTSHIFTEQUAL
Rule 89    augassign -> DOUBLESTAREQUAL
Rule 90    augassign -> DOUBLESLASHEQUAL
Rule 91    print_stmt -> PRINT
Rule 92    print_stmt -> PRINT test
Rule 93    print_stmt -> PRINT test COMMA
Rule 94    print_stmt -> PRINT test print_stmt_plus
Rule 95    print_stmt -> PRINT test print_stmt_plus COMMA
Rule 96    print_stmt -> PRINT RIGHTSHIFT test
Rule 97    print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus
Rule 98    print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus COMMA
Rule 99    print_stmt_plus -> COMMA test
Rule 100   print_stmt_plus -> print_stmt_plus COMMA test
Rule 101   del_stmt -> DEL exprlist
Rule 102   pass_stmt -> PASS
Rule 103   flow_stmt -> break_stmt
Rule 104   flow_stmt -> continue_stmt
Rule 105   flow_stmt -> return_stmt
Rule 106   flow_stmt -> raise_stmt
Rule 107   flow_stmt -> yield_stmt
Rule 108   break_stmt -> BREAK
Rule 109   continue_stmt -> CONTINUE
Rule 110   return_stmt -> RETURN
Rule 111   return_stmt -> RETURN testlist
Rule 112   yield_stmt -> yield_expr
Rule 113   raise_stmt -> RAISE
Rule 114   raise_stmt -> RAISE test
Rule 115   raise_stmt -> RAISE test COMMA test
Rule 116   raise_stmt -> RAISE test COMMA test COMMA test
Rule 117   import_stmt -> import_name
Rule 118   import_stmt -> import_from
Rule 119   import_name -> IMPORT dotted_as_names
Rule 120   import_from -> FROM dotted_name IMPORT STAR
Rule 121   import_from -> FROM dotted_name IMPORT LPAR import_as_names RPAR
Rule 122   import_from -> FROM dotted_name IMPORT import_as_names
Rule 123   import_from -> FROM import_from_plus dotted_name IMPORT STAR
Rule 124   import_from -> FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
Rule 125   import_from -> FROM import_from_plus dotted_name IMPORT import_as_names
Rule 126   import_from -> FROM import_from_plus IMPORT STAR
Rule 127   import_from -> FROM import_from_plus IMPORT LPAR import_as_names RPAR
Rule 128   import_from -> FROM import_from_plus IMPORT import_as_names
Rule 129   import_from_plus -> DOT
Rule 130   import_from_plus -> import_from_plus DOT
Rule 131   import_as_name -> NAME
Rule 132   import_as_name -> NAME AS NAME
Rule 133   dotted_as_name -> dotted_name
Rule 134   dotted_as_name -> dotted_name AS NAME
Rule 135   import_as_names -> import_as_name
Rule 136   import_as_names -> import_as_name COMMA
Rule 137   import_as_names -> import_as_name import_as_names_star
Rule 138   import_as_names -> import_as_name import_as_names_star COMMA
Rule 139   import_as_names_star -> COMMA import_as_name
Rule 140   import_as_names_star -> import_as_names_star COMMA import_as_name
Rule 141   dotted_as_names -> dotted_as_name
Rule 142   dotted_as_names -> dotted_as_name dotted_as_names_star
Rule 143   dotted_as_names_star -> COMMA dotted_as_name
Rule 144   dotted_as_names_star -> dotted_as_names_star COMMA dotted_as_name
Rule 145   dotted_name -> NAME
Rule 146   dotted_name -> NAME dotted_name_star
Rule 147   dotted_name_star -> DOT NAME
Rule 148   dotted_name_star -> dotted_name_star DOT NAME
Rule 149   global_stmt -> GLOBAL NAME
Rule 150   global_stmt -> GLOBAL NAME global_stmt_star
Rule 151   global_stmt_star -> COMMA NAME
Rule 152   global_stmt_star -> global_stmt_star COMMA NAME
Rule 153   exec_stmt -> EXEC expr
Rule 154   exec_stmt -> EXEC expr IN test
Rule 155   exec_stmt -> EXEC expr IN test COMMA test
Rule 156   assert_stmt -> ASSERT test
Rule 157   assert_stmt -> ASSERT test COMMA test
Rule 158   compound_stmt -> if_stmt
Rule 159   compound_stmt -> while_stmt
Rule 160   compound_stmt -> for_stmt
Rule 161   compound_stmt -> try_stmt
Rule 162   compound_stmt -> with_stmt
Rule 163   compound_stmt -> funcdef
Rule 164   compound_stmt -> classdef
Rule 165   if_stmt -> IF test COLON suite
Rule 166   if_stmt -> IF test COLON suite ELSE COLON suite
Rule 167   if_stmt -> IF test COLON suite if_stmt_star
Rule 168   if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite
Rule 169   if_stmt_star -> ELIF test COLON suite
Rule 170   if_stmt_star -> if_stmt_star ELIF test COLON suite
Rule 171   while_stmt -> WHILE test COLON suite
Rule 172   while_stmt -> WHILE test COLON suite ELSE COLON suite
Rule 173   for_stmt -> FOR exprlist IN testlist COLON suite
Rule 174   for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite
Rule 175   try_stmt -> TRY COLON suite try_stmt_plus
Rule 176   try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite
Rule 177   try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite
Rule 178   try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
Rule 179   try_stmt -> TRY COLON suite FINALLY COLON suite
Rule 180   try_stmt_plus -> except_clause COLON suite
Rule 181   try_stmt_plus -> try_stmt_plus except_clause COLON suite
Rule 182   with_stmt -> WITH test COLON suite
Rule 183   with_stmt -> WITH test with_var COLON suite
Rule 184   with_var -> AS expr
Rule 185   except_clause -> EXCEPT
Rule 186   except_clause -> EXCEPT test
Rule 187   except_clause -> EXCEPT test AS test
Rule 188   except_clause -> EXCEPT test COMMA test
Rule 189   suite -> simple_stmt
Rule 190   suite -> NEWLINE INDENT suite_plus DEDENT
Rule 191   suite_plus -> stmt
Rule 192   suite_plus -> suite_plus stmt
Rule 193   testlist_safe -> old_test
Rule 194   testlist_safe -> old_test testlist_safe_plus
Rule 195   testlist_safe -> old_test testlist_safe_plus COMMA
Rule 196   testlist_safe_plus -> COMMA old_test
Rule 197   testlist_safe_plus -> testlist_safe_plus COMMA old_test
Rule 198   old_test -> or_test
Rule 199   old_test -> old_lambdef
Rule 200   old_lambdef -> LAMBDA COLON old_test
Rule 201   old_lambdef -> LAMBDA varargslist COLON old_test
Rule 202   test -> or_test
Rule 203   test -> or_test IF or_test ELSE test
Rule 204   test -> lambdef
Rule 205   or_test -> and_test
Rule 206   or_test -> and_test or_test_star
Rule 207   or_test_star -> OR and_test
Rule 208   or_test_star -> or_test_star OR and_test
Rule 209   and_test -> not_test
Rule 210   and_test -> not_test and_test_star
Rule 211   and_test_star -> AND not_test
Rule 212   and_test_star -> and_test_star AND not_test
Rule 213   not_test -> NOT not_test
Rule 214   not_test -> comparison
Rule 215   comparison -> expr
Rule 216   comparison -> expr comparison_star
Rule 217   comparison_star -> comp_op expr
Rule 218   comparison_star -> comparison_star comp_op expr
Rule 219   comp_op -> LESS
Rule 220   comp_op -> GREATER
Rule 221   comp_op -> EQEQUAL
Rule 222   comp_op -> GREATEREQUAL
Rule 223   comp_op -> LESSEQUAL
Rule 224   comp_op -> NOTEQUAL
Rule 225   comp_op -> IN
Rule 226   comp_op -> IS
Rule 227   comp_op -> NOT IN
Rule 228   comp_op -> IS NOT
Rule 229   expr -> xor_expr
Rule 230   expr -> xor_expr expr_star
Rule 231   expr_star -> VBAR xor_expr
Rule 232   expr_star -> expr_star VBAR xor_expr
Rule 233   xor_expr -> and_expr
Rule 234   xor_expr -> and_expr xor_expr_star
Rule 235   xor_expr_star -> CIRCUMFLEX and_expr
Rule 236   xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr
Rule 237   and_expr -> shift_expr
Rule 238   and_expr -> shift_expr and_expr_star
Rule 239   and_expr_star -> AMPER shift_expr
Rule 240   and_expr_star -> and_expr_star AMPER shift_expr
Rule 241   shift_expr -> arith_expr
Rule 242   shift_expr -> arith_expr shift_expr_star
Rule 243   shift_expr_star -> LEFTSHIFT arith_expr
Rule 244   shift_expr_star -> RIGHTSHIFT arith_expr
Rule 245   shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr
Rule 246   shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr
Rule 247   arith_expr -> term
Rule 248   arith_expr -> term arith_expr_star
Rule 249   arith_expr_star -> PLUS term
Rule 250   arith_expr_star -> MINUS term
Rule 251   arith_expr_star -> arith_expr_star PLUS term
Rule 252   arith_expr_star -> arith_expr_star MINUS term
Rule 253   term -> factor
Rule 254   term -> factor term_star
Rule 255   term_star -> STAR factor
Rule 256   term_star -> SLASH factor
Rule 257   term_star -> PERCENT factor
Rule 258   term_star -> DOUBLESLASH factor
Rule 259   term_star -> term_star STAR factor
Rule 260   term_star -> term_star SLASH factor
Rule 261   term_star -> term_star PERCENT factor
Rule 262   term_star -> term_star DOUBLESLASH factor
Rule 263   factor -> PLUS factor
Rule 264   factor -> MINUS factor
Rule 265   factor -> TILDE factor
Rule 266   factor -> power
Rule 267   power -> atom
Rule 268   power -> atom DOUBLESTAR factor
Rule 269   power -> atom power_star
Rule 270   power -> atom power_star DOUBLESTAR factor
Rule 271   power_star -> trailer
Rule 272   power_star -> power_star trailer
Rule 273   atom -> LPAR RPAR
Rule 274   atom -> LPAR yield_expr RPAR
Rule 275   atom -> LPAR testlist_gexp RPAR
Rule 276   atom -> LSQB RSQB
Rule 277   atom -> LSQB listmaker RSQB
Rule 278   atom -> LBRACE RBRACE
Rule 279   atom -> LBRACE dictmaker RBRACE
Rule 280   atom -> BACKQUOTE testlist1 BACKQUOTE
Rule 281   atom -> NAME
Rule 282   atom -> NUMBER
Rule 283   atom -> atom_plus
Rule 284   atom_plus -> STRING
Rule 285   atom_plus -> atom_plus STRING
Rule 286   listmaker -> test list_for
Rule 287   listmaker -> test
Rule 288   listmaker -> test COMMA
Rule 289   listmaker -> test listmaker_star
Rule 290   listmaker -> test listmaker_star COMMA
Rule 291   listmaker_star -> COMMA test
Rule 292   listmaker_star -> listmaker_star COMMA test
Rule 293   testlist_gexp -> test gen_for
Rule 294   testlist_gexp -> test
Rule 295   testlist_gexp -> test COMMA
Rule 296   testlist_gexp -> test testlist_gexp_star
Rule 297   testlist_gexp -> test testlist_gexp_star COMMA
Rule 298   testlist_gexp_star -> COMMA test
Rule 299   testlist_gexp_star -> testlist_gexp_star COMMA test
Rule 300   lambdef -> LAMBDA COLON test
Rule 301   lambdef -> LAMBDA varargslist COLON test
Rule 302   trailer -> LPAR RPAR
Rule 303   trailer -> LPAR arglist RPAR
Rule 304   trailer -> LSQB subscriptlist RSQB
Rule 305   trailer -> DOT NAME
Rule 306   subscriptlist -> subscript
Rule 307   subscriptlist -> subscript COMMA
Rule 308   subscriptlist -> subscript subscriptlist_star
Rule 309   subscriptlist -> subscript subscriptlist_star COMMA
Rule 310   subscriptlist_star -> COMMA subscript
Rule 311   subscriptlist_star -> subscriptlist_star COMMA subscript
Rule 312   subscript -> DOT DOT DOT
Rule 313   subscript -> test
Rule 314   subscript -> COLON
Rule 315   subscript -> COLON sliceop
Rule 316   subscript -> COLON test
Rule 317   subscript -> COLON test sliceop
Rule 318   subscript -> test COLON
Rule 319   subscript -> test COLON sliceop
Rule 320   subscript -> test COLON test
Rule 321   subscript -> test COLON test sliceop
Rule 322   sliceop -> COLON
Rule 323   sliceop -> COLON test
Rule 324   exprlist -> expr
Rule 325   exprlist -> expr COMMA
Rule 326   exprlist -> expr exprlist_star
Rule 327   exprlist -> expr exprlist_star COMMA
Rule 328   exprlist_star -> COMMA expr
Rule 329   exprlist_star -> exprlist_star COMMA expr
Rule 330   testlist -> test
Rule 331   testlist -> test COMMA
Rule 332   testlist -> test testlist_star
Rule 333   testlist -> test testlist_star COMMA
Rule 334   testlist_star -> COMMA test
Rule 335   testlist_star -> testlist_star COMMA test
Rule 336   dictmaker -> test COLON test
Rule 337   dictmaker -> test COLON test COMMA
Rule 338   dictmaker -> test COLON test dictmaker_star
Rule 339   dictmaker -> test COLON test dictmaker_star COMMA
Rule 340   dictmaker_star -> COMMA test COLON test
Rule 341   dictmaker_star -> dictmaker_star COMMA test COLON test
Rule 342   classdef -> CLASS NAME COLON suite
Rule 343   classdef -> CLASS NAME LPAR RPAR COLON suite
Rule 344   classdef -> CLASS NAME LPAR testlist RPAR COLON suite
Rule 345   arglist -> argument
Rule 346   arglist -> argument COMMA
Rule 347   arglist -> STAR test
Rule 348   arglist -> STAR test COMMA DOUBLESTAR test
Rule 349   arglist -> DOUBLESTAR test
Rule 350   arglist -> arglist_star argument
Rule 351   arglist -> arglist_star argument COMMA
Rule 352   arglist -> arglist_star STAR test
Rule 353   arglist -> arglist_star STAR test COMMA DOUBLESTAR test
Rule 354   arglist -> arglist_star DOUBLESTAR test
Rule 355   arglist_star -> argument COMMA
Rule 356   arglist_star -> arglist_star argument COMMA
Rule 357   argument -> test
Rule 358   argument -> test gen_for
Rule 359   argument -> test EQUAL test
Rule 360   list_iter -> list_for
Rule 361   list_iter -> list_if
Rule 362   list_for -> FOR exprlist IN testlist_safe
Rule 363   list_for -> FOR exprlist IN testlist_safe list_iter
Rule 364   list_if -> IF old_test
Rule 365   list_if -> IF old_test list_iter
Rule 366   gen_iter -> gen_for
Rule 367   gen_iter -> gen_if
Rule 368   gen_for -> FOR exprlist IN or_test
Rule 369   gen_for -> FOR exprlist IN or_test gen_iter
Rule 370   gen_if -> IF old_test
Rule 371   gen_if -> IF old_test gen_iter
Rule 372   testlist1 -> test
Rule 373   testlist1 -> test testlist1_star
Rule 374   testlist1_star -> COMMA test
Rule 375   testlist1_star -> testlist1_star COMMA test
Rule 376   encoding_decl -> NAME
Rule 377   yield_expr -> YIELD
Rule 378   yield_expr -> YIELD testlist

Terminals, with rules where they appear

AMPER                : 239 240
AMPEREQUAL           : 84
AND                  : 211 212
AS                   : 132 134 184 187
ASSERT               : 156 157
AT                   : 7 8 9
BACKQUOTE            : 280 280
BREAK                : 108
CIRCUMFLEX           : 235 236
CIRCUMFLEXEQUAL      : 86
CLASS                : 342 343 344
COLON                : 13 14 165 166 166 167 168 168 169 170 171 172 172 173 174 174 175 176 176 177 177 178 178 178 179 179 180 181 182 183 200 201 300 301 314 315 316 317 318 319 320 321 322 323 336 337 338 339 340 341 342 343 344
COMMA                : 17 18 18 19 21 22 23 23 24 26 27 28 28 29 31 32 33 33 34 36 38 40 41 42 43 47 49 50 51 93 95 98 99 100 115 116 116 136 138 139 140 143 144 151 152 155 157 188 195 196 197 288 290 291 292 295 297 298 299 307 309 310 311 325 327 328 329 331 333 334 335 337 339 340 341 346 348 351 353 355 356 374 375
CONTINUE             : 109
DEDENT               : 190
DEF                  : 13 14
DEL                  : 101
DOT                  : 129 130 147 148 305 312 312 312
DOUBLESLASH          : 258 262
DOUBLESLASHEQUAL     : 90
DOUBLESTAR           : 18 19 23 24 28 29 33 34 38 39 268 270 348 349 353 354
DOUBLESTAREQUAL      : 89
ELIF                 : 169 170
ELSE                 : 166 168 172 174 177 178 203
ENDMARKER            : 1 2
EQEQUAL              : 221
EQUAL                : 27 28 29 30 31 32 33 34 35 36 41 43 69 70 75 76 77 78 359
EXCEPT               : 185 186 187 188
EXEC                 : 153 154 155
FINALLY              : 176 178 179
FOR                  : 173 174 362 363 368 369
FROM                 : 120 121 122 123 124 125 126 127 128
GLOBAL               : 149 150
GREATER              : 220
GREATEREQUAL         : 222
IF                   : 165 166 167 168 203 364 365 370 371
IMPORT               : 119 120 121 122 123 124 125 126 127 128
IN                   : 154 155 173 174 225 227 362 363 368 369
INDENT               : 190
IS                   : 226 228
LAMBDA               : 200 201 300 301
LBRACE               : 278 279
LEFTSHIFT            : 243 245
LEFTSHIFTEQUAL       : 87
LESS                 : 219
LESSEQUAL            : 223
LPAR                 : 8 9 15 16 45 121 124 127 273 274 275 302 303 343 344
LSQB                 : 276 277 304
MINEQUAL             : 80
MINUS                : 250 252 264
NAME                 : 13 14 17 18 18 19 22 23 23 24 27 28 28 29 32 33 33 34 37 38 38 39 44 69 69 70 70 131 132 132 134 145 146 147 148 149 150 151 152 281 305 342 343 344 376
NEWLINE              : 3 4 7 8 9 54 55 56 57 190
NOT                  : 213 227 228
NOTEQUAL             : 224
NUMBER               : 282
OR                   : 207 208
PASS                 : 102
PERCENT              : 257 261
PERCENTEQUAL         : 83
PLUS                 : 249 251 263
PLUSEQUAL            : 79
PRINT                : 91 92 93 94 95 96 97 98
RAISE                : 113 114 115 116
RBRACE               : 278 279
RETURN               : 110 111
RIGHTSHIFT           : 96 97 98 244 246
RIGHTSHIFTEQUAL      : 88
RPAR                 : 8 9 15 16 45 121 124 127 273 274 275 302 303 343 344
RSQB                 : 276 277 304
SEMI                 : 55 57 58 59
SLASH                : 256 260
SLASHEQUAL           : 82
STAR                 : 17 18 22 23 27 28 32 33 37 38 120 123 126 255 259 347 348 352 353
STAREQUAL            : 81
STRING               : 284 285
STRING_CONTINUE      : 
STRING_END           : 
STRING_START_SINGLE  : 
STRING_START_TRIPLE  : 
TILDE                : 265
TRY                  : 175 176 177 178 179
VBAR                 : 231 232
VBAREQUAL            : 85
WHILE                : 171 172
WITH                 : 182 183
WS                   : 
YIELD                : 377 378
error                : 

Nonterminals, with rules where they appear

and_expr             : 233 234 235 236
and_expr_star        : 238 240
and_test             : 205 206 207 208
and_test_star        : 210 212
arglist              : 9 303
arglist_star         : 350 351 352 353 354 356
argument             : 345 346 350 351 355 356
arith_expr           : 241 242 243 244 245 246
arith_expr_star      : 248 251 252
assert_stmt          : 68
atom                 : 267 268 269 270
atom_plus            : 283 285
augassign            : 71 72
break_stmt           : 103
classdef             : 164
comp_op              : 217 218
comparison           : 214
comparison_star      : 216 218
compound_stmt        : 53
continue_stmt        : 104
decorator            : 11 12
decorators           : 14
decorators_plus      : 10 12
del_stmt             : 62
dictmaker            : 279
dictmaker_star       : 338 339 341
dotted_as_name       : 141 142 143 144
dotted_as_names      : 119
dotted_as_names_star : 142 144
dotted_name          : 7 8 9 120 121 122 123 124 125 133 134
dotted_name_star     : 146 148
encoding_decl        : 
except_clause        : 180 181
exec_stmt            : 67
expr                 : 153 154 155 184 215 216 217 218 324 325 326 327 328 329
expr_star            : 230 232
expr_stmt            : 60
expr_stmt_star       : 74 77 78
exprlist             : 101 173 174 362 363 368 369
exprlist_star        : 326 327 329
factor               : 253 254 255 256 257 258 259 260 261 262 263 264 265 268 270
file_input           : 0
file_input_star      : 2 4 6
flow_stmt            : 64
for_stmt             : 160
fpdef                : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 40 41 42 43 46 47 48 49 50 51
fplist               : 45
fplist_star          : 48 49 51
funcdef              : 163
gen_for              : 293 358 366
gen_if               : 367
gen_iter             : 369 371
global_stmt          : 66
global_stmt_star     : 150 152
if_stmt              : 158
if_stmt_star         : 167 168 170
import_as_name       : 135 136 137 138 139 140
import_as_names      : 121 122 124 125 127 128
import_as_names_star : 137 138 140
import_from          : 118
import_from_plus     : 123 124 125 126 127 128 130
import_name          : 117
import_stmt          : 65
lambdef              : 204
list_for             : 286 360
list_if              : 361
list_iter            : 363 365
listmaker            : 277
listmaker_star       : 289 290 292
not_test             : 209 210 211 212 213
old_lambdef          : 199
old_test             : 193 194 195 196 197 200 201 364 365 370 371
or_test              : 198 202 203 203 368 369
or_test_star         : 206 208
parameters           : 13 14
pass_stmt            : 63
power                : 266
power_star           : 269 270 272
print_stmt           : 61
print_stmt_plus      : 94 95 97 98 100
raise_stmt           : 106
return_stmt          : 105
shift_expr           : 237 238 239 240
shift_expr_star      : 242 245 246
simple_stmt          : 52 189
simple_stmt_star     : 56 57 59
sliceop              : 315 317 319 321
small_stmt           : 54 55 56 57 58 59
stmt                 : 5 6 191 192
subscript            : 306 307 308 309 310 311
subscriptlist        : 304
subscriptlist_star   : 308 309 311
suite                : 13 14 165 166 166 167 168 168 169 170 171 172 172 173 174 174 175 176 176 177 177 178 178 178 179 179 180 181 182 183 342 343 344
suite_plus           : 190 192
term                 : 247 248 249 250 251 252
term_star            : 254 259 260 261 262
test                 : 27 28 29 30 31 32 33 34 35 36 41 43 92 93 94 95 96 97 98 99 100 114 115 115 116 116 116 154 155 155 156 157 157 165 166 167 168 169 170 171 172 182 183 186 187 187 188 188 203 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 313 316 317 318 319 320 320 321 321 323 330 331 332 333 334 335 336 336 337 337 338 338 339 339 340 340 341 341 347 348 348 349 352 353 353 354 357 358 359 359 372 373 374 375
testlist             : 70 71 72 72 73 74 76 78 111 173 174 344 378
testlist1            : 280
testlist1_star       : 373 375
testlist_gexp        : 275
testlist_gexp_star   : 296 297 299
testlist_safe        : 362 363
testlist_safe_plus   : 194 195 197
testlist_star        : 332 333 335
trailer              : 271 272
try_stmt             : 161
try_stmt_plus        : 175 176 177 178 181
varargslist          : 16 201 301
varargslist_star     : 22 23 24 25 26 32 33 34 35 36 42 43
while_stmt           : 159
with_stmt            : 162
with_var             : 183
xor_expr             : 229 230 231 232
xor_expr_star        : 234 236
yield_expr           : 69 71 75 77 112 274
yield_stmt           : 107

Parsing method: LALR

state 0

    (0) S' -> . file_input
    (1) file_input -> . ENDMARKER
    (2) file_input -> . file_input_star ENDMARKER
    (3) file_input_star -> . NEWLINE
    (4) file_input_star -> . file_input_star NEWLINE
    (5) file_input_star -> . stmt
    (6) file_input_star -> . file_input_star stmt
    (52) stmt -> . simple_stmt
    (53) stmt -> . compound_stmt
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (158) compound_stmt -> . if_stmt
    (159) compound_stmt -> . while_stmt
    (160) compound_stmt -> . for_stmt
    (161) compound_stmt -> . try_stmt
    (162) compound_stmt -> . with_stmt
    (163) compound_stmt -> . funcdef
    (164) compound_stmt -> . classdef
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (165) if_stmt -> . IF test COLON suite
    (166) if_stmt -> . IF test COLON suite ELSE COLON suite
    (167) if_stmt -> . IF test COLON suite if_stmt_star
    (168) if_stmt -> . IF test COLON suite if_stmt_star ELSE COLON suite
    (171) while_stmt -> . WHILE test COLON suite
    (172) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (173) for_stmt -> . FOR exprlist IN testlist COLON suite
    (174) for_stmt -> . FOR exprlist IN testlist COLON suite ELSE COLON suite
    (175) try_stmt -> . TRY COLON suite try_stmt_plus
    (176) try_stmt -> . TRY COLON suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (182) with_stmt -> . WITH test COLON suite
    (183) with_stmt -> . WITH test with_var COLON suite
    (13) funcdef -> . DEF NAME parameters COLON suite
    (14) funcdef -> . decorators DEF NAME parameters COLON suite
    (342) classdef -> . CLASS NAME COLON suite
    (343) classdef -> . CLASS NAME LPAR RPAR COLON suite
    (344) classdef -> . CLASS NAME LPAR testlist RPAR COLON suite
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (10) decorators -> . decorators_plus
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (11) decorators_plus -> . decorator
    (12) decorators_plus -> . decorators_plus decorator
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (7) decorator -> . AT dotted_name NEWLINE
    (8) decorator -> . AT dotted_name LPAR RPAR NEWLINE
    (9) decorator -> . AT dotted_name LPAR arglist RPAR NEWLINE
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    ENDMARKER       shift and go to state 1
    NEWLINE         shift and go to state 9
    IF              shift and go to state 81
    WHILE           shift and go to state 54
    FOR             shift and go to state 39
    TRY             shift and go to state 41
    WITH            shift and go to state 7
    DEF             shift and go to state 31
    CLASS           shift and go to state 77
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    AT              shift and go to state 80
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    try_stmt                       shift and go to state 6
    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    or_test                        shift and go to state 25
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    import_name                    shift and go to state 76
    decorator                      shift and go to state 22
    flow_stmt                      shift and go to state 33
    file_input_star                shift and go to state 58
    expr_stmt                      shift and go to state 21
    atom                           shift and go to state 48
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 15
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    decorators                     shift and go to state 37
    compound_stmt                  shift and go to state 38
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 40
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 83
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    funcdef                        shift and go to state 5
    import_stmt                    shift and go to state 43
    pass_stmt                      shift and go to state 46
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    if_stmt                        shift and go to state 24
    decorators_plus                shift and go to state 47
    file_input                     shift and go to state 67
    raise_stmt                     shift and go to state 65
    del_stmt                       shift and go to state 84
    while_stmt                     shift and go to state 85
    expr                           shift and go to state 27
    with_stmt                      shift and go to state 26
    xor_expr                       shift and go to state 59
    yield_stmt                     shift and go to state 69

state 1

    (1) file_input -> ENDMARKER .

    $end            reduce using rule 1 (file_input -> ENDMARKER .)


state 2

    (273) atom -> LPAR . RPAR
    (274) atom -> LPAR . yield_expr RPAR
    (275) atom -> LPAR . testlist_gexp RPAR
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (293) testlist_gexp -> . test gen_for
    (294) testlist_gexp -> . test
    (295) testlist_gexp -> . test COMMA
    (296) testlist_gexp -> . test testlist_gexp_star
    (297) testlist_gexp -> . test testlist_gexp_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            shift and go to state 86
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    testlist_gexp                  shift and go to state 87
    factor                         shift and go to state 11
    test                           shift and go to state 88
    and_expr                       shift and go to state 13
    yield_expr                     shift and go to state 89
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 3

    (54) simple_stmt -> small_stmt . NEWLINE
    (55) simple_stmt -> small_stmt . SEMI NEWLINE
    (56) simple_stmt -> small_stmt . simple_stmt_star NEWLINE
    (57) simple_stmt -> small_stmt . simple_stmt_star SEMI NEWLINE
    (58) simple_stmt_star -> . SEMI small_stmt
    (59) simple_stmt_star -> . simple_stmt_star SEMI small_stmt

    NEWLINE         shift and go to state 91
    SEMI            shift and go to state 93

    simple_stmt_star               shift and go to state 92

state 4

    (118) import_stmt -> import_from .

    NEWLINE         reduce using rule 118 (import_stmt -> import_from .)
    SEMI            reduce using rule 118 (import_stmt -> import_from .)


state 5

    (163) compound_stmt -> funcdef .

    ENDMARKER       reduce using rule 163 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 163 (compound_stmt -> funcdef .)
    IF              reduce using rule 163 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 163 (compound_stmt -> funcdef .)
    FOR             reduce using rule 163 (compound_stmt -> funcdef .)
    TRY             reduce using rule 163 (compound_stmt -> funcdef .)
    WITH            reduce using rule 163 (compound_stmt -> funcdef .)
    DEF             reduce using rule 163 (compound_stmt -> funcdef .)
    CLASS           reduce using rule 163 (compound_stmt -> funcdef .)
    NAME            reduce using rule 163 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 163 (compound_stmt -> funcdef .)
    DEL             reduce using rule 163 (compound_stmt -> funcdef .)
    PASS            reduce using rule 163 (compound_stmt -> funcdef .)
    GLOBAL          reduce using rule 163 (compound_stmt -> funcdef .)
    EXEC            reduce using rule 163 (compound_stmt -> funcdef .)
    ASSERT          reduce using rule 163 (compound_stmt -> funcdef .)
    BREAK           reduce using rule 163 (compound_stmt -> funcdef .)
    CONTINUE        reduce using rule 163 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 163 (compound_stmt -> funcdef .)
    RAISE           reduce using rule 163 (compound_stmt -> funcdef .)
    IMPORT          reduce using rule 163 (compound_stmt -> funcdef .)
    FROM            reduce using rule 163 (compound_stmt -> funcdef .)
    YIELD           reduce using rule 163 (compound_stmt -> funcdef .)
    AT              reduce using rule 163 (compound_stmt -> funcdef .)
    LAMBDA          reduce using rule 163 (compound_stmt -> funcdef .)
    NOT             reduce using rule 163 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 163 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 163 (compound_stmt -> funcdef .)
    TILDE           reduce using rule 163 (compound_stmt -> funcdef .)
    LPAR            reduce using rule 163 (compound_stmt -> funcdef .)
    LSQB            reduce using rule 163 (compound_stmt -> funcdef .)
    LBRACE          reduce using rule 163 (compound_stmt -> funcdef .)
    BACKQUOTE       reduce using rule 163 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 163 (compound_stmt -> funcdef .)
    STRING          reduce using rule 163 (compound_stmt -> funcdef .)
    DEDENT          reduce using rule 163 (compound_stmt -> funcdef .)


state 6

    (161) compound_stmt -> try_stmt .

    ENDMARKER       reduce using rule 161 (compound_stmt -> try_stmt .)
    NEWLINE         reduce using rule 161 (compound_stmt -> try_stmt .)
    IF              reduce using rule 161 (compound_stmt -> try_stmt .)
    WHILE           reduce using rule 161 (compound_stmt -> try_stmt .)
    FOR             reduce using rule 161 (compound_stmt -> try_stmt .)
    TRY             reduce using rule 161 (compound_stmt -> try_stmt .)
    WITH            reduce using rule 161 (compound_stmt -> try_stmt .)
    DEF             reduce using rule 161 (compound_stmt -> try_stmt .)
    CLASS           reduce using rule 161 (compound_stmt -> try_stmt .)
    NAME            reduce using rule 161 (compound_stmt -> try_stmt .)
    PRINT           reduce using rule 161 (compound_stmt -> try_stmt .)
    DEL             reduce using rule 161 (compound_stmt -> try_stmt .)
    PASS            reduce using rule 161 (compound_stmt -> try_stmt .)
    GLOBAL          reduce using rule 161 (compound_stmt -> try_stmt .)
    EXEC            reduce using rule 161 (compound_stmt -> try_stmt .)
    ASSERT          reduce using rule 161 (compound_stmt -> try_stmt .)
    BREAK           reduce using rule 161 (compound_stmt -> try_stmt .)
    CONTINUE        reduce using rule 161 (compound_stmt -> try_stmt .)
    RETURN          reduce using rule 161 (compound_stmt -> try_stmt .)
    RAISE           reduce using rule 161 (compound_stmt -> try_stmt .)
    IMPORT          reduce using rule 161 (compound_stmt -> try_stmt .)
    FROM            reduce using rule 161 (compound_stmt -> try_stmt .)
    YIELD           reduce using rule 161 (compound_stmt -> try_stmt .)
    AT              reduce using rule 161 (compound_stmt -> try_stmt .)
    LAMBDA          reduce using rule 161 (compound_stmt -> try_stmt .)
    NOT             reduce using rule 161 (compound_stmt -> try_stmt .)
    PLUS            reduce using rule 161 (compound_stmt -> try_stmt .)
    MINUS           reduce using rule 161 (compound_stmt -> try_stmt .)
    TILDE           reduce using rule 161 (compound_stmt -> try_stmt .)
    LPAR            reduce using rule 161 (compound_stmt -> try_stmt .)
    LSQB            reduce using rule 161 (compound_stmt -> try_stmt .)
    LBRACE          reduce using rule 161 (compound_stmt -> try_stmt .)
    BACKQUOTE       reduce using rule 161 (compound_stmt -> try_stmt .)
    NUMBER          reduce using rule 161 (compound_stmt -> try_stmt .)
    STRING          reduce using rule 161 (compound_stmt -> try_stmt .)
    DEDENT          reduce using rule 161 (compound_stmt -> try_stmt .)


state 7

    (182) with_stmt -> WITH . test COLON suite
    (183) with_stmt -> WITH . test with_var COLON suite
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 94
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 8

    (264) factor -> MINUS . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 95
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 9

    (3) file_input_star -> NEWLINE .

    ENDMARKER       reduce using rule 3 (file_input_star -> NEWLINE .)
    NEWLINE         reduce using rule 3 (file_input_star -> NEWLINE .)
    IF              reduce using rule 3 (file_input_star -> NEWLINE .)
    WHILE           reduce using rule 3 (file_input_star -> NEWLINE .)
    FOR             reduce using rule 3 (file_input_star -> NEWLINE .)
    TRY             reduce using rule 3 (file_input_star -> NEWLINE .)
    WITH            reduce using rule 3 (file_input_star -> NEWLINE .)
    DEF             reduce using rule 3 (file_input_star -> NEWLINE .)
    CLASS           reduce using rule 3 (file_input_star -> NEWLINE .)
    NAME            reduce using rule 3 (file_input_star -> NEWLINE .)
    PRINT           reduce using rule 3 (file_input_star -> NEWLINE .)
    DEL             reduce using rule 3 (file_input_star -> NEWLINE .)
    PASS            reduce using rule 3 (file_input_star -> NEWLINE .)
    GLOBAL          reduce using rule 3 (file_input_star -> NEWLINE .)
    EXEC            reduce using rule 3 (file_input_star -> NEWLINE .)
    ASSERT          reduce using rule 3 (file_input_star -> NEWLINE .)
    BREAK           reduce using rule 3 (file_input_star -> NEWLINE .)
    CONTINUE        reduce using rule 3 (file_input_star -> NEWLINE .)
    RETURN          reduce using rule 3 (file_input_star -> NEWLINE .)
    RAISE           reduce using rule 3 (file_input_star -> NEWLINE .)
    IMPORT          reduce using rule 3 (file_input_star -> NEWLINE .)
    FROM            reduce using rule 3 (file_input_star -> NEWLINE .)
    YIELD           reduce using rule 3 (file_input_star -> NEWLINE .)
    AT              reduce using rule 3 (file_input_star -> NEWLINE .)
    LAMBDA          reduce using rule 3 (file_input_star -> NEWLINE .)
    NOT             reduce using rule 3 (file_input_star -> NEWLINE .)
    PLUS            reduce using rule 3 (file_input_star -> NEWLINE .)
    MINUS           reduce using rule 3 (file_input_star -> NEWLINE .)
    TILDE           reduce using rule 3 (file_input_star -> NEWLINE .)
    LPAR            reduce using rule 3 (file_input_star -> NEWLINE .)
    LSQB            reduce using rule 3 (file_input_star -> NEWLINE .)
    LBRACE          reduce using rule 3 (file_input_star -> NEWLINE .)
    BACKQUOTE       reduce using rule 3 (file_input_star -> NEWLINE .)
    NUMBER          reduce using rule 3 (file_input_star -> NEWLINE .)
    STRING          reduce using rule 3 (file_input_star -> NEWLINE .)


state 10

    (263) factor -> PLUS . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 96
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 11

    (253) term -> factor .
    (254) term -> factor . term_star
    (255) term_star -> . STAR factor
    (256) term_star -> . SLASH factor
    (257) term_star -> . PERCENT factor
    (258) term_star -> . DOUBLESLASH factor
    (259) term_star -> . term_star STAR factor
    (260) term_star -> . term_star SLASH factor
    (261) term_star -> . term_star PERCENT factor
    (262) term_star -> . term_star DOUBLESLASH factor

    PLUS            reduce using rule 253 (term -> factor .)
    MINUS           reduce using rule 253 (term -> factor .)
    LEFTSHIFT       reduce using rule 253 (term -> factor .)
    RIGHTSHIFT      reduce using rule 253 (term -> factor .)
    AMPER           reduce using rule 253 (term -> factor .)
    CIRCUMFLEX      reduce using rule 253 (term -> factor .)
    VBAR            reduce using rule 253 (term -> factor .)
    LESS            reduce using rule 253 (term -> factor .)
    GREATER         reduce using rule 253 (term -> factor .)
    EQEQUAL         reduce using rule 253 (term -> factor .)
    GREATEREQUAL    reduce using rule 253 (term -> factor .)
    LESSEQUAL       reduce using rule 253 (term -> factor .)
    NOTEQUAL        reduce using rule 253 (term -> factor .)
    IN              reduce using rule 253 (term -> factor .)
    IS              reduce using rule 253 (term -> factor .)
    NOT             reduce using rule 253 (term -> factor .)
    AND             reduce using rule 253 (term -> factor .)
    OR              reduce using rule 253 (term -> factor .)
    IF              reduce using rule 253 (term -> factor .)
    COMMA           reduce using rule 253 (term -> factor .)
    NEWLINE         reduce using rule 253 (term -> factor .)
    SEMI            reduce using rule 253 (term -> factor .)
    EQUAL           reduce using rule 253 (term -> factor .)
    FOR             reduce using rule 253 (term -> factor .)
    RPAR            reduce using rule 253 (term -> factor .)
    PLUSEQUAL       reduce using rule 253 (term -> factor .)
    MINEQUAL        reduce using rule 253 (term -> factor .)
    STAREQUAL       reduce using rule 253 (term -> factor .)
    SLASHEQUAL      reduce using rule 253 (term -> factor .)
    PERCENTEQUAL    reduce using rule 253 (term -> factor .)
    AMPEREQUAL      reduce using rule 253 (term -> factor .)
    VBAREQUAL       reduce using rule 253 (term -> factor .)
    CIRCUMFLEXEQUAL reduce using rule 253 (term -> factor .)
    LEFTSHIFTEQUAL  reduce using rule 253 (term -> factor .)
    RIGHTSHIFTEQUAL reduce using rule 253 (term -> factor .)
    DOUBLESTAREQUAL reduce using rule 253 (term -> factor .)
    DOUBLESLASHEQUAL reduce using rule 253 (term -> factor .)
    COLON           reduce using rule 253 (term -> factor .)
    AS              reduce using rule 253 (term -> factor .)
    BACKQUOTE       reduce using rule 253 (term -> factor .)
    RSQB            reduce using rule 253 (term -> factor .)
    RBRACE          reduce using rule 253 (term -> factor .)
    ELSE            reduce using rule 253 (term -> factor .)
    STAR            shift and go to state 97
    SLASH           shift and go to state 101
    PERCENT         shift and go to state 98
    DOUBLESLASH     shift and go to state 99

    term_star                      shift and go to state 100

state 12

    (119) import_name -> IMPORT . dotted_as_names
    (141) dotted_as_names -> . dotted_as_name
    (142) dotted_as_names -> . dotted_as_name dotted_as_names_star
    (133) dotted_as_name -> . dotted_name
    (134) dotted_as_name -> . dotted_name AS NAME
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star

    NAME            shift and go to state 103

    dotted_as_names                shift and go to state 104
    dotted_name                    shift and go to state 102
    dotted_as_name                 shift and go to state 105

state 13

    (233) xor_expr -> and_expr .
    (234) xor_expr -> and_expr . xor_expr_star
    (235) xor_expr_star -> . CIRCUMFLEX and_expr
    (236) xor_expr_star -> . xor_expr_star CIRCUMFLEX and_expr

    VBAR            reduce using rule 233 (xor_expr -> and_expr .)
    LESS            reduce using rule 233 (xor_expr -> and_expr .)
    GREATER         reduce using rule 233 (xor_expr -> and_expr .)
    EQEQUAL         reduce using rule 233 (xor_expr -> and_expr .)
    GREATEREQUAL    reduce using rule 233 (xor_expr -> and_expr .)
    LESSEQUAL       reduce using rule 233 (xor_expr -> and_expr .)
    NOTEQUAL        reduce using rule 233 (xor_expr -> and_expr .)
    IN              reduce using rule 233 (xor_expr -> and_expr .)
    IS              reduce using rule 233 (xor_expr -> and_expr .)
    NOT             reduce using rule 233 (xor_expr -> and_expr .)
    AND             reduce using rule 233 (xor_expr -> and_expr .)
    OR              reduce using rule 233 (xor_expr -> and_expr .)
    IF              reduce using rule 233 (xor_expr -> and_expr .)
    COMMA           reduce using rule 233 (xor_expr -> and_expr .)
    PLUSEQUAL       reduce using rule 233 (xor_expr -> and_expr .)
    MINEQUAL        reduce using rule 233 (xor_expr -> and_expr .)
    STAREQUAL       reduce using rule 233 (xor_expr -> and_expr .)
    SLASHEQUAL      reduce using rule 233 (xor_expr -> and_expr .)
    PERCENTEQUAL    reduce using rule 233 (xor_expr -> and_expr .)
    AMPEREQUAL      reduce using rule 233 (xor_expr -> and_expr .)
    VBAREQUAL       reduce using rule 233 (xor_expr -> and_expr .)
    CIRCUMFLEXEQUAL reduce using rule 233 (xor_expr -> and_expr .)
    LEFTSHIFTEQUAL  reduce using rule 233 (xor_expr -> and_expr .)
    RIGHTSHIFTEQUAL reduce using rule 233 (xor_expr -> and_expr .)
    DOUBLESTAREQUAL reduce using rule 233 (xor_expr -> and_expr .)
    DOUBLESLASHEQUAL reduce using rule 233 (xor_expr -> and_expr .)
    EQUAL           reduce using rule 233 (xor_expr -> and_expr .)
    NEWLINE         reduce using rule 233 (xor_expr -> and_expr .)
    SEMI            reduce using rule 233 (xor_expr -> and_expr .)
    BACKQUOTE       reduce using rule 233 (xor_expr -> and_expr .)
    RPAR            reduce using rule 233 (xor_expr -> and_expr .)
    COLON           reduce using rule 233 (xor_expr -> and_expr .)
    FOR             reduce using rule 233 (xor_expr -> and_expr .)
    AS              reduce using rule 233 (xor_expr -> and_expr .)
    RSQB            reduce using rule 233 (xor_expr -> and_expr .)
    ELSE            reduce using rule 233 (xor_expr -> and_expr .)
    RBRACE          reduce using rule 233 (xor_expr -> and_expr .)
    CIRCUMFLEX      shift and go to state 106

    xor_expr_star                  shift and go to state 107

state 14

    (153) exec_stmt -> EXEC . expr
    (154) exec_stmt -> EXEC . expr IN test
    (155) exec_stmt -> EXEC . expr IN test COMMA test
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 108

state 15

    (52) stmt -> simple_stmt .

    DEDENT          reduce using rule 52 (stmt -> simple_stmt .)
    IF              reduce using rule 52 (stmt -> simple_stmt .)
    WHILE           reduce using rule 52 (stmt -> simple_stmt .)
    FOR             reduce using rule 52 (stmt -> simple_stmt .)
    TRY             reduce using rule 52 (stmt -> simple_stmt .)
    WITH            reduce using rule 52 (stmt -> simple_stmt .)
    DEF             reduce using rule 52 (stmt -> simple_stmt .)
    CLASS           reduce using rule 52 (stmt -> simple_stmt .)
    NAME            reduce using rule 52 (stmt -> simple_stmt .)
    PRINT           reduce using rule 52 (stmt -> simple_stmt .)
    DEL             reduce using rule 52 (stmt -> simple_stmt .)
    PASS            reduce using rule 52 (stmt -> simple_stmt .)
    GLOBAL          reduce using rule 52 (stmt -> simple_stmt .)
    EXEC            reduce using rule 52 (stmt -> simple_stmt .)
    ASSERT          reduce using rule 52 (stmt -> simple_stmt .)
    BREAK           reduce using rule 52 (stmt -> simple_stmt .)
    CONTINUE        reduce using rule 52 (stmt -> simple_stmt .)
    RETURN          reduce using rule 52 (stmt -> simple_stmt .)
    RAISE           reduce using rule 52 (stmt -> simple_stmt .)
    IMPORT          reduce using rule 52 (stmt -> simple_stmt .)
    FROM            reduce using rule 52 (stmt -> simple_stmt .)
    YIELD           reduce using rule 52 (stmt -> simple_stmt .)
    AT              reduce using rule 52 (stmt -> simple_stmt .)
    LAMBDA          reduce using rule 52 (stmt -> simple_stmt .)
    NOT             reduce using rule 52 (stmt -> simple_stmt .)
    PLUS            reduce using rule 52 (stmt -> simple_stmt .)
    MINUS           reduce using rule 52 (stmt -> simple_stmt .)
    TILDE           reduce using rule 52 (stmt -> simple_stmt .)
    LPAR            reduce using rule 52 (stmt -> simple_stmt .)
    LSQB            reduce using rule 52 (stmt -> simple_stmt .)
    LBRACE          reduce using rule 52 (stmt -> simple_stmt .)
    BACKQUOTE       reduce using rule 52 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 52 (stmt -> simple_stmt .)
    STRING          reduce using rule 52 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 52 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 52 (stmt -> simple_stmt .)


state 16

    (71) expr_stmt -> testlist . augassign yield_expr
    (72) expr_stmt -> testlist . augassign testlist
    (73) expr_stmt -> testlist .
    (74) expr_stmt -> testlist . expr_stmt_star
    (79) augassign -> . PLUSEQUAL
    (80) augassign -> . MINEQUAL
    (81) augassign -> . STAREQUAL
    (82) augassign -> . SLASHEQUAL
    (83) augassign -> . PERCENTEQUAL
    (84) augassign -> . AMPEREQUAL
    (85) augassign -> . VBAREQUAL
    (86) augassign -> . CIRCUMFLEXEQUAL
    (87) augassign -> . LEFTSHIFTEQUAL
    (88) augassign -> . RIGHTSHIFTEQUAL
    (89) augassign -> . DOUBLESTAREQUAL
    (90) augassign -> . DOUBLESLASHEQUAL
    (75) expr_stmt_star -> . EQUAL yield_expr
    (76) expr_stmt_star -> . EQUAL testlist
    (77) expr_stmt_star -> . expr_stmt_star EQUAL yield_expr
    (78) expr_stmt_star -> . expr_stmt_star EQUAL testlist

    NEWLINE         reduce using rule 73 (expr_stmt -> testlist .)
    SEMI            reduce using rule 73 (expr_stmt -> testlist .)
    PLUSEQUAL       shift and go to state 118
    MINEQUAL        shift and go to state 111
    STAREQUAL       shift and go to state 109
    SLASHEQUAL      shift and go to state 110
    PERCENTEQUAL    shift and go to state 121
    AMPEREQUAL      shift and go to state 117
    VBAREQUAL       shift and go to state 113
    CIRCUMFLEXEQUAL shift and go to state 112
    LEFTSHIFTEQUAL  shift and go to state 123
    RIGHTSHIFTEQUAL shift and go to state 122
    DOUBLESTAREQUAL shift and go to state 116
    DOUBLESLASHEQUAL shift and go to state 119
    EQUAL           shift and go to state 115

    expr_stmt_star                 shift and go to state 120
    augassign                      shift and go to state 114

state 17

    (164) compound_stmt -> classdef .

    ENDMARKER       reduce using rule 164 (compound_stmt -> classdef .)
    NEWLINE         reduce using rule 164 (compound_stmt -> classdef .)
    IF              reduce using rule 164 (compound_stmt -> classdef .)
    WHILE           reduce using rule 164 (compound_stmt -> classdef .)
    FOR             reduce using rule 164 (compound_stmt -> classdef .)
    TRY             reduce using rule 164 (compound_stmt -> classdef .)
    WITH            reduce using rule 164 (compound_stmt -> classdef .)
    DEF             reduce using rule 164 (compound_stmt -> classdef .)
    CLASS           reduce using rule 164 (compound_stmt -> classdef .)
    NAME            reduce using rule 164 (compound_stmt -> classdef .)
    PRINT           reduce using rule 164 (compound_stmt -> classdef .)
    DEL             reduce using rule 164 (compound_stmt -> classdef .)
    PASS            reduce using rule 164 (compound_stmt -> classdef .)
    GLOBAL          reduce using rule 164 (compound_stmt -> classdef .)
    EXEC            reduce using rule 164 (compound_stmt -> classdef .)
    ASSERT          reduce using rule 164 (compound_stmt -> classdef .)
    BREAK           reduce using rule 164 (compound_stmt -> classdef .)
    CONTINUE        reduce using rule 164 (compound_stmt -> classdef .)
    RETURN          reduce using rule 164 (compound_stmt -> classdef .)
    RAISE           reduce using rule 164 (compound_stmt -> classdef .)
    IMPORT          reduce using rule 164 (compound_stmt -> classdef .)
    FROM            reduce using rule 164 (compound_stmt -> classdef .)
    YIELD           reduce using rule 164 (compound_stmt -> classdef .)
    AT              reduce using rule 164 (compound_stmt -> classdef .)
    LAMBDA          reduce using rule 164 (compound_stmt -> classdef .)
    NOT             reduce using rule 164 (compound_stmt -> classdef .)
    PLUS            reduce using rule 164 (compound_stmt -> classdef .)
    MINUS           reduce using rule 164 (compound_stmt -> classdef .)
    TILDE           reduce using rule 164 (compound_stmt -> classdef .)
    LPAR            reduce using rule 164 (compound_stmt -> classdef .)
    LSQB            reduce using rule 164 (compound_stmt -> classdef .)
    LBRACE          reduce using rule 164 (compound_stmt -> classdef .)
    BACKQUOTE       reduce using rule 164 (compound_stmt -> classdef .)
    NUMBER          reduce using rule 164 (compound_stmt -> classdef .)
    STRING          reduce using rule 164 (compound_stmt -> classdef .)
    DEDENT          reduce using rule 164 (compound_stmt -> classdef .)


state 18

    (68) small_stmt -> assert_stmt .

    NEWLINE         reduce using rule 68 (small_stmt -> assert_stmt .)
    SEMI            reduce using rule 68 (small_stmt -> assert_stmt .)


state 19

    (204) test -> lambdef .

    COLON           reduce using rule 204 (test -> lambdef .)
    COMMA           reduce using rule 204 (test -> lambdef .)
    RSQB            reduce using rule 204 (test -> lambdef .)
    EQUAL           reduce using rule 204 (test -> lambdef .)
    NEWLINE         reduce using rule 204 (test -> lambdef .)
    SEMI            reduce using rule 204 (test -> lambdef .)
    PLUSEQUAL       reduce using rule 204 (test -> lambdef .)
    MINEQUAL        reduce using rule 204 (test -> lambdef .)
    STAREQUAL       reduce using rule 204 (test -> lambdef .)
    SLASHEQUAL      reduce using rule 204 (test -> lambdef .)
    PERCENTEQUAL    reduce using rule 204 (test -> lambdef .)
    AMPEREQUAL      reduce using rule 204 (test -> lambdef .)
    VBAREQUAL       reduce using rule 204 (test -> lambdef .)
    CIRCUMFLEXEQUAL reduce using rule 204 (test -> lambdef .)
    LEFTSHIFTEQUAL  reduce using rule 204 (test -> lambdef .)
    RIGHTSHIFTEQUAL reduce using rule 204 (test -> lambdef .)
    DOUBLESTAREQUAL reduce using rule 204 (test -> lambdef .)
    DOUBLESLASHEQUAL reduce using rule 204 (test -> lambdef .)
    RPAR            reduce using rule 204 (test -> lambdef .)
    AS              reduce using rule 204 (test -> lambdef .)
    FOR             reduce using rule 204 (test -> lambdef .)
    BACKQUOTE       reduce using rule 204 (test -> lambdef .)
    RBRACE          reduce using rule 204 (test -> lambdef .)


state 20

    (102) pass_stmt -> PASS .

    NEWLINE         reduce using rule 102 (pass_stmt -> PASS .)
    SEMI            reduce using rule 102 (pass_stmt -> PASS .)


state 21

    (60) small_stmt -> expr_stmt .

    NEWLINE         reduce using rule 60 (small_stmt -> expr_stmt .)
    SEMI            reduce using rule 60 (small_stmt -> expr_stmt .)


state 22

    (11) decorators_plus -> decorator .

    AT              reduce using rule 11 (decorators_plus -> decorator .)
    DEF             reduce using rule 11 (decorators_plus -> decorator .)


state 23

    (247) arith_expr -> term .
    (248) arith_expr -> term . arith_expr_star
    (249) arith_expr_star -> . PLUS term
    (250) arith_expr_star -> . MINUS term
    (251) arith_expr_star -> . arith_expr_star PLUS term
    (252) arith_expr_star -> . arith_expr_star MINUS term

    LEFTSHIFT       reduce using rule 247 (arith_expr -> term .)
    RIGHTSHIFT      reduce using rule 247 (arith_expr -> term .)
    AMPER           reduce using rule 247 (arith_expr -> term .)
    CIRCUMFLEX      reduce using rule 247 (arith_expr -> term .)
    VBAR            reduce using rule 247 (arith_expr -> term .)
    LESS            reduce using rule 247 (arith_expr -> term .)
    GREATER         reduce using rule 247 (arith_expr -> term .)
    EQEQUAL         reduce using rule 247 (arith_expr -> term .)
    GREATEREQUAL    reduce using rule 247 (arith_expr -> term .)
    LESSEQUAL       reduce using rule 247 (arith_expr -> term .)
    NOTEQUAL        reduce using rule 247 (arith_expr -> term .)
    IN              reduce using rule 247 (arith_expr -> term .)
    IS              reduce using rule 247 (arith_expr -> term .)
    NOT             reduce using rule 247 (arith_expr -> term .)
    AND             reduce using rule 247 (arith_expr -> term .)
    OR              reduce using rule 247 (arith_expr -> term .)
    IF              reduce using rule 247 (arith_expr -> term .)
    COMMA           reduce using rule 247 (arith_expr -> term .)
    PLUSEQUAL       reduce using rule 247 (arith_expr -> term .)
    MINEQUAL        reduce using rule 247 (arith_expr -> term .)
    STAREQUAL       reduce using rule 247 (arith_expr -> term .)
    SLASHEQUAL      reduce using rule 247 (arith_expr -> term .)
    PERCENTEQUAL    reduce using rule 247 (arith_expr -> term .)
    AMPEREQUAL      reduce using rule 247 (arith_expr -> term .)
    VBAREQUAL       reduce using rule 247 (arith_expr -> term .)
    CIRCUMFLEXEQUAL reduce using rule 247 (arith_expr -> term .)
    LEFTSHIFTEQUAL  reduce using rule 247 (arith_expr -> term .)
    RIGHTSHIFTEQUAL reduce using rule 247 (arith_expr -> term .)
    DOUBLESTAREQUAL reduce using rule 247 (arith_expr -> term .)
    DOUBLESLASHEQUAL reduce using rule 247 (arith_expr -> term .)
    EQUAL           reduce using rule 247 (arith_expr -> term .)
    NEWLINE         reduce using rule 247 (arith_expr -> term .)
    SEMI            reduce using rule 247 (arith_expr -> term .)
    FOR             reduce using rule 247 (arith_expr -> term .)
    RPAR            reduce using rule 247 (arith_expr -> term .)
    COLON           reduce using rule 247 (arith_expr -> term .)
    AS              reduce using rule 247 (arith_expr -> term .)
    BACKQUOTE       reduce using rule 247 (arith_expr -> term .)
    RSQB            reduce using rule 247 (arith_expr -> term .)
    ELSE            reduce using rule 247 (arith_expr -> term .)
    RBRACE          reduce using rule 247 (arith_expr -> term .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126

    arith_expr_star                shift and go to state 124

state 24

    (158) compound_stmt -> if_stmt .

    ENDMARKER       reduce using rule 158 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 158 (compound_stmt -> if_stmt .)
    IF              reduce using rule 158 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 158 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 158 (compound_stmt -> if_stmt .)
    TRY             reduce using rule 158 (compound_stmt -> if_stmt .)
    WITH            reduce using rule 158 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 158 (compound_stmt -> if_stmt .)
    CLASS           reduce using rule 158 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 158 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 158 (compound_stmt -> if_stmt .)
    DEL             reduce using rule 158 (compound_stmt -> if_stmt .)
    PASS            reduce using rule 158 (compound_stmt -> if_stmt .)
    GLOBAL          reduce using rule 158 (compound_stmt -> if_stmt .)
    EXEC            reduce using rule 158 (compound_stmt -> if_stmt .)
    ASSERT          reduce using rule 158 (compound_stmt -> if_stmt .)
    BREAK           reduce using rule 158 (compound_stmt -> if_stmt .)
    CONTINUE        reduce using rule 158 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 158 (compound_stmt -> if_stmt .)
    RAISE           reduce using rule 158 (compound_stmt -> if_stmt .)
    IMPORT          reduce using rule 158 (compound_stmt -> if_stmt .)
    FROM            reduce using rule 158 (compound_stmt -> if_stmt .)
    YIELD           reduce using rule 158 (compound_stmt -> if_stmt .)
    AT              reduce using rule 158 (compound_stmt -> if_stmt .)
    LAMBDA          reduce using rule 158 (compound_stmt -> if_stmt .)
    NOT             reduce using rule 158 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 158 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 158 (compound_stmt -> if_stmt .)
    TILDE           reduce using rule 158 (compound_stmt -> if_stmt .)
    LPAR            reduce using rule 158 (compound_stmt -> if_stmt .)
    LSQB            reduce using rule 158 (compound_stmt -> if_stmt .)
    LBRACE          reduce using rule 158 (compound_stmt -> if_stmt .)
    BACKQUOTE       reduce using rule 158 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 158 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 158 (compound_stmt -> if_stmt .)
    DEDENT          reduce using rule 158 (compound_stmt -> if_stmt .)


state 25

    (202) test -> or_test .
    (203) test -> or_test . IF or_test ELSE test

    COLON           reduce using rule 202 (test -> or_test .)
    COMMA           reduce using rule 202 (test -> or_test .)
    RSQB            reduce using rule 202 (test -> or_test .)
    EQUAL           reduce using rule 202 (test -> or_test .)
    NEWLINE         reduce using rule 202 (test -> or_test .)
    SEMI            reduce using rule 202 (test -> or_test .)
    PLUSEQUAL       reduce using rule 202 (test -> or_test .)
    MINEQUAL        reduce using rule 202 (test -> or_test .)
    STAREQUAL       reduce using rule 202 (test -> or_test .)
    SLASHEQUAL      reduce using rule 202 (test -> or_test .)
    PERCENTEQUAL    reduce using rule 202 (test -> or_test .)
    AMPEREQUAL      reduce using rule 202 (test -> or_test .)
    VBAREQUAL       reduce using rule 202 (test -> or_test .)
    CIRCUMFLEXEQUAL reduce using rule 202 (test -> or_test .)
    LEFTSHIFTEQUAL  reduce using rule 202 (test -> or_test .)
    RIGHTSHIFTEQUAL reduce using rule 202 (test -> or_test .)
    DOUBLESTAREQUAL reduce using rule 202 (test -> or_test .)
    DOUBLESLASHEQUAL reduce using rule 202 (test -> or_test .)
    RPAR            reduce using rule 202 (test -> or_test .)
    AS              reduce using rule 202 (test -> or_test .)
    FOR             reduce using rule 202 (test -> or_test .)
    BACKQUOTE       reduce using rule 202 (test -> or_test .)
    RBRACE          reduce using rule 202 (test -> or_test .)
    IF              shift and go to state 127


state 26

    (162) compound_stmt -> with_stmt .

    ENDMARKER       reduce using rule 162 (compound_stmt -> with_stmt .)
    NEWLINE         reduce using rule 162 (compound_stmt -> with_stmt .)
    IF              reduce using rule 162 (compound_stmt -> with_stmt .)
    WHILE           reduce using rule 162 (compound_stmt -> with_stmt .)
    FOR             reduce using rule 162 (compound_stmt -> with_stmt .)
    TRY             reduce using rule 162 (compound_stmt -> with_stmt .)
    WITH            reduce using rule 162 (compound_stmt -> with_stmt .)
    DEF             reduce using rule 162 (compound_stmt -> with_stmt .)
    CLASS           reduce using rule 162 (compound_stmt -> with_stmt .)
    NAME            reduce using rule 162 (compound_stmt -> with_stmt .)
    PRINT           reduce using rule 162 (compound_stmt -> with_stmt .)
    DEL             reduce using rule 162 (compound_stmt -> with_stmt .)
    PASS            reduce using rule 162 (compound_stmt -> with_stmt .)
    GLOBAL          reduce using rule 162 (compound_stmt -> with_stmt .)
    EXEC            reduce using rule 162 (compound_stmt -> with_stmt .)
    ASSERT          reduce using rule 162 (compound_stmt -> with_stmt .)
    BREAK           reduce using rule 162 (compound_stmt -> with_stmt .)
    CONTINUE        reduce using rule 162 (compound_stmt -> with_stmt .)
    RETURN          reduce using rule 162 (compound_stmt -> with_stmt .)
    RAISE           reduce using rule 162 (compound_stmt -> with_stmt .)
    IMPORT          reduce using rule 162 (compound_stmt -> with_stmt .)
    FROM            reduce using rule 162 (compound_stmt -> with_stmt .)
    YIELD           reduce using rule 162 (compound_stmt -> with_stmt .)
    AT              reduce using rule 162 (compound_stmt -> with_stmt .)
    LAMBDA          reduce using rule 162 (compound_stmt -> with_stmt .)
    NOT             reduce using rule 162 (compound_stmt -> with_stmt .)
    PLUS            reduce using rule 162 (compound_stmt -> with_stmt .)
    MINUS           reduce using rule 162 (compound_stmt -> with_stmt .)
    TILDE           reduce using rule 162 (compound_stmt -> with_stmt .)
    LPAR            reduce using rule 162 (compound_stmt -> with_stmt .)
    LSQB            reduce using rule 162 (compound_stmt -> with_stmt .)
    LBRACE          reduce using rule 162 (compound_stmt -> with_stmt .)
    BACKQUOTE       reduce using rule 162 (compound_stmt -> with_stmt .)
    NUMBER          reduce using rule 162 (compound_stmt -> with_stmt .)
    STRING          reduce using rule 162 (compound_stmt -> with_stmt .)
    DEDENT          reduce using rule 162 (compound_stmt -> with_stmt .)


state 27

    (215) comparison -> expr .
    (216) comparison -> expr . comparison_star
    (217) comparison_star -> . comp_op expr
    (218) comparison_star -> . comparison_star comp_op expr
    (219) comp_op -> . LESS
    (220) comp_op -> . GREATER
    (221) comp_op -> . EQEQUAL
    (222) comp_op -> . GREATEREQUAL
    (223) comp_op -> . LESSEQUAL
    (224) comp_op -> . NOTEQUAL
    (225) comp_op -> . IN
    (226) comp_op -> . IS
    (227) comp_op -> . NOT IN
    (228) comp_op -> . IS NOT

    AND             reduce using rule 215 (comparison -> expr .)
    OR              reduce using rule 215 (comparison -> expr .)
    IF              reduce using rule 215 (comparison -> expr .)
    RPAR            reduce using rule 215 (comparison -> expr .)
    COMMA           reduce using rule 215 (comparison -> expr .)
    BACKQUOTE       reduce using rule 215 (comparison -> expr .)
    EQUAL           reduce using rule 215 (comparison -> expr .)
    NEWLINE         reduce using rule 215 (comparison -> expr .)
    SEMI            reduce using rule 215 (comparison -> expr .)
    COLON           reduce using rule 215 (comparison -> expr .)
    RSQB            reduce using rule 215 (comparison -> expr .)
    FOR             reduce using rule 215 (comparison -> expr .)
    PLUSEQUAL       reduce using rule 215 (comparison -> expr .)
    MINEQUAL        reduce using rule 215 (comparison -> expr .)
    STAREQUAL       reduce using rule 215 (comparison -> expr .)
    SLASHEQUAL      reduce using rule 215 (comparison -> expr .)
    PERCENTEQUAL    reduce using rule 215 (comparison -> expr .)
    AMPEREQUAL      reduce using rule 215 (comparison -> expr .)
    VBAREQUAL       reduce using rule 215 (comparison -> expr .)
    CIRCUMFLEXEQUAL reduce using rule 215 (comparison -> expr .)
    LEFTSHIFTEQUAL  reduce using rule 215 (comparison -> expr .)
    RIGHTSHIFTEQUAL reduce using rule 215 (comparison -> expr .)
    DOUBLESTAREQUAL reduce using rule 215 (comparison -> expr .)
    DOUBLESLASHEQUAL reduce using rule 215 (comparison -> expr .)
    AS              reduce using rule 215 (comparison -> expr .)
    RBRACE          reduce using rule 215 (comparison -> expr .)
    ELSE            reduce using rule 215 (comparison -> expr .)
    LESS            shift and go to state 131
    GREATER         shift and go to state 130
    EQEQUAL         shift and go to state 138
    GREATEREQUAL    shift and go to state 133
    LESSEQUAL       shift and go to state 136
    NOTEQUAL        shift and go to state 128
    IN              shift and go to state 135
    IS              shift and go to state 132
    NOT             shift and go to state 134

    comp_op                        shift and go to state 129
    comparison_star                shift and go to state 137

state 28

    (280) atom -> BACKQUOTE . testlist1 BACKQUOTE
    (372) testlist1 -> . test
    (373) testlist1 -> . test testlist1_star
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 139
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25
    testlist1                      shift and go to state 140

state 29

    (101) del_stmt -> DEL . exprlist
    (324) exprlist -> . expr
    (325) exprlist -> . expr COMMA
    (326) exprlist -> . expr exprlist_star
    (327) exprlist -> . expr exprlist_star COMMA
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 141
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 142

state 30

    (91) print_stmt -> PRINT .
    (92) print_stmt -> PRINT . test
    (93) print_stmt -> PRINT . test COMMA
    (94) print_stmt -> PRINT . test print_stmt_plus
    (95) print_stmt -> PRINT . test print_stmt_plus COMMA
    (96) print_stmt -> PRINT . RIGHTSHIFT test
    (97) print_stmt -> PRINT . RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> PRINT . RIGHTSHIFT test print_stmt_plus COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 91 (print_stmt -> PRINT .)
    SEMI            reduce using rule 91 (print_stmt -> PRINT .)
    RIGHTSHIFT      shift and go to state 144
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 143
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 31

    (13) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 145


state 32

    (284) atom_plus -> STRING .

    STRING          reduce using rule 284 (atom_plus -> STRING .)
    DOUBLESTAR      reduce using rule 284 (atom_plus -> STRING .)
    LPAR            reduce using rule 284 (atom_plus -> STRING .)
    LSQB            reduce using rule 284 (atom_plus -> STRING .)
    DOT             reduce using rule 284 (atom_plus -> STRING .)
    STAR            reduce using rule 284 (atom_plus -> STRING .)
    SLASH           reduce using rule 284 (atom_plus -> STRING .)
    PERCENT         reduce using rule 284 (atom_plus -> STRING .)
    DOUBLESLASH     reduce using rule 284 (atom_plus -> STRING .)
    PLUS            reduce using rule 284 (atom_plus -> STRING .)
    MINUS           reduce using rule 284 (atom_plus -> STRING .)
    LEFTSHIFT       reduce using rule 284 (atom_plus -> STRING .)
    RIGHTSHIFT      reduce using rule 284 (atom_plus -> STRING .)
    AMPER           reduce using rule 284 (atom_plus -> STRING .)
    CIRCUMFLEX      reduce using rule 284 (atom_plus -> STRING .)
    VBAR            reduce using rule 284 (atom_plus -> STRING .)
    LESS            reduce using rule 284 (atom_plus -> STRING .)
    GREATER         reduce using rule 284 (atom_plus -> STRING .)
    EQEQUAL         reduce using rule 284 (atom_plus -> STRING .)
    GREATEREQUAL    reduce using rule 284 (atom_plus -> STRING .)
    LESSEQUAL       reduce using rule 284 (atom_plus -> STRING .)
    NOTEQUAL        reduce using rule 284 (atom_plus -> STRING .)
    IN              reduce using rule 284 (atom_plus -> STRING .)
    IS              reduce using rule 284 (atom_plus -> STRING .)
    NOT             reduce using rule 284 (atom_plus -> STRING .)
    AND             reduce using rule 284 (atom_plus -> STRING .)
    OR              reduce using rule 284 (atom_plus -> STRING .)
    IF              reduce using rule 284 (atom_plus -> STRING .)
    COMMA           reduce using rule 284 (atom_plus -> STRING .)
    PLUSEQUAL       reduce using rule 284 (atom_plus -> STRING .)
    MINEQUAL        reduce using rule 284 (atom_plus -> STRING .)
    STAREQUAL       reduce using rule 284 (atom_plus -> STRING .)
    SLASHEQUAL      reduce using rule 284 (atom_plus -> STRING .)
    PERCENTEQUAL    reduce using rule 284 (atom_plus -> STRING .)
    AMPEREQUAL      reduce using rule 284 (atom_plus -> STRING .)
    VBAREQUAL       reduce using rule 284 (atom_plus -> STRING .)
    CIRCUMFLEXEQUAL reduce using rule 284 (atom_plus -> STRING .)
    LEFTSHIFTEQUAL  reduce using rule 284 (atom_plus -> STRING .)
    RIGHTSHIFTEQUAL reduce using rule 284 (atom_plus -> STRING .)
    DOUBLESTAREQUAL reduce using rule 284 (atom_plus -> STRING .)
    DOUBLESLASHEQUAL reduce using rule 284 (atom_plus -> STRING .)
    EQUAL           reduce using rule 284 (atom_plus -> STRING .)
    NEWLINE         reduce using rule 284 (atom_plus -> STRING .)
    SEMI            reduce using rule 284 (atom_plus -> STRING .)
    FOR             reduce using rule 284 (atom_plus -> STRING .)
    RPAR            reduce using rule 284 (atom_plus -> STRING .)
    COLON           reduce using rule 284 (atom_plus -> STRING .)
    AS              reduce using rule 284 (atom_plus -> STRING .)
    BACKQUOTE       reduce using rule 284 (atom_plus -> STRING .)
    RSQB            reduce using rule 284 (atom_plus -> STRING .)
    ELSE            reduce using rule 284 (atom_plus -> STRING .)
    RBRACE          reduce using rule 284 (atom_plus -> STRING .)


state 33

    (64) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 64 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 64 (small_stmt -> flow_stmt .)


state 34

    (266) factor -> power .

    STAR            reduce using rule 266 (factor -> power .)
    SLASH           reduce using rule 266 (factor -> power .)
    PERCENT         reduce using rule 266 (factor -> power .)
    DOUBLESLASH     reduce using rule 266 (factor -> power .)
    PLUS            reduce using rule 266 (factor -> power .)
    MINUS           reduce using rule 266 (factor -> power .)
    LEFTSHIFT       reduce using rule 266 (factor -> power .)
    RIGHTSHIFT      reduce using rule 266 (factor -> power .)
    AMPER           reduce using rule 266 (factor -> power .)
    CIRCUMFLEX      reduce using rule 266 (factor -> power .)
    VBAR            reduce using rule 266 (factor -> power .)
    LESS            reduce using rule 266 (factor -> power .)
    GREATER         reduce using rule 266 (factor -> power .)
    EQEQUAL         reduce using rule 266 (factor -> power .)
    GREATEREQUAL    reduce using rule 266 (factor -> power .)
    LESSEQUAL       reduce using rule 266 (factor -> power .)
    NOTEQUAL        reduce using rule 266 (factor -> power .)
    IN              reduce using rule 266 (factor -> power .)
    IS              reduce using rule 266 (factor -> power .)
    NOT             reduce using rule 266 (factor -> power .)
    AND             reduce using rule 266 (factor -> power .)
    OR              reduce using rule 266 (factor -> power .)
    ELSE            reduce using rule 266 (factor -> power .)
    IF              reduce using rule 266 (factor -> power .)
    COMMA           reduce using rule 266 (factor -> power .)
    PLUSEQUAL       reduce using rule 266 (factor -> power .)
    MINEQUAL        reduce using rule 266 (factor -> power .)
    STAREQUAL       reduce using rule 266 (factor -> power .)
    SLASHEQUAL      reduce using rule 266 (factor -> power .)
    PERCENTEQUAL    reduce using rule 266 (factor -> power .)
    AMPEREQUAL      reduce using rule 266 (factor -> power .)
    VBAREQUAL       reduce using rule 266 (factor -> power .)
    CIRCUMFLEXEQUAL reduce using rule 266 (factor -> power .)
    LEFTSHIFTEQUAL  reduce using rule 266 (factor -> power .)
    RIGHTSHIFTEQUAL reduce using rule 266 (factor -> power .)
    DOUBLESTAREQUAL reduce using rule 266 (factor -> power .)
    DOUBLESLASHEQUAL reduce using rule 266 (factor -> power .)
    EQUAL           reduce using rule 266 (factor -> power .)
    NEWLINE         reduce using rule 266 (factor -> power .)
    SEMI            reduce using rule 266 (factor -> power .)
    FOR             reduce using rule 266 (factor -> power .)
    RPAR            reduce using rule 266 (factor -> power .)
    COLON           reduce using rule 266 (factor -> power .)
    AS              reduce using rule 266 (factor -> power .)
    BACKQUOTE       reduce using rule 266 (factor -> power .)
    RSQB            reduce using rule 266 (factor -> power .)
    RBRACE          reduce using rule 266 (factor -> power .)


state 35

    (237) and_expr -> shift_expr .
    (238) and_expr -> shift_expr . and_expr_star
    (239) and_expr_star -> . AMPER shift_expr
    (240) and_expr_star -> . and_expr_star AMPER shift_expr

    CIRCUMFLEX      reduce using rule 237 (and_expr -> shift_expr .)
    VBAR            reduce using rule 237 (and_expr -> shift_expr .)
    COMMA           reduce using rule 237 (and_expr -> shift_expr .)
    NEWLINE         reduce using rule 237 (and_expr -> shift_expr .)
    SEMI            reduce using rule 237 (and_expr -> shift_expr .)
    IN              reduce using rule 237 (and_expr -> shift_expr .)
    LESS            reduce using rule 237 (and_expr -> shift_expr .)
    GREATER         reduce using rule 237 (and_expr -> shift_expr .)
    EQEQUAL         reduce using rule 237 (and_expr -> shift_expr .)
    GREATEREQUAL    reduce using rule 237 (and_expr -> shift_expr .)
    LESSEQUAL       reduce using rule 237 (and_expr -> shift_expr .)
    NOTEQUAL        reduce using rule 237 (and_expr -> shift_expr .)
    IS              reduce using rule 237 (and_expr -> shift_expr .)
    NOT             reduce using rule 237 (and_expr -> shift_expr .)
    AND             reduce using rule 237 (and_expr -> shift_expr .)
    OR              reduce using rule 237 (and_expr -> shift_expr .)
    IF              reduce using rule 237 (and_expr -> shift_expr .)
    BACKQUOTE       reduce using rule 237 (and_expr -> shift_expr .)
    PLUSEQUAL       reduce using rule 237 (and_expr -> shift_expr .)
    MINEQUAL        reduce using rule 237 (and_expr -> shift_expr .)
    STAREQUAL       reduce using rule 237 (and_expr -> shift_expr .)
    SLASHEQUAL      reduce using rule 237 (and_expr -> shift_expr .)
    PERCENTEQUAL    reduce using rule 237 (and_expr -> shift_expr .)
    AMPEREQUAL      reduce using rule 237 (and_expr -> shift_expr .)
    VBAREQUAL       reduce using rule 237 (and_expr -> shift_expr .)
    CIRCUMFLEXEQUAL reduce using rule 237 (and_expr -> shift_expr .)
    LEFTSHIFTEQUAL  reduce using rule 237 (and_expr -> shift_expr .)
    RIGHTSHIFTEQUAL reduce using rule 237 (and_expr -> shift_expr .)
    DOUBLESTAREQUAL reduce using rule 237 (and_expr -> shift_expr .)
    DOUBLESLASHEQUAL reduce using rule 237 (and_expr -> shift_expr .)
    EQUAL           reduce using rule 237 (and_expr -> shift_expr .)
    FOR             reduce using rule 237 (and_expr -> shift_expr .)
    RPAR            reduce using rule 237 (and_expr -> shift_expr .)
    COLON           reduce using rule 237 (and_expr -> shift_expr .)
    AS              reduce using rule 237 (and_expr -> shift_expr .)
    RSQB            reduce using rule 237 (and_expr -> shift_expr .)
    RBRACE          reduce using rule 237 (and_expr -> shift_expr .)
    ELSE            reduce using rule 237 (and_expr -> shift_expr .)
    AMPER           shift and go to state 146

    and_expr_star                  shift and go to state 147

state 36

    (67) small_stmt -> exec_stmt .

    NEWLINE         reduce using rule 67 (small_stmt -> exec_stmt .)
    SEMI            reduce using rule 67 (small_stmt -> exec_stmt .)


state 37

    (14) funcdef -> decorators . DEF NAME parameters COLON suite

    DEF             shift and go to state 148


state 38

    (53) stmt -> compound_stmt .

    DEDENT          reduce using rule 53 (stmt -> compound_stmt .)
    IF              reduce using rule 53 (stmt -> compound_stmt .)
    WHILE           reduce using rule 53 (stmt -> compound_stmt .)
    FOR             reduce using rule 53 (stmt -> compound_stmt .)
    TRY             reduce using rule 53 (stmt -> compound_stmt .)
    WITH            reduce using rule 53 (stmt -> compound_stmt .)
    DEF             reduce using rule 53 (stmt -> compound_stmt .)
    CLASS           reduce using rule 53 (stmt -> compound_stmt .)
    NAME            reduce using rule 53 (stmt -> compound_stmt .)
    PRINT           reduce using rule 53 (stmt -> compound_stmt .)
    DEL             reduce using rule 53 (stmt -> compound_stmt .)
    PASS            reduce using rule 53 (stmt -> compound_stmt .)
    GLOBAL          reduce using rule 53 (stmt -> compound_stmt .)
    EXEC            reduce using rule 53 (stmt -> compound_stmt .)
    ASSERT          reduce using rule 53 (stmt -> compound_stmt .)
    BREAK           reduce using rule 53 (stmt -> compound_stmt .)
    CONTINUE        reduce using rule 53 (stmt -> compound_stmt .)
    RETURN          reduce using rule 53 (stmt -> compound_stmt .)
    RAISE           reduce using rule 53 (stmt -> compound_stmt .)
    IMPORT          reduce using rule 53 (stmt -> compound_stmt .)
    FROM            reduce using rule 53 (stmt -> compound_stmt .)
    YIELD           reduce using rule 53 (stmt -> compound_stmt .)
    AT              reduce using rule 53 (stmt -> compound_stmt .)
    LAMBDA          reduce using rule 53 (stmt -> compound_stmt .)
    NOT             reduce using rule 53 (stmt -> compound_stmt .)
    PLUS            reduce using rule 53 (stmt -> compound_stmt .)
    MINUS           reduce using rule 53 (stmt -> compound_stmt .)
    TILDE           reduce using rule 53 (stmt -> compound_stmt .)
    LPAR            reduce using rule 53 (stmt -> compound_stmt .)
    LSQB            reduce using rule 53 (stmt -> compound_stmt .)
    LBRACE          reduce using rule 53 (stmt -> compound_stmt .)
    BACKQUOTE       reduce using rule 53 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 53 (stmt -> compound_stmt .)
    STRING          reduce using rule 53 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 53 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 53 (stmt -> compound_stmt .)


state 39

    (173) for_stmt -> FOR . exprlist IN testlist COLON suite
    (174) for_stmt -> FOR . exprlist IN testlist COLON suite ELSE COLON suite
    (324) exprlist -> . expr
    (325) exprlist -> . expr COMMA
    (326) exprlist -> . expr exprlist_star
    (327) exprlist -> . expr exprlist_star COMMA
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 149
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 142

state 40

    (5) file_input_star -> stmt .

    ENDMARKER       reduce using rule 5 (file_input_star -> stmt .)
    NEWLINE         reduce using rule 5 (file_input_star -> stmt .)
    IF              reduce using rule 5 (file_input_star -> stmt .)
    WHILE           reduce using rule 5 (file_input_star -> stmt .)
    FOR             reduce using rule 5 (file_input_star -> stmt .)
    TRY             reduce using rule 5 (file_input_star -> stmt .)
    WITH            reduce using rule 5 (file_input_star -> stmt .)
    DEF             reduce using rule 5 (file_input_star -> stmt .)
    CLASS           reduce using rule 5 (file_input_star -> stmt .)
    NAME            reduce using rule 5 (file_input_star -> stmt .)
    PRINT           reduce using rule 5 (file_input_star -> stmt .)
    DEL             reduce using rule 5 (file_input_star -> stmt .)
    PASS            reduce using rule 5 (file_input_star -> stmt .)
    GLOBAL          reduce using rule 5 (file_input_star -> stmt .)
    EXEC            reduce using rule 5 (file_input_star -> stmt .)
    ASSERT          reduce using rule 5 (file_input_star -> stmt .)
    BREAK           reduce using rule 5 (file_input_star -> stmt .)
    CONTINUE        reduce using rule 5 (file_input_star -> stmt .)
    RETURN          reduce using rule 5 (file_input_star -> stmt .)
    RAISE           reduce using rule 5 (file_input_star -> stmt .)
    IMPORT          reduce using rule 5 (file_input_star -> stmt .)
    FROM            reduce using rule 5 (file_input_star -> stmt .)
    YIELD           reduce using rule 5 (file_input_star -> stmt .)
    AT              reduce using rule 5 (file_input_star -> stmt .)
    LAMBDA          reduce using rule 5 (file_input_star -> stmt .)
    NOT             reduce using rule 5 (file_input_star -> stmt .)
    PLUS            reduce using rule 5 (file_input_star -> stmt .)
    MINUS           reduce using rule 5 (file_input_star -> stmt .)
    TILDE           reduce using rule 5 (file_input_star -> stmt .)
    LPAR            reduce using rule 5 (file_input_star -> stmt .)
    LSQB            reduce using rule 5 (file_input_star -> stmt .)
    LBRACE          reduce using rule 5 (file_input_star -> stmt .)
    BACKQUOTE       reduce using rule 5 (file_input_star -> stmt .)
    NUMBER          reduce using rule 5 (file_input_star -> stmt .)
    STRING          reduce using rule 5 (file_input_star -> stmt .)


state 41

    (175) try_stmt -> TRY . COLON suite try_stmt_plus
    (176) try_stmt -> TRY . COLON suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> TRY . COLON suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> TRY . COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> TRY . COLON suite FINALLY COLON suite

    COLON           shift and go to state 150


state 42

    (205) or_test -> and_test .
    (206) or_test -> and_test . or_test_star
    (207) or_test_star -> . OR and_test
    (208) or_test_star -> . or_test_star OR and_test

    IF              reduce using rule 205 (or_test -> and_test .)
    COMMA           reduce using rule 205 (or_test -> and_test .)
    PLUSEQUAL       reduce using rule 205 (or_test -> and_test .)
    MINEQUAL        reduce using rule 205 (or_test -> and_test .)
    STAREQUAL       reduce using rule 205 (or_test -> and_test .)
    SLASHEQUAL      reduce using rule 205 (or_test -> and_test .)
    PERCENTEQUAL    reduce using rule 205 (or_test -> and_test .)
    AMPEREQUAL      reduce using rule 205 (or_test -> and_test .)
    VBAREQUAL       reduce using rule 205 (or_test -> and_test .)
    CIRCUMFLEXEQUAL reduce using rule 205 (or_test -> and_test .)
    LEFTSHIFTEQUAL  reduce using rule 205 (or_test -> and_test .)
    RIGHTSHIFTEQUAL reduce using rule 205 (or_test -> and_test .)
    DOUBLESTAREQUAL reduce using rule 205 (or_test -> and_test .)
    DOUBLESLASHEQUAL reduce using rule 205 (or_test -> and_test .)
    EQUAL           reduce using rule 205 (or_test -> and_test .)
    NEWLINE         reduce using rule 205 (or_test -> and_test .)
    SEMI            reduce using rule 205 (or_test -> and_test .)
    FOR             reduce using rule 205 (or_test -> and_test .)
    RPAR            reduce using rule 205 (or_test -> and_test .)
    AS              reduce using rule 205 (or_test -> and_test .)
    COLON           reduce using rule 205 (or_test -> and_test .)
    BACKQUOTE       reduce using rule 205 (or_test -> and_test .)
    RBRACE          reduce using rule 205 (or_test -> and_test .)
    RSQB            reduce using rule 205 (or_test -> and_test .)
    ELSE            reduce using rule 205 (or_test -> and_test .)
    OR              shift and go to state 152

    or_test_star                   shift and go to state 151

state 43

    (65) small_stmt -> import_stmt .

    NEWLINE         reduce using rule 65 (small_stmt -> import_stmt .)
    SEMI            reduce using rule 65 (small_stmt -> import_stmt .)


state 44

    (214) not_test -> comparison .

    AND             reduce using rule 214 (not_test -> comparison .)
    OR              reduce using rule 214 (not_test -> comparison .)
    IF              reduce using rule 214 (not_test -> comparison .)
    COMMA           reduce using rule 214 (not_test -> comparison .)
    PLUSEQUAL       reduce using rule 214 (not_test -> comparison .)
    MINEQUAL        reduce using rule 214 (not_test -> comparison .)
    STAREQUAL       reduce using rule 214 (not_test -> comparison .)
    SLASHEQUAL      reduce using rule 214 (not_test -> comparison .)
    PERCENTEQUAL    reduce using rule 214 (not_test -> comparison .)
    AMPEREQUAL      reduce using rule 214 (not_test -> comparison .)
    VBAREQUAL       reduce using rule 214 (not_test -> comparison .)
    CIRCUMFLEXEQUAL reduce using rule 214 (not_test -> comparison .)
    LEFTSHIFTEQUAL  reduce using rule 214 (not_test -> comparison .)
    RIGHTSHIFTEQUAL reduce using rule 214 (not_test -> comparison .)
    DOUBLESTAREQUAL reduce using rule 214 (not_test -> comparison .)
    DOUBLESLASHEQUAL reduce using rule 214 (not_test -> comparison .)
    EQUAL           reduce using rule 214 (not_test -> comparison .)
    NEWLINE         reduce using rule 214 (not_test -> comparison .)
    SEMI            reduce using rule 214 (not_test -> comparison .)
    FOR             reduce using rule 214 (not_test -> comparison .)
    RPAR            reduce using rule 214 (not_test -> comparison .)
    COLON           reduce using rule 214 (not_test -> comparison .)
    AS              reduce using rule 214 (not_test -> comparison .)
    BACKQUOTE       reduce using rule 214 (not_test -> comparison .)
    RSQB            reduce using rule 214 (not_test -> comparison .)
    ELSE            reduce using rule 214 (not_test -> comparison .)
    RBRACE          reduce using rule 214 (not_test -> comparison .)


state 45

    (278) atom -> LBRACE . RBRACE
    (279) atom -> LBRACE . dictmaker RBRACE
    (336) dictmaker -> . test COLON test
    (337) dictmaker -> . test COLON test COMMA
    (338) dictmaker -> . test COLON test dictmaker_star
    (339) dictmaker -> . test COLON test dictmaker_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RBRACE          shift and go to state 155
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    dictmaker                      shift and go to state 153
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 154
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 46

    (63) small_stmt -> pass_stmt .

    NEWLINE         reduce using rule 63 (small_stmt -> pass_stmt .)
    SEMI            reduce using rule 63 (small_stmt -> pass_stmt .)


state 47

    (10) decorators -> decorators_plus .
    (12) decorators_plus -> decorators_plus . decorator
    (7) decorator -> . AT dotted_name NEWLINE
    (8) decorator -> . AT dotted_name LPAR RPAR NEWLINE
    (9) decorator -> . AT dotted_name LPAR arglist RPAR NEWLINE

    DEF             reduce using rule 10 (decorators -> decorators_plus .)
    AT              shift and go to state 80

    decorator                      shift and go to state 156

state 48

    (267) power -> atom .
    (268) power -> atom . DOUBLESTAR factor
    (269) power -> atom . power_star
    (270) power -> atom . power_star DOUBLESTAR factor
    (271) power_star -> . trailer
    (272) power_star -> . power_star trailer
    (302) trailer -> . LPAR RPAR
    (303) trailer -> . LPAR arglist RPAR
    (304) trailer -> . LSQB subscriptlist RSQB
    (305) trailer -> . DOT NAME

    STAR            reduce using rule 267 (power -> atom .)
    SLASH           reduce using rule 267 (power -> atom .)
    PERCENT         reduce using rule 267 (power -> atom .)
    DOUBLESLASH     reduce using rule 267 (power -> atom .)
    PLUS            reduce using rule 267 (power -> atom .)
    MINUS           reduce using rule 267 (power -> atom .)
    LEFTSHIFT       reduce using rule 267 (power -> atom .)
    RIGHTSHIFT      reduce using rule 267 (power -> atom .)
    AMPER           reduce using rule 267 (power -> atom .)
    CIRCUMFLEX      reduce using rule 267 (power -> atom .)
    VBAR            reduce using rule 267 (power -> atom .)
    LESS            reduce using rule 267 (power -> atom .)
    GREATER         reduce using rule 267 (power -> atom .)
    EQEQUAL         reduce using rule 267 (power -> atom .)
    GREATEREQUAL    reduce using rule 267 (power -> atom .)
    LESSEQUAL       reduce using rule 267 (power -> atom .)
    NOTEQUAL        reduce using rule 267 (power -> atom .)
    IN              reduce using rule 267 (power -> atom .)
    IS              reduce using rule 267 (power -> atom .)
    NOT             reduce using rule 267 (power -> atom .)
    AND             reduce using rule 267 (power -> atom .)
    OR              reduce using rule 267 (power -> atom .)
    IF              reduce using rule 267 (power -> atom .)
    EQUAL           reduce using rule 267 (power -> atom .)
    FOR             reduce using rule 267 (power -> atom .)
    COMMA           reduce using rule 267 (power -> atom .)
    RPAR            reduce using rule 267 (power -> atom .)
    NEWLINE         reduce using rule 267 (power -> atom .)
    SEMI            reduce using rule 267 (power -> atom .)
    PLUSEQUAL       reduce using rule 267 (power -> atom .)
    MINEQUAL        reduce using rule 267 (power -> atom .)
    STAREQUAL       reduce using rule 267 (power -> atom .)
    SLASHEQUAL      reduce using rule 267 (power -> atom .)
    PERCENTEQUAL    reduce using rule 267 (power -> atom .)
    AMPEREQUAL      reduce using rule 267 (power -> atom .)
    VBAREQUAL       reduce using rule 267 (power -> atom .)
    CIRCUMFLEXEQUAL reduce using rule 267 (power -> atom .)
    LEFTSHIFTEQUAL  reduce using rule 267 (power -> atom .)
    RIGHTSHIFTEQUAL reduce using rule 267 (power -> atom .)
    DOUBLESTAREQUAL reduce using rule 267 (power -> atom .)
    DOUBLESLASHEQUAL reduce using rule 267 (power -> atom .)
    COLON           reduce using rule 267 (power -> atom .)
    AS              reduce using rule 267 (power -> atom .)
    BACKQUOTE       reduce using rule 267 (power -> atom .)
    RSQB            reduce using rule 267 (power -> atom .)
    ELSE            reduce using rule 267 (power -> atom .)
    RBRACE          reduce using rule 267 (power -> atom .)
    DOUBLESTAR      shift and go to state 160
    LPAR            shift and go to state 157
    LSQB            shift and go to state 161
    DOT             shift and go to state 159

    power_star                     shift and go to state 158
    trailer                        shift and go to state 162

state 49

    (109) continue_stmt -> CONTINUE .

    NEWLINE         reduce using rule 109 (continue_stmt -> CONTINUE .)
    SEMI            reduce using rule 109 (continue_stmt -> CONTINUE .)


state 50

    (213) not_test -> NOT . not_test
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 163
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27

state 51

    (300) lambdef -> LAMBDA . COLON test
    (301) lambdef -> LAMBDA . varargslist COLON test
    (17) varargslist -> . fpdef COMMA STAR NAME
    (18) varargslist -> . fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME
    (19) varargslist -> . fpdef COMMA DOUBLESTAR NAME
    (20) varargslist -> . fpdef
    (21) varargslist -> . fpdef COMMA
    (22) varargslist -> . fpdef varargslist_star COMMA STAR NAME
    (23) varargslist -> . fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> . fpdef varargslist_star COMMA DOUBLESTAR NAME
    (25) varargslist -> . fpdef varargslist_star
    (26) varargslist -> . fpdef varargslist_star COMMA
    (27) varargslist -> . fpdef EQUAL test COMMA STAR NAME
    (28) varargslist -> . fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> . fpdef EQUAL test COMMA DOUBLESTAR NAME
    (30) varargslist -> . fpdef EQUAL test
    (31) varargslist -> . fpdef EQUAL test COMMA
    (32) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME
    (33) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> . fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> . fpdef EQUAL test varargslist_star
    (36) varargslist -> . fpdef EQUAL test varargslist_star COMMA
    (37) varargslist -> . STAR NAME
    (38) varargslist -> . STAR NAME COMMA DOUBLESTAR NAME
    (39) varargslist -> . DOUBLESTAR NAME
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    COLON           shift and go to state 170
    STAR            shift and go to state 165
    DOUBLESTAR      shift and go to state 169
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 167
    varargslist                    shift and go to state 168

state 52

    (113) raise_stmt -> RAISE .
    (114) raise_stmt -> RAISE . test
    (115) raise_stmt -> RAISE . test COMMA test
    (116) raise_stmt -> RAISE . test COMMA test COMMA test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 113 (raise_stmt -> RAISE .)
    SEMI            reduce using rule 113 (raise_stmt -> RAISE .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 171
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 53

    (149) global_stmt -> GLOBAL . NAME
    (150) global_stmt -> GLOBAL . NAME global_stmt_star

    NAME            shift and go to state 172


state 54

    (171) while_stmt -> WHILE . test COLON suite
    (172) while_stmt -> WHILE . test COLON suite ELSE COLON suite
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 173
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 55

    (105) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 105 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 105 (flow_stmt -> return_stmt .)


state 56

    (110) return_stmt -> RETURN .
    (111) return_stmt -> RETURN . testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 110 (return_stmt -> RETURN .)
    SEMI            reduce using rule 110 (return_stmt -> RETURN .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    testlist                       shift and go to state 174
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 57

    (283) atom -> atom_plus .
    (285) atom_plus -> atom_plus . STRING

    DOUBLESTAR      reduce using rule 283 (atom -> atom_plus .)
    LPAR            reduce using rule 283 (atom -> atom_plus .)
    LSQB            reduce using rule 283 (atom -> atom_plus .)
    DOT             reduce using rule 283 (atom -> atom_plus .)
    STAR            reduce using rule 283 (atom -> atom_plus .)
    SLASH           reduce using rule 283 (atom -> atom_plus .)
    PERCENT         reduce using rule 283 (atom -> atom_plus .)
    DOUBLESLASH     reduce using rule 283 (atom -> atom_plus .)
    PLUS            reduce using rule 283 (atom -> atom_plus .)
    MINUS           reduce using rule 283 (atom -> atom_plus .)
    LEFTSHIFT       reduce using rule 283 (atom -> atom_plus .)
    RIGHTSHIFT      reduce using rule 283 (atom -> atom_plus .)
    AMPER           reduce using rule 283 (atom -> atom_plus .)
    CIRCUMFLEX      reduce using rule 283 (atom -> atom_plus .)
    VBAR            reduce using rule 283 (atom -> atom_plus .)
    LESS            reduce using rule 283 (atom -> atom_plus .)
    GREATER         reduce using rule 283 (atom -> atom_plus .)
    EQEQUAL         reduce using rule 283 (atom -> atom_plus .)
    GREATEREQUAL    reduce using rule 283 (atom -> atom_plus .)
    LESSEQUAL       reduce using rule 283 (atom -> atom_plus .)
    NOTEQUAL        reduce using rule 283 (atom -> atom_plus .)
    IN              reduce using rule 283 (atom -> atom_plus .)
    IS              reduce using rule 283 (atom -> atom_plus .)
    NOT             reduce using rule 283 (atom -> atom_plus .)
    AND             reduce using rule 283 (atom -> atom_plus .)
    OR              reduce using rule 283 (atom -> atom_plus .)
    IF              reduce using rule 283 (atom -> atom_plus .)
    COMMA           reduce using rule 283 (atom -> atom_plus .)
    PLUSEQUAL       reduce using rule 283 (atom -> atom_plus .)
    MINEQUAL        reduce using rule 283 (atom -> atom_plus .)
    STAREQUAL       reduce using rule 283 (atom -> atom_plus .)
    SLASHEQUAL      reduce using rule 283 (atom -> atom_plus .)
    PERCENTEQUAL    reduce using rule 283 (atom -> atom_plus .)
    AMPEREQUAL      reduce using rule 283 (atom -> atom_plus .)
    VBAREQUAL       reduce using rule 283 (atom -> atom_plus .)
    CIRCUMFLEXEQUAL reduce using rule 283 (atom -> atom_plus .)
    LEFTSHIFTEQUAL  reduce using rule 283 (atom -> atom_plus .)
    RIGHTSHIFTEQUAL reduce using rule 283 (atom -> atom_plus .)
    DOUBLESTAREQUAL reduce using rule 283 (atom -> atom_plus .)
    DOUBLESLASHEQUAL reduce using rule 283 (atom -> atom_plus .)
    EQUAL           reduce using rule 283 (atom -> atom_plus .)
    NEWLINE         reduce using rule 283 (atom -> atom_plus .)
    SEMI            reduce using rule 283 (atom -> atom_plus .)
    FOR             reduce using rule 283 (atom -> atom_plus .)
    RPAR            reduce using rule 283 (atom -> atom_plus .)
    COLON           reduce using rule 283 (atom -> atom_plus .)
    AS              reduce using rule 283 (atom -> atom_plus .)
    BACKQUOTE       reduce using rule 283 (atom -> atom_plus .)
    RSQB            reduce using rule 283 (atom -> atom_plus .)
    ELSE            reduce using rule 283 (atom -> atom_plus .)
    RBRACE          reduce using rule 283 (atom -> atom_plus .)
    STRING          shift and go to state 175


state 58

    (2) file_input -> file_input_star . ENDMARKER
    (4) file_input_star -> file_input_star . NEWLINE
    (6) file_input_star -> file_input_star . stmt
    (52) stmt -> . simple_stmt
    (53) stmt -> . compound_stmt
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (158) compound_stmt -> . if_stmt
    (159) compound_stmt -> . while_stmt
    (160) compound_stmt -> . for_stmt
    (161) compound_stmt -> . try_stmt
    (162) compound_stmt -> . with_stmt
    (163) compound_stmt -> . funcdef
    (164) compound_stmt -> . classdef
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (165) if_stmt -> . IF test COLON suite
    (166) if_stmt -> . IF test COLON suite ELSE COLON suite
    (167) if_stmt -> . IF test COLON suite if_stmt_star
    (168) if_stmt -> . IF test COLON suite if_stmt_star ELSE COLON suite
    (171) while_stmt -> . WHILE test COLON suite
    (172) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (173) for_stmt -> . FOR exprlist IN testlist COLON suite
    (174) for_stmt -> . FOR exprlist IN testlist COLON suite ELSE COLON suite
    (175) try_stmt -> . TRY COLON suite try_stmt_plus
    (176) try_stmt -> . TRY COLON suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (182) with_stmt -> . WITH test COLON suite
    (183) with_stmt -> . WITH test with_var COLON suite
    (13) funcdef -> . DEF NAME parameters COLON suite
    (14) funcdef -> . decorators DEF NAME parameters COLON suite
    (342) classdef -> . CLASS NAME COLON suite
    (343) classdef -> . CLASS NAME LPAR RPAR COLON suite
    (344) classdef -> . CLASS NAME LPAR testlist RPAR COLON suite
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (10) decorators -> . decorators_plus
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (11) decorators_plus -> . decorator
    (12) decorators_plus -> . decorators_plus decorator
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (7) decorator -> . AT dotted_name NEWLINE
    (8) decorator -> . AT dotted_name LPAR RPAR NEWLINE
    (9) decorator -> . AT dotted_name LPAR arglist RPAR NEWLINE
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    ENDMARKER       shift and go to state 176
    NEWLINE         shift and go to state 177
    IF              shift and go to state 81
    WHILE           shift and go to state 54
    FOR             shift and go to state 39
    TRY             shift and go to state 41
    WITH            shift and go to state 7
    DEF             shift and go to state 31
    CLASS           shift and go to state 77
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    AT              shift and go to state 80
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    try_stmt                       shift and go to state 6
    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    or_test                        shift and go to state 25
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    decorator                      shift and go to state 22
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    atom                           shift and go to state 48
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 15
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    decorators                     shift and go to state 37
    compound_stmt                  shift and go to state 38
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 178
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 83
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    funcdef                        shift and go to state 5
    import_stmt                    shift and go to state 43
    pass_stmt                      shift and go to state 46
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    if_stmt                        shift and go to state 24
    decorators_plus                shift and go to state 47
    import_name                    shift and go to state 76
    raise_stmt                     shift and go to state 65
    del_stmt                       shift and go to state 84
    while_stmt                     shift and go to state 85
    expr                           shift and go to state 27
    with_stmt                      shift and go to state 26
    xor_expr                       shift and go to state 59
    yield_stmt                     shift and go to state 69

state 59

    (229) expr -> xor_expr .
    (230) expr -> xor_expr . expr_star
    (231) expr_star -> . VBAR xor_expr
    (232) expr_star -> . expr_star VBAR xor_expr

    LESS            reduce using rule 229 (expr -> xor_expr .)
    GREATER         reduce using rule 229 (expr -> xor_expr .)
    EQEQUAL         reduce using rule 229 (expr -> xor_expr .)
    GREATEREQUAL    reduce using rule 229 (expr -> xor_expr .)
    LESSEQUAL       reduce using rule 229 (expr -> xor_expr .)
    NOTEQUAL        reduce using rule 229 (expr -> xor_expr .)
    IN              reduce using rule 229 (expr -> xor_expr .)
    IS              reduce using rule 229 (expr -> xor_expr .)
    NOT             reduce using rule 229 (expr -> xor_expr .)
    AND             reduce using rule 229 (expr -> xor_expr .)
    OR              reduce using rule 229 (expr -> xor_expr .)
    IF              reduce using rule 229 (expr -> xor_expr .)
    COMMA           reduce using rule 229 (expr -> xor_expr .)
    BACKQUOTE       reduce using rule 229 (expr -> xor_expr .)
    PLUSEQUAL       reduce using rule 229 (expr -> xor_expr .)
    MINEQUAL        reduce using rule 229 (expr -> xor_expr .)
    STAREQUAL       reduce using rule 229 (expr -> xor_expr .)
    SLASHEQUAL      reduce using rule 229 (expr -> xor_expr .)
    PERCENTEQUAL    reduce using rule 229 (expr -> xor_expr .)
    AMPEREQUAL      reduce using rule 229 (expr -> xor_expr .)
    VBAREQUAL       reduce using rule 229 (expr -> xor_expr .)
    CIRCUMFLEXEQUAL reduce using rule 229 (expr -> xor_expr .)
    LEFTSHIFTEQUAL  reduce using rule 229 (expr -> xor_expr .)
    RIGHTSHIFTEQUAL reduce using rule 229 (expr -> xor_expr .)
    DOUBLESTAREQUAL reduce using rule 229 (expr -> xor_expr .)
    DOUBLESLASHEQUAL reduce using rule 229 (expr -> xor_expr .)
    EQUAL           reduce using rule 229 (expr -> xor_expr .)
    NEWLINE         reduce using rule 229 (expr -> xor_expr .)
    SEMI            reduce using rule 229 (expr -> xor_expr .)
    RBRACE          reduce using rule 229 (expr -> xor_expr .)
    FOR             reduce using rule 229 (expr -> xor_expr .)
    RPAR            reduce using rule 229 (expr -> xor_expr .)
    COLON           reduce using rule 229 (expr -> xor_expr .)
    AS              reduce using rule 229 (expr -> xor_expr .)
    RSQB            reduce using rule 229 (expr -> xor_expr .)
    ELSE            reduce using rule 229 (expr -> xor_expr .)
    VBAR            shift and go to state 180

    expr_star                      shift and go to state 179

state 60

    (104) flow_stmt -> continue_stmt .

    NEWLINE         reduce using rule 104 (flow_stmt -> continue_stmt .)
    SEMI            reduce using rule 104 (flow_stmt -> continue_stmt .)


state 61

    (265) factor -> TILDE . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 181
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 62

    (61) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 61 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 61 (small_stmt -> print_stmt .)


state 63

    (282) atom -> NUMBER .

    DOUBLESTAR      reduce using rule 282 (atom -> NUMBER .)
    LPAR            reduce using rule 282 (atom -> NUMBER .)
    LSQB            reduce using rule 282 (atom -> NUMBER .)
    DOT             reduce using rule 282 (atom -> NUMBER .)
    STAR            reduce using rule 282 (atom -> NUMBER .)
    SLASH           reduce using rule 282 (atom -> NUMBER .)
    PERCENT         reduce using rule 282 (atom -> NUMBER .)
    DOUBLESLASH     reduce using rule 282 (atom -> NUMBER .)
    PLUS            reduce using rule 282 (atom -> NUMBER .)
    MINUS           reduce using rule 282 (atom -> NUMBER .)
    LEFTSHIFT       reduce using rule 282 (atom -> NUMBER .)
    RIGHTSHIFT      reduce using rule 282 (atom -> NUMBER .)
    AMPER           reduce using rule 282 (atom -> NUMBER .)
    CIRCUMFLEX      reduce using rule 282 (atom -> NUMBER .)
    VBAR            reduce using rule 282 (atom -> NUMBER .)
    LESS            reduce using rule 282 (atom -> NUMBER .)
    GREATER         reduce using rule 282 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 282 (atom -> NUMBER .)
    GREATEREQUAL    reduce using rule 282 (atom -> NUMBER .)
    LESSEQUAL       reduce using rule 282 (atom -> NUMBER .)
    NOTEQUAL        reduce using rule 282 (atom -> NUMBER .)
    IN              reduce using rule 282 (atom -> NUMBER .)
    IS              reduce using rule 282 (atom -> NUMBER .)
    NOT             reduce using rule 282 (atom -> NUMBER .)
    AND             reduce using rule 282 (atom -> NUMBER .)
    OR              reduce using rule 282 (atom -> NUMBER .)
    IF              reduce using rule 282 (atom -> NUMBER .)
    COMMA           reduce using rule 282 (atom -> NUMBER .)
    PLUSEQUAL       reduce using rule 282 (atom -> NUMBER .)
    MINEQUAL        reduce using rule 282 (atom -> NUMBER .)
    STAREQUAL       reduce using rule 282 (atom -> NUMBER .)
    SLASHEQUAL      reduce using rule 282 (atom -> NUMBER .)
    PERCENTEQUAL    reduce using rule 282 (atom -> NUMBER .)
    AMPEREQUAL      reduce using rule 282 (atom -> NUMBER .)
    VBAREQUAL       reduce using rule 282 (atom -> NUMBER .)
    CIRCUMFLEXEQUAL reduce using rule 282 (atom -> NUMBER .)
    LEFTSHIFTEQUAL  reduce using rule 282 (atom -> NUMBER .)
    RIGHTSHIFTEQUAL reduce using rule 282 (atom -> NUMBER .)
    DOUBLESTAREQUAL reduce using rule 282 (atom -> NUMBER .)
    DOUBLESLASHEQUAL reduce using rule 282 (atom -> NUMBER .)
    EQUAL           reduce using rule 282 (atom -> NUMBER .)
    NEWLINE         reduce using rule 282 (atom -> NUMBER .)
    SEMI            reduce using rule 282 (atom -> NUMBER .)
    FOR             reduce using rule 282 (atom -> NUMBER .)
    RPAR            reduce using rule 282 (atom -> NUMBER .)
    COLON           reduce using rule 282 (atom -> NUMBER .)
    AS              reduce using rule 282 (atom -> NUMBER .)
    BACKQUOTE       reduce using rule 282 (atom -> NUMBER .)
    RSQB            reduce using rule 282 (atom -> NUMBER .)
    ELSE            reduce using rule 282 (atom -> NUMBER .)
    RBRACE          reduce using rule 282 (atom -> NUMBER .)


state 64

    (276) atom -> LSQB . RSQB
    (277) atom -> LSQB . listmaker RSQB
    (286) listmaker -> . test list_for
    (287) listmaker -> . test
    (288) listmaker -> . test COMMA
    (289) listmaker -> . test listmaker_star
    (290) listmaker -> . test listmaker_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RSQB            shift and go to state 183
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    listmaker                      shift and go to state 182
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    test                           shift and go to state 184
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 65

    (106) flow_stmt -> raise_stmt .

    NEWLINE         reduce using rule 106 (flow_stmt -> raise_stmt .)
    SEMI            reduce using rule 106 (flow_stmt -> raise_stmt .)


state 66

    (69) expr_stmt -> NAME . NAME EQUAL yield_expr
    (70) expr_stmt -> NAME . NAME EQUAL testlist
    (281) atom -> NAME .

    NAME            shift and go to state 185
    DOUBLESTAR      reduce using rule 281 (atom -> NAME .)
    LPAR            reduce using rule 281 (atom -> NAME .)
    LSQB            reduce using rule 281 (atom -> NAME .)
    DOT             reduce using rule 281 (atom -> NAME .)
    STAR            reduce using rule 281 (atom -> NAME .)
    SLASH           reduce using rule 281 (atom -> NAME .)
    PERCENT         reduce using rule 281 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 281 (atom -> NAME .)
    PLUS            reduce using rule 281 (atom -> NAME .)
    MINUS           reduce using rule 281 (atom -> NAME .)
    LEFTSHIFT       reduce using rule 281 (atom -> NAME .)
    RIGHTSHIFT      reduce using rule 281 (atom -> NAME .)
    AMPER           reduce using rule 281 (atom -> NAME .)
    CIRCUMFLEX      reduce using rule 281 (atom -> NAME .)
    VBAR            reduce using rule 281 (atom -> NAME .)
    LESS            reduce using rule 281 (atom -> NAME .)
    GREATER         reduce using rule 281 (atom -> NAME .)
    EQEQUAL         reduce using rule 281 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 281 (atom -> NAME .)
    LESSEQUAL       reduce using rule 281 (atom -> NAME .)
    NOTEQUAL        reduce using rule 281 (atom -> NAME .)
    IN              reduce using rule 281 (atom -> NAME .)
    IS              reduce using rule 281 (atom -> NAME .)
    NOT             reduce using rule 281 (atom -> NAME .)
    AND             reduce using rule 281 (atom -> NAME .)
    OR              reduce using rule 281 (atom -> NAME .)
    IF              reduce using rule 281 (atom -> NAME .)
    COMMA           reduce using rule 281 (atom -> NAME .)
    PLUSEQUAL       reduce using rule 281 (atom -> NAME .)
    MINEQUAL        reduce using rule 281 (atom -> NAME .)
    STAREQUAL       reduce using rule 281 (atom -> NAME .)
    SLASHEQUAL      reduce using rule 281 (atom -> NAME .)
    PERCENTEQUAL    reduce using rule 281 (atom -> NAME .)
    AMPEREQUAL      reduce using rule 281 (atom -> NAME .)
    VBAREQUAL       reduce using rule 281 (atom -> NAME .)
    CIRCUMFLEXEQUAL reduce using rule 281 (atom -> NAME .)
    LEFTSHIFTEQUAL  reduce using rule 281 (atom -> NAME .)
    RIGHTSHIFTEQUAL reduce using rule 281 (atom -> NAME .)
    DOUBLESTAREQUAL reduce using rule 281 (atom -> NAME .)
    DOUBLESLASHEQUAL reduce using rule 281 (atom -> NAME .)
    EQUAL           reduce using rule 281 (atom -> NAME .)
    NEWLINE         reduce using rule 281 (atom -> NAME .)
    SEMI            reduce using rule 281 (atom -> NAME .)


state 67

    (0) S' -> file_input .



state 68

    (108) break_stmt -> BREAK .

    NEWLINE         reduce using rule 108 (break_stmt -> BREAK .)
    SEMI            reduce using rule 108 (break_stmt -> BREAK .)


state 69

    (107) flow_stmt -> yield_stmt .

    NEWLINE         reduce using rule 107 (flow_stmt -> yield_stmt .)
    SEMI            reduce using rule 107 (flow_stmt -> yield_stmt .)


state 70

    (156) assert_stmt -> ASSERT . test
    (157) assert_stmt -> ASSERT . test COMMA test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 186
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 71

    (241) shift_expr -> arith_expr .
    (242) shift_expr -> arith_expr . shift_expr_star
    (243) shift_expr_star -> . LEFTSHIFT arith_expr
    (244) shift_expr_star -> . RIGHTSHIFT arith_expr
    (245) shift_expr_star -> . shift_expr_star LEFTSHIFT arith_expr
    (246) shift_expr_star -> . shift_expr_star RIGHTSHIFT arith_expr

    AMPER           reduce using rule 241 (shift_expr -> arith_expr .)
    CIRCUMFLEX      reduce using rule 241 (shift_expr -> arith_expr .)
    VBAR            reduce using rule 241 (shift_expr -> arith_expr .)
    LESS            reduce using rule 241 (shift_expr -> arith_expr .)
    GREATER         reduce using rule 241 (shift_expr -> arith_expr .)
    EQEQUAL         reduce using rule 241 (shift_expr -> arith_expr .)
    GREATEREQUAL    reduce using rule 241 (shift_expr -> arith_expr .)
    LESSEQUAL       reduce using rule 241 (shift_expr -> arith_expr .)
    NOTEQUAL        reduce using rule 241 (shift_expr -> arith_expr .)
    IN              reduce using rule 241 (shift_expr -> arith_expr .)
    IS              reduce using rule 241 (shift_expr -> arith_expr .)
    NOT             reduce using rule 241 (shift_expr -> arith_expr .)
    AND             reduce using rule 241 (shift_expr -> arith_expr .)
    OR              reduce using rule 241 (shift_expr -> arith_expr .)
    IF              reduce using rule 241 (shift_expr -> arith_expr .)
    NEWLINE         reduce using rule 241 (shift_expr -> arith_expr .)
    SEMI            reduce using rule 241 (shift_expr -> arith_expr .)
    COMMA           reduce using rule 241 (shift_expr -> arith_expr .)
    RPAR            reduce using rule 241 (shift_expr -> arith_expr .)
    PLUSEQUAL       reduce using rule 241 (shift_expr -> arith_expr .)
    MINEQUAL        reduce using rule 241 (shift_expr -> arith_expr .)
    STAREQUAL       reduce using rule 241 (shift_expr -> arith_expr .)
    SLASHEQUAL      reduce using rule 241 (shift_expr -> arith_expr .)
    PERCENTEQUAL    reduce using rule 241 (shift_expr -> arith_expr .)
    AMPEREQUAL      reduce using rule 241 (shift_expr -> arith_expr .)
    VBAREQUAL       reduce using rule 241 (shift_expr -> arith_expr .)
    CIRCUMFLEXEQUAL reduce using rule 241 (shift_expr -> arith_expr .)
    LEFTSHIFTEQUAL  reduce using rule 241 (shift_expr -> arith_expr .)
    RIGHTSHIFTEQUAL reduce using rule 241 (shift_expr -> arith_expr .)
    DOUBLESTAREQUAL reduce using rule 241 (shift_expr -> arith_expr .)
    DOUBLESLASHEQUAL reduce using rule 241 (shift_expr -> arith_expr .)
    EQUAL           reduce using rule 241 (shift_expr -> arith_expr .)
    FOR             reduce using rule 241 (shift_expr -> arith_expr .)
    COLON           reduce using rule 241 (shift_expr -> arith_expr .)
    RSQB            reduce using rule 241 (shift_expr -> arith_expr .)
    AS              reduce using rule 241 (shift_expr -> arith_expr .)
    BACKQUOTE       reduce using rule 241 (shift_expr -> arith_expr .)
    ELSE            reduce using rule 241 (shift_expr -> arith_expr .)
    RBRACE          reduce using rule 241 (shift_expr -> arith_expr .)
    LEFTSHIFT       shift and go to state 187
    RIGHTSHIFT      shift and go to state 188

    shift_expr_star                shift and go to state 189

state 72

    (209) and_test -> not_test .
    (210) and_test -> not_test . and_test_star
    (211) and_test_star -> . AND not_test
    (212) and_test_star -> . and_test_star AND not_test

    OR              reduce using rule 209 (and_test -> not_test .)
    IF              reduce using rule 209 (and_test -> not_test .)
    COMMA           reduce using rule 209 (and_test -> not_test .)
    PLUSEQUAL       reduce using rule 209 (and_test -> not_test .)
    MINEQUAL        reduce using rule 209 (and_test -> not_test .)
    STAREQUAL       reduce using rule 209 (and_test -> not_test .)
    SLASHEQUAL      reduce using rule 209 (and_test -> not_test .)
    PERCENTEQUAL    reduce using rule 209 (and_test -> not_test .)
    AMPEREQUAL      reduce using rule 209 (and_test -> not_test .)
    VBAREQUAL       reduce using rule 209 (and_test -> not_test .)
    CIRCUMFLEXEQUAL reduce using rule 209 (and_test -> not_test .)
    LEFTSHIFTEQUAL  reduce using rule 209 (and_test -> not_test .)
    RIGHTSHIFTEQUAL reduce using rule 209 (and_test -> not_test .)
    DOUBLESTAREQUAL reduce using rule 209 (and_test -> not_test .)
    DOUBLESLASHEQUAL reduce using rule 209 (and_test -> not_test .)
    EQUAL           reduce using rule 209 (and_test -> not_test .)
    NEWLINE         reduce using rule 209 (and_test -> not_test .)
    SEMI            reduce using rule 209 (and_test -> not_test .)
    RPAR            reduce using rule 209 (and_test -> not_test .)
    COLON           reduce using rule 209 (and_test -> not_test .)
    RSQB            reduce using rule 209 (and_test -> not_test .)
    RBRACE          reduce using rule 209 (and_test -> not_test .)
    FOR             reduce using rule 209 (and_test -> not_test .)
    AS              reduce using rule 209 (and_test -> not_test .)
    BACKQUOTE       reduce using rule 209 (and_test -> not_test .)
    ELSE            reduce using rule 209 (and_test -> not_test .)
    AND             shift and go to state 190

    and_test_star                  shift and go to state 191

state 73

    (103) flow_stmt -> break_stmt .

    NEWLINE         reduce using rule 103 (flow_stmt -> break_stmt .)
    SEMI            reduce using rule 103 (flow_stmt -> break_stmt .)


state 74

    (330) testlist -> test .
    (331) testlist -> test . COMMA
    (332) testlist -> test . testlist_star
    (333) testlist -> test . testlist_star COMMA
    (334) testlist_star -> . COMMA test
    (335) testlist_star -> . testlist_star COMMA test

    PLUSEQUAL       reduce using rule 330 (testlist -> test .)
    MINEQUAL        reduce using rule 330 (testlist -> test .)
    STAREQUAL       reduce using rule 330 (testlist -> test .)
    SLASHEQUAL      reduce using rule 330 (testlist -> test .)
    PERCENTEQUAL    reduce using rule 330 (testlist -> test .)
    AMPEREQUAL      reduce using rule 330 (testlist -> test .)
    VBAREQUAL       reduce using rule 330 (testlist -> test .)
    CIRCUMFLEXEQUAL reduce using rule 330 (testlist -> test .)
    LEFTSHIFTEQUAL  reduce using rule 330 (testlist -> test .)
    RIGHTSHIFTEQUAL reduce using rule 330 (testlist -> test .)
    DOUBLESTAREQUAL reduce using rule 330 (testlist -> test .)
    DOUBLESLASHEQUAL reduce using rule 330 (testlist -> test .)
    EQUAL           reduce using rule 330 (testlist -> test .)
    NEWLINE         reduce using rule 330 (testlist -> test .)
    SEMI            reduce using rule 330 (testlist -> test .)
    COLON           reduce using rule 330 (testlist -> test .)
    RPAR            reduce using rule 330 (testlist -> test .)
    COMMA           shift and go to state 193

    testlist_star                  shift and go to state 192

state 75

    (66) small_stmt -> global_stmt .

    NEWLINE         reduce using rule 66 (small_stmt -> global_stmt .)
    SEMI            reduce using rule 66 (small_stmt -> global_stmt .)


state 76

    (117) import_stmt -> import_name .

    NEWLINE         reduce using rule 117 (import_stmt -> import_name .)
    SEMI            reduce using rule 117 (import_stmt -> import_name .)


state 77

    (342) classdef -> CLASS . NAME COLON suite
    (343) classdef -> CLASS . NAME LPAR RPAR COLON suite
    (344) classdef -> CLASS . NAME LPAR testlist RPAR COLON suite

    NAME            shift and go to state 194


state 78

    (112) yield_stmt -> yield_expr .

    NEWLINE         reduce using rule 112 (yield_stmt -> yield_expr .)
    SEMI            reduce using rule 112 (yield_stmt -> yield_expr .)


state 79

    (377) yield_expr -> YIELD .
    (378) yield_expr -> YIELD . testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 377 (yield_expr -> YIELD .)
    SEMI            reduce using rule 377 (yield_expr -> YIELD .)
    EQUAL           reduce using rule 377 (yield_expr -> YIELD .)
    RPAR            reduce using rule 377 (yield_expr -> YIELD .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    testlist                       shift and go to state 195
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 80

    (7) decorator -> AT . dotted_name NEWLINE
    (8) decorator -> AT . dotted_name LPAR RPAR NEWLINE
    (9) decorator -> AT . dotted_name LPAR arglist RPAR NEWLINE
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star

    NAME            shift and go to state 103

    dotted_name                    shift and go to state 196

state 81

    (165) if_stmt -> IF . test COLON suite
    (166) if_stmt -> IF . test COLON suite ELSE COLON suite
    (167) if_stmt -> IF . test COLON suite if_stmt_star
    (168) if_stmt -> IF . test COLON suite if_stmt_star ELSE COLON suite
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 197
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 82

    (120) import_from -> FROM . dotted_name IMPORT STAR
    (121) import_from -> FROM . dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> FROM . dotted_name IMPORT import_as_names
    (123) import_from -> FROM . import_from_plus dotted_name IMPORT STAR
    (124) import_from -> FROM . import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> FROM . import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> FROM . import_from_plus IMPORT STAR
    (127) import_from -> FROM . import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> FROM . import_from_plus IMPORT import_as_names
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star
    (129) import_from_plus -> . DOT
    (130) import_from_plus -> . import_from_plus DOT

    NAME            shift and go to state 103
    DOT             shift and go to state 200

    dotted_name                    shift and go to state 198
    import_from_plus               shift and go to state 199

state 83

    (160) compound_stmt -> for_stmt .

    ENDMARKER       reduce using rule 160 (compound_stmt -> for_stmt .)
    NEWLINE         reduce using rule 160 (compound_stmt -> for_stmt .)
    IF              reduce using rule 160 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 160 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 160 (compound_stmt -> for_stmt .)
    TRY             reduce using rule 160 (compound_stmt -> for_stmt .)
    WITH            reduce using rule 160 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 160 (compound_stmt -> for_stmt .)
    CLASS           reduce using rule 160 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 160 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 160 (compound_stmt -> for_stmt .)
    DEL             reduce using rule 160 (compound_stmt -> for_stmt .)
    PASS            reduce using rule 160 (compound_stmt -> for_stmt .)
    GLOBAL          reduce using rule 160 (compound_stmt -> for_stmt .)
    EXEC            reduce using rule 160 (compound_stmt -> for_stmt .)
    ASSERT          reduce using rule 160 (compound_stmt -> for_stmt .)
    BREAK           reduce using rule 160 (compound_stmt -> for_stmt .)
    CONTINUE        reduce using rule 160 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 160 (compound_stmt -> for_stmt .)
    RAISE           reduce using rule 160 (compound_stmt -> for_stmt .)
    IMPORT          reduce using rule 160 (compound_stmt -> for_stmt .)
    FROM            reduce using rule 160 (compound_stmt -> for_stmt .)
    YIELD           reduce using rule 160 (compound_stmt -> for_stmt .)
    AT              reduce using rule 160 (compound_stmt -> for_stmt .)
    LAMBDA          reduce using rule 160 (compound_stmt -> for_stmt .)
    NOT             reduce using rule 160 (compound_stmt -> for_stmt .)
    PLUS            reduce using rule 160 (compound_stmt -> for_stmt .)
    MINUS           reduce using rule 160 (compound_stmt -> for_stmt .)
    TILDE           reduce using rule 160 (compound_stmt -> for_stmt .)
    LPAR            reduce using rule 160 (compound_stmt -> for_stmt .)
    LSQB            reduce using rule 160 (compound_stmt -> for_stmt .)
    LBRACE          reduce using rule 160 (compound_stmt -> for_stmt .)
    BACKQUOTE       reduce using rule 160 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 160 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 160 (compound_stmt -> for_stmt .)
    DEDENT          reduce using rule 160 (compound_stmt -> for_stmt .)


state 84

    (62) small_stmt -> del_stmt .

    NEWLINE         reduce using rule 62 (small_stmt -> del_stmt .)
    SEMI            reduce using rule 62 (small_stmt -> del_stmt .)


state 85

    (159) compound_stmt -> while_stmt .

    ENDMARKER       reduce using rule 159 (compound_stmt -> while_stmt .)
    NEWLINE         reduce using rule 159 (compound_stmt -> while_stmt .)
    IF              reduce using rule 159 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 159 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 159 (compound_stmt -> while_stmt .)
    TRY             reduce using rule 159 (compound_stmt -> while_stmt .)
    WITH            reduce using rule 159 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 159 (compound_stmt -> while_stmt .)
    CLASS           reduce using rule 159 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 159 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 159 (compound_stmt -> while_stmt .)
    DEL             reduce using rule 159 (compound_stmt -> while_stmt .)
    PASS            reduce using rule 159 (compound_stmt -> while_stmt .)
    GLOBAL          reduce using rule 159 (compound_stmt -> while_stmt .)
    EXEC            reduce using rule 159 (compound_stmt -> while_stmt .)
    ASSERT          reduce using rule 159 (compound_stmt -> while_stmt .)
    BREAK           reduce using rule 159 (compound_stmt -> while_stmt .)
    CONTINUE        reduce using rule 159 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 159 (compound_stmt -> while_stmt .)
    RAISE           reduce using rule 159 (compound_stmt -> while_stmt .)
    IMPORT          reduce using rule 159 (compound_stmt -> while_stmt .)
    FROM            reduce using rule 159 (compound_stmt -> while_stmt .)
    YIELD           reduce using rule 159 (compound_stmt -> while_stmt .)
    AT              reduce using rule 159 (compound_stmt -> while_stmt .)
    LAMBDA          reduce using rule 159 (compound_stmt -> while_stmt .)
    NOT             reduce using rule 159 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 159 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 159 (compound_stmt -> while_stmt .)
    TILDE           reduce using rule 159 (compound_stmt -> while_stmt .)
    LPAR            reduce using rule 159 (compound_stmt -> while_stmt .)
    LSQB            reduce using rule 159 (compound_stmt -> while_stmt .)
    LBRACE          reduce using rule 159 (compound_stmt -> while_stmt .)
    BACKQUOTE       reduce using rule 159 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 159 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 159 (compound_stmt -> while_stmt .)
    DEDENT          reduce using rule 159 (compound_stmt -> while_stmt .)


state 86

    (273) atom -> LPAR RPAR .

    DOUBLESTAR      reduce using rule 273 (atom -> LPAR RPAR .)
    LPAR            reduce using rule 273 (atom -> LPAR RPAR .)
    LSQB            reduce using rule 273 (atom -> LPAR RPAR .)
    DOT             reduce using rule 273 (atom -> LPAR RPAR .)
    STAR            reduce using rule 273 (atom -> LPAR RPAR .)
    SLASH           reduce using rule 273 (atom -> LPAR RPAR .)
    PERCENT         reduce using rule 273 (atom -> LPAR RPAR .)
    DOUBLESLASH     reduce using rule 273 (atom -> LPAR RPAR .)
    PLUS            reduce using rule 273 (atom -> LPAR RPAR .)
    MINUS           reduce using rule 273 (atom -> LPAR RPAR .)
    LEFTSHIFT       reduce using rule 273 (atom -> LPAR RPAR .)
    RIGHTSHIFT      reduce using rule 273 (atom -> LPAR RPAR .)
    AMPER           reduce using rule 273 (atom -> LPAR RPAR .)
    CIRCUMFLEX      reduce using rule 273 (atom -> LPAR RPAR .)
    VBAR            reduce using rule 273 (atom -> LPAR RPAR .)
    LESS            reduce using rule 273 (atom -> LPAR RPAR .)
    GREATER         reduce using rule 273 (atom -> LPAR RPAR .)
    EQEQUAL         reduce using rule 273 (atom -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 273 (atom -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 273 (atom -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 273 (atom -> LPAR RPAR .)
    IN              reduce using rule 273 (atom -> LPAR RPAR .)
    IS              reduce using rule 273 (atom -> LPAR RPAR .)
    NOT             reduce using rule 273 (atom -> LPAR RPAR .)
    AND             reduce using rule 273 (atom -> LPAR RPAR .)
    OR              reduce using rule 273 (atom -> LPAR RPAR .)
    IF              reduce using rule 273 (atom -> LPAR RPAR .)
    COMMA           reduce using rule 273 (atom -> LPAR RPAR .)
    PLUSEQUAL       reduce using rule 273 (atom -> LPAR RPAR .)
    MINEQUAL        reduce using rule 273 (atom -> LPAR RPAR .)
    STAREQUAL       reduce using rule 273 (atom -> LPAR RPAR .)
    SLASHEQUAL      reduce using rule 273 (atom -> LPAR RPAR .)
    PERCENTEQUAL    reduce using rule 273 (atom -> LPAR RPAR .)
    AMPEREQUAL      reduce using rule 273 (atom -> LPAR RPAR .)
    VBAREQUAL       reduce using rule 273 (atom -> LPAR RPAR .)
    CIRCUMFLEXEQUAL reduce using rule 273 (atom -> LPAR RPAR .)
    LEFTSHIFTEQUAL  reduce using rule 273 (atom -> LPAR RPAR .)
    RIGHTSHIFTEQUAL reduce using rule 273 (atom -> LPAR RPAR .)
    DOUBLESTAREQUAL reduce using rule 273 (atom -> LPAR RPAR .)
    DOUBLESLASHEQUAL reduce using rule 273 (atom -> LPAR RPAR .)
    EQUAL           reduce using rule 273 (atom -> LPAR RPAR .)
    NEWLINE         reduce using rule 273 (atom -> LPAR RPAR .)
    SEMI            reduce using rule 273 (atom -> LPAR RPAR .)
    FOR             reduce using rule 273 (atom -> LPAR RPAR .)
    RPAR            reduce using rule 273 (atom -> LPAR RPAR .)
    COLON           reduce using rule 273 (atom -> LPAR RPAR .)
    AS              reduce using rule 273 (atom -> LPAR RPAR .)
    BACKQUOTE       reduce using rule 273 (atom -> LPAR RPAR .)
    RSQB            reduce using rule 273 (atom -> LPAR RPAR .)
    ELSE            reduce using rule 273 (atom -> LPAR RPAR .)
    RBRACE          reduce using rule 273 (atom -> LPAR RPAR .)


state 87

    (275) atom -> LPAR testlist_gexp . RPAR

    RPAR            shift and go to state 201


state 88

    (293) testlist_gexp -> test . gen_for
    (294) testlist_gexp -> test .
    (295) testlist_gexp -> test . COMMA
    (296) testlist_gexp -> test . testlist_gexp_star
    (297) testlist_gexp -> test . testlist_gexp_star COMMA
    (368) gen_for -> . FOR exprlist IN or_test
    (369) gen_for -> . FOR exprlist IN or_test gen_iter
    (298) testlist_gexp_star -> . COMMA test
    (299) testlist_gexp_star -> . testlist_gexp_star COMMA test

    RPAR            reduce using rule 294 (testlist_gexp -> test .)
    COMMA           shift and go to state 205
    FOR             shift and go to state 203

    testlist_gexp_star             shift and go to state 202
    gen_for                        shift and go to state 204

state 89

    (274) atom -> LPAR yield_expr . RPAR

    RPAR            shift and go to state 206


state 90

    (281) atom -> NAME .

    DOUBLESTAR      reduce using rule 281 (atom -> NAME .)
    LPAR            reduce using rule 281 (atom -> NAME .)
    LSQB            reduce using rule 281 (atom -> NAME .)
    DOT             reduce using rule 281 (atom -> NAME .)
    STAR            reduce using rule 281 (atom -> NAME .)
    SLASH           reduce using rule 281 (atom -> NAME .)
    PERCENT         reduce using rule 281 (atom -> NAME .)
    DOUBLESLASH     reduce using rule 281 (atom -> NAME .)
    PLUS            reduce using rule 281 (atom -> NAME .)
    MINUS           reduce using rule 281 (atom -> NAME .)
    LEFTSHIFT       reduce using rule 281 (atom -> NAME .)
    RIGHTSHIFT      reduce using rule 281 (atom -> NAME .)
    AMPER           reduce using rule 281 (atom -> NAME .)
    CIRCUMFLEX      reduce using rule 281 (atom -> NAME .)
    VBAR            reduce using rule 281 (atom -> NAME .)
    LESS            reduce using rule 281 (atom -> NAME .)
    GREATER         reduce using rule 281 (atom -> NAME .)
    EQEQUAL         reduce using rule 281 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 281 (atom -> NAME .)
    LESSEQUAL       reduce using rule 281 (atom -> NAME .)
    NOTEQUAL        reduce using rule 281 (atom -> NAME .)
    IN              reduce using rule 281 (atom -> NAME .)
    IS              reduce using rule 281 (atom -> NAME .)
    NOT             reduce using rule 281 (atom -> NAME .)
    AND             reduce using rule 281 (atom -> NAME .)
    OR              reduce using rule 281 (atom -> NAME .)
    IF              reduce using rule 281 (atom -> NAME .)
    COMMA           reduce using rule 281 (atom -> NAME .)
    PLUSEQUAL       reduce using rule 281 (atom -> NAME .)
    MINEQUAL        reduce using rule 281 (atom -> NAME .)
    STAREQUAL       reduce using rule 281 (atom -> NAME .)
    SLASHEQUAL      reduce using rule 281 (atom -> NAME .)
    PERCENTEQUAL    reduce using rule 281 (atom -> NAME .)
    AMPEREQUAL      reduce using rule 281 (atom -> NAME .)
    VBAREQUAL       reduce using rule 281 (atom -> NAME .)
    CIRCUMFLEXEQUAL reduce using rule 281 (atom -> NAME .)
    LEFTSHIFTEQUAL  reduce using rule 281 (atom -> NAME .)
    RIGHTSHIFTEQUAL reduce using rule 281 (atom -> NAME .)
    DOUBLESTAREQUAL reduce using rule 281 (atom -> NAME .)
    DOUBLESLASHEQUAL reduce using rule 281 (atom -> NAME .)
    EQUAL           reduce using rule 281 (atom -> NAME .)
    NEWLINE         reduce using rule 281 (atom -> NAME .)
    SEMI            reduce using rule 281 (atom -> NAME .)
    FOR             reduce using rule 281 (atom -> NAME .)
    RPAR            reduce using rule 281 (atom -> NAME .)
    COLON           reduce using rule 281 (atom -> NAME .)
    AS              reduce using rule 281 (atom -> NAME .)
    BACKQUOTE       reduce using rule 281 (atom -> NAME .)
    RSQB            reduce using rule 281 (atom -> NAME .)
    ELSE            reduce using rule 281 (atom -> NAME .)
    RBRACE          reduce using rule 281 (atom -> NAME .)


state 91

    (54) simple_stmt -> small_stmt NEWLINE .

    ENDMARKER       reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    NEWLINE         reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    IF              reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    WHILE           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    FOR             reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    TRY             reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    WITH            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    DEF             reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    CLASS           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    NAME            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    PRINT           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    DEL             reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    PASS            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    GLOBAL          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    EXEC            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    ASSERT          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    BREAK           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    CONTINUE        reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    RETURN          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    RAISE           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    IMPORT          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    FROM            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    YIELD           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    AT              reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    LAMBDA          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    NOT             reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    PLUS            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    MINUS           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    TILDE           reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    LPAR            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    LSQB            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    LBRACE          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    BACKQUOTE       reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    NUMBER          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    STRING          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    DEDENT          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    ELSE            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    ELIF            reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    FINALLY         reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)
    EXCEPT          reduce using rule 54 (simple_stmt -> small_stmt NEWLINE .)


state 92

    (56) simple_stmt -> small_stmt simple_stmt_star . NEWLINE
    (57) simple_stmt -> small_stmt simple_stmt_star . SEMI NEWLINE
    (59) simple_stmt_star -> simple_stmt_star . SEMI small_stmt

    NEWLINE         shift and go to state 207
    SEMI            shift and go to state 208


state 93

    (55) simple_stmt -> small_stmt SEMI . NEWLINE
    (58) simple_stmt_star -> SEMI . small_stmt
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 210
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 209
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    expr_stmt                      shift and go to state 21
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    raise_stmt                     shift and go to state 65
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 94

    (182) with_stmt -> WITH test . COLON suite
    (183) with_stmt -> WITH test . with_var COLON suite
    (184) with_var -> . AS expr

    COLON           shift and go to state 213
    AS              shift and go to state 211

    with_var                       shift and go to state 212

state 95

    (264) factor -> MINUS factor .

    STAR            reduce using rule 264 (factor -> MINUS factor .)
    SLASH           reduce using rule 264 (factor -> MINUS factor .)
    PERCENT         reduce using rule 264 (factor -> MINUS factor .)
    DOUBLESLASH     reduce using rule 264 (factor -> MINUS factor .)
    PLUS            reduce using rule 264 (factor -> MINUS factor .)
    MINUS           reduce using rule 264 (factor -> MINUS factor .)
    LEFTSHIFT       reduce using rule 264 (factor -> MINUS factor .)
    RIGHTSHIFT      reduce using rule 264 (factor -> MINUS factor .)
    AMPER           reduce using rule 264 (factor -> MINUS factor .)
    CIRCUMFLEX      reduce using rule 264 (factor -> MINUS factor .)
    VBAR            reduce using rule 264 (factor -> MINUS factor .)
    LESS            reduce using rule 264 (factor -> MINUS factor .)
    GREATER         reduce using rule 264 (factor -> MINUS factor .)
    EQEQUAL         reduce using rule 264 (factor -> MINUS factor .)
    GREATEREQUAL    reduce using rule 264 (factor -> MINUS factor .)
    LESSEQUAL       reduce using rule 264 (factor -> MINUS factor .)
    NOTEQUAL        reduce using rule 264 (factor -> MINUS factor .)
    IN              reduce using rule 264 (factor -> MINUS factor .)
    IS              reduce using rule 264 (factor -> MINUS factor .)
    NOT             reduce using rule 264 (factor -> MINUS factor .)
    AND             reduce using rule 264 (factor -> MINUS factor .)
    OR              reduce using rule 264 (factor -> MINUS factor .)
    ELSE            reduce using rule 264 (factor -> MINUS factor .)
    IF              reduce using rule 264 (factor -> MINUS factor .)
    COMMA           reduce using rule 264 (factor -> MINUS factor .)
    PLUSEQUAL       reduce using rule 264 (factor -> MINUS factor .)
    MINEQUAL        reduce using rule 264 (factor -> MINUS factor .)
    STAREQUAL       reduce using rule 264 (factor -> MINUS factor .)
    SLASHEQUAL      reduce using rule 264 (factor -> MINUS factor .)
    PERCENTEQUAL    reduce using rule 264 (factor -> MINUS factor .)
    AMPEREQUAL      reduce using rule 264 (factor -> MINUS factor .)
    VBAREQUAL       reduce using rule 264 (factor -> MINUS factor .)
    CIRCUMFLEXEQUAL reduce using rule 264 (factor -> MINUS factor .)
    LEFTSHIFTEQUAL  reduce using rule 264 (factor -> MINUS factor .)
    RIGHTSHIFTEQUAL reduce using rule 264 (factor -> MINUS factor .)
    DOUBLESTAREQUAL reduce using rule 264 (factor -> MINUS factor .)
    DOUBLESLASHEQUAL reduce using rule 264 (factor -> MINUS factor .)
    EQUAL           reduce using rule 264 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 264 (factor -> MINUS factor .)
    SEMI            reduce using rule 264 (factor -> MINUS factor .)
    FOR             reduce using rule 264 (factor -> MINUS factor .)
    RPAR            reduce using rule 264 (factor -> MINUS factor .)
    COLON           reduce using rule 264 (factor -> MINUS factor .)
    AS              reduce using rule 264 (factor -> MINUS factor .)
    BACKQUOTE       reduce using rule 264 (factor -> MINUS factor .)
    RSQB            reduce using rule 264 (factor -> MINUS factor .)
    RBRACE          reduce using rule 264 (factor -> MINUS factor .)


state 96

    (263) factor -> PLUS factor .

    STAR            reduce using rule 263 (factor -> PLUS factor .)
    SLASH           reduce using rule 263 (factor -> PLUS factor .)
    PERCENT         reduce using rule 263 (factor -> PLUS factor .)
    DOUBLESLASH     reduce using rule 263 (factor -> PLUS factor .)
    PLUS            reduce using rule 263 (factor -> PLUS factor .)
    MINUS           reduce using rule 263 (factor -> PLUS factor .)
    LEFTSHIFT       reduce using rule 263 (factor -> PLUS factor .)
    RIGHTSHIFT      reduce using rule 263 (factor -> PLUS factor .)
    AMPER           reduce using rule 263 (factor -> PLUS factor .)
    CIRCUMFLEX      reduce using rule 263 (factor -> PLUS factor .)
    VBAR            reduce using rule 263 (factor -> PLUS factor .)
    LESS            reduce using rule 263 (factor -> PLUS factor .)
    GREATER         reduce using rule 263 (factor -> PLUS factor .)
    EQEQUAL         reduce using rule 263 (factor -> PLUS factor .)
    GREATEREQUAL    reduce using rule 263 (factor -> PLUS factor .)
    LESSEQUAL       reduce using rule 263 (factor -> PLUS factor .)
    NOTEQUAL        reduce using rule 263 (factor -> PLUS factor .)
    IN              reduce using rule 263 (factor -> PLUS factor .)
    IS              reduce using rule 263 (factor -> PLUS factor .)
    NOT             reduce using rule 263 (factor -> PLUS factor .)
    AND             reduce using rule 263 (factor -> PLUS factor .)
    OR              reduce using rule 263 (factor -> PLUS factor .)
    ELSE            reduce using rule 263 (factor -> PLUS factor .)
    IF              reduce using rule 263 (factor -> PLUS factor .)
    COMMA           reduce using rule 263 (factor -> PLUS factor .)
    PLUSEQUAL       reduce using rule 263 (factor -> PLUS factor .)
    MINEQUAL        reduce using rule 263 (factor -> PLUS factor .)
    STAREQUAL       reduce using rule 263 (factor -> PLUS factor .)
    SLASHEQUAL      reduce using rule 263 (factor -> PLUS factor .)
    PERCENTEQUAL    reduce using rule 263 (factor -> PLUS factor .)
    AMPEREQUAL      reduce using rule 263 (factor -> PLUS factor .)
    VBAREQUAL       reduce using rule 263 (factor -> PLUS factor .)
    CIRCUMFLEXEQUAL reduce using rule 263 (factor -> PLUS factor .)
    LEFTSHIFTEQUAL  reduce using rule 263 (factor -> PLUS factor .)
    RIGHTSHIFTEQUAL reduce using rule 263 (factor -> PLUS factor .)
    DOUBLESTAREQUAL reduce using rule 263 (factor -> PLUS factor .)
    DOUBLESLASHEQUAL reduce using rule 263 (factor -> PLUS factor .)
    EQUAL           reduce using rule 263 (factor -> PLUS factor .)
    NEWLINE         reduce using rule 263 (factor -> PLUS factor .)
    SEMI            reduce using rule 263 (factor -> PLUS factor .)
    FOR             reduce using rule 263 (factor -> PLUS factor .)
    RPAR            reduce using rule 263 (factor -> PLUS factor .)
    COLON           reduce using rule 263 (factor -> PLUS factor .)
    AS              reduce using rule 263 (factor -> PLUS factor .)
    BACKQUOTE       reduce using rule 263 (factor -> PLUS factor .)
    RSQB            reduce using rule 263 (factor -> PLUS factor .)
    RBRACE          reduce using rule 263 (factor -> PLUS factor .)


state 97

    (255) term_star -> STAR . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 214
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 98

    (257) term_star -> PERCENT . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 215
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 99

    (258) term_star -> DOUBLESLASH . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 216
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 100

    (254) term -> factor term_star .
    (259) term_star -> term_star . STAR factor
    (260) term_star -> term_star . SLASH factor
    (261) term_star -> term_star . PERCENT factor
    (262) term_star -> term_star . DOUBLESLASH factor

    PLUS            reduce using rule 254 (term -> factor term_star .)
    MINUS           reduce using rule 254 (term -> factor term_star .)
    LEFTSHIFT       reduce using rule 254 (term -> factor term_star .)
    RIGHTSHIFT      reduce using rule 254 (term -> factor term_star .)
    AMPER           reduce using rule 254 (term -> factor term_star .)
    CIRCUMFLEX      reduce using rule 254 (term -> factor term_star .)
    VBAR            reduce using rule 254 (term -> factor term_star .)
    LESS            reduce using rule 254 (term -> factor term_star .)
    GREATER         reduce using rule 254 (term -> factor term_star .)
    EQEQUAL         reduce using rule 254 (term -> factor term_star .)
    GREATEREQUAL    reduce using rule 254 (term -> factor term_star .)
    LESSEQUAL       reduce using rule 254 (term -> factor term_star .)
    NOTEQUAL        reduce using rule 254 (term -> factor term_star .)
    IN              reduce using rule 254 (term -> factor term_star .)
    IS              reduce using rule 254 (term -> factor term_star .)
    NOT             reduce using rule 254 (term -> factor term_star .)
    AND             reduce using rule 254 (term -> factor term_star .)
    OR              reduce using rule 254 (term -> factor term_star .)
    IF              reduce using rule 254 (term -> factor term_star .)
    COMMA           reduce using rule 254 (term -> factor term_star .)
    NEWLINE         reduce using rule 254 (term -> factor term_star .)
    SEMI            reduce using rule 254 (term -> factor term_star .)
    EQUAL           reduce using rule 254 (term -> factor term_star .)
    FOR             reduce using rule 254 (term -> factor term_star .)
    RPAR            reduce using rule 254 (term -> factor term_star .)
    PLUSEQUAL       reduce using rule 254 (term -> factor term_star .)
    MINEQUAL        reduce using rule 254 (term -> factor term_star .)
    STAREQUAL       reduce using rule 254 (term -> factor term_star .)
    SLASHEQUAL      reduce using rule 254 (term -> factor term_star .)
    PERCENTEQUAL    reduce using rule 254 (term -> factor term_star .)
    AMPEREQUAL      reduce using rule 254 (term -> factor term_star .)
    VBAREQUAL       reduce using rule 254 (term -> factor term_star .)
    CIRCUMFLEXEQUAL reduce using rule 254 (term -> factor term_star .)
    LEFTSHIFTEQUAL  reduce using rule 254 (term -> factor term_star .)
    RIGHTSHIFTEQUAL reduce using rule 254 (term -> factor term_star .)
    DOUBLESTAREQUAL reduce using rule 254 (term -> factor term_star .)
    DOUBLESLASHEQUAL reduce using rule 254 (term -> factor term_star .)
    COLON           reduce using rule 254 (term -> factor term_star .)
    AS              reduce using rule 254 (term -> factor term_star .)
    BACKQUOTE       reduce using rule 254 (term -> factor term_star .)
    RSQB            reduce using rule 254 (term -> factor term_star .)
    RBRACE          reduce using rule 254 (term -> factor term_star .)
    ELSE            reduce using rule 254 (term -> factor term_star .)
    STAR            shift and go to state 217
    SLASH           shift and go to state 220
    PERCENT         shift and go to state 218
    DOUBLESLASH     shift and go to state 219


state 101

    (256) term_star -> SLASH . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 221
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 102

    (133) dotted_as_name -> dotted_name .
    (134) dotted_as_name -> dotted_name . AS NAME

    COMMA           reduce using rule 133 (dotted_as_name -> dotted_name .)
    NEWLINE         reduce using rule 133 (dotted_as_name -> dotted_name .)
    SEMI            reduce using rule 133 (dotted_as_name -> dotted_name .)
    AS              shift and go to state 222


state 103

    (145) dotted_name -> NAME .
    (146) dotted_name -> NAME . dotted_name_star
    (147) dotted_name_star -> . DOT NAME
    (148) dotted_name_star -> . dotted_name_star DOT NAME

    IMPORT          reduce using rule 145 (dotted_name -> NAME .)
    AS              reduce using rule 145 (dotted_name -> NAME .)
    COMMA           reduce using rule 145 (dotted_name -> NAME .)
    NEWLINE         reduce using rule 145 (dotted_name -> NAME .)
    SEMI            reduce using rule 145 (dotted_name -> NAME .)
    LPAR            reduce using rule 145 (dotted_name -> NAME .)
    DOT             shift and go to state 223

    dotted_name_star               shift and go to state 224

state 104

    (119) import_name -> IMPORT dotted_as_names .

    NEWLINE         reduce using rule 119 (import_name -> IMPORT dotted_as_names .)
    SEMI            reduce using rule 119 (import_name -> IMPORT dotted_as_names .)


state 105

    (141) dotted_as_names -> dotted_as_name .
    (142) dotted_as_names -> dotted_as_name . dotted_as_names_star
    (143) dotted_as_names_star -> . COMMA dotted_as_name
    (144) dotted_as_names_star -> . dotted_as_names_star COMMA dotted_as_name

    NEWLINE         reduce using rule 141 (dotted_as_names -> dotted_as_name .)
    SEMI            reduce using rule 141 (dotted_as_names -> dotted_as_name .)
    COMMA           shift and go to state 225

    dotted_as_names_star           shift and go to state 226

state 106

    (235) xor_expr_star -> CIRCUMFLEX . and_expr
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57
    and_expr                       shift and go to state 227

state 107

    (234) xor_expr -> and_expr xor_expr_star .
    (236) xor_expr_star -> xor_expr_star . CIRCUMFLEX and_expr

    VBAR            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    LESS            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    GREATER         reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    EQEQUAL         reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    GREATEREQUAL    reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    LESSEQUAL       reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    NOTEQUAL        reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    IN              reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    IS              reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    NOT             reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    AND             reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    OR              reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    IF              reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    COMMA           reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    PLUSEQUAL       reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    MINEQUAL        reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    STAREQUAL       reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    SLASHEQUAL      reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    PERCENTEQUAL    reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    AMPEREQUAL      reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    VBAREQUAL       reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    CIRCUMFLEXEQUAL reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    LEFTSHIFTEQUAL  reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    RIGHTSHIFTEQUAL reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    DOUBLESTAREQUAL reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    DOUBLESLASHEQUAL reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    EQUAL           reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    NEWLINE         reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    SEMI            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    BACKQUOTE       reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    RPAR            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    COLON           reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    FOR             reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    AS              reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    RSQB            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    ELSE            reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    RBRACE          reduce using rule 234 (xor_expr -> and_expr xor_expr_star .)
    CIRCUMFLEX      shift and go to state 228


state 108

    (153) exec_stmt -> EXEC expr .
    (154) exec_stmt -> EXEC expr . IN test
    (155) exec_stmt -> EXEC expr . IN test COMMA test

    NEWLINE         reduce using rule 153 (exec_stmt -> EXEC expr .)
    SEMI            reduce using rule 153 (exec_stmt -> EXEC expr .)
    IN              shift and go to state 229


state 109

    (81) augassign -> STAREQUAL .

    YIELD           reduce using rule 81 (augassign -> STAREQUAL .)
    LAMBDA          reduce using rule 81 (augassign -> STAREQUAL .)
    NOT             reduce using rule 81 (augassign -> STAREQUAL .)
    PLUS            reduce using rule 81 (augassign -> STAREQUAL .)
    MINUS           reduce using rule 81 (augassign -> STAREQUAL .)
    TILDE           reduce using rule 81 (augassign -> STAREQUAL .)
    LPAR            reduce using rule 81 (augassign -> STAREQUAL .)
    LSQB            reduce using rule 81 (augassign -> STAREQUAL .)
    LBRACE          reduce using rule 81 (augassign -> STAREQUAL .)
    BACKQUOTE       reduce using rule 81 (augassign -> STAREQUAL .)
    NAME            reduce using rule 81 (augassign -> STAREQUAL .)
    NUMBER          reduce using rule 81 (augassign -> STAREQUAL .)
    STRING          reduce using rule 81 (augassign -> STAREQUAL .)


state 110

    (82) augassign -> SLASHEQUAL .

    YIELD           reduce using rule 82 (augassign -> SLASHEQUAL .)
    LAMBDA          reduce using rule 82 (augassign -> SLASHEQUAL .)
    NOT             reduce using rule 82 (augassign -> SLASHEQUAL .)
    PLUS            reduce using rule 82 (augassign -> SLASHEQUAL .)
    MINUS           reduce using rule 82 (augassign -> SLASHEQUAL .)
    TILDE           reduce using rule 82 (augassign -> SLASHEQUAL .)
    LPAR            reduce using rule 82 (augassign -> SLASHEQUAL .)
    LSQB            reduce using rule 82 (augassign -> SLASHEQUAL .)
    LBRACE          reduce using rule 82 (augassign -> SLASHEQUAL .)
    BACKQUOTE       reduce using rule 82 (augassign -> SLASHEQUAL .)
    NAME            reduce using rule 82 (augassign -> SLASHEQUAL .)
    NUMBER          reduce using rule 82 (augassign -> SLASHEQUAL .)
    STRING          reduce using rule 82 (augassign -> SLASHEQUAL .)


state 111

    (80) augassign -> MINEQUAL .

    YIELD           reduce using rule 80 (augassign -> MINEQUAL .)
    LAMBDA          reduce using rule 80 (augassign -> MINEQUAL .)
    NOT             reduce using rule 80 (augassign -> MINEQUAL .)
    PLUS            reduce using rule 80 (augassign -> MINEQUAL .)
    MINUS           reduce using rule 80 (augassign -> MINEQUAL .)
    TILDE           reduce using rule 80 (augassign -> MINEQUAL .)
    LPAR            reduce using rule 80 (augassign -> MINEQUAL .)
    LSQB            reduce using rule 80 (augassign -> MINEQUAL .)
    LBRACE          reduce using rule 80 (augassign -> MINEQUAL .)
    BACKQUOTE       reduce using rule 80 (augassign -> MINEQUAL .)
    NAME            reduce using rule 80 (augassign -> MINEQUAL .)
    NUMBER          reduce using rule 80 (augassign -> MINEQUAL .)
    STRING          reduce using rule 80 (augassign -> MINEQUAL .)


state 112

    (86) augassign -> CIRCUMFLEXEQUAL .

    YIELD           reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    LAMBDA          reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    NOT             reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    PLUS            reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    MINUS           reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    TILDE           reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    LPAR            reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    LSQB            reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    LBRACE          reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    BACKQUOTE       reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    NAME            reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    NUMBER          reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)
    STRING          reduce using rule 86 (augassign -> CIRCUMFLEXEQUAL .)


state 113

    (85) augassign -> VBAREQUAL .

    YIELD           reduce using rule 85 (augassign -> VBAREQUAL .)
    LAMBDA          reduce using rule 85 (augassign -> VBAREQUAL .)
    NOT             reduce using rule 85 (augassign -> VBAREQUAL .)
    PLUS            reduce using rule 85 (augassign -> VBAREQUAL .)
    MINUS           reduce using rule 85 (augassign -> VBAREQUAL .)
    TILDE           reduce using rule 85 (augassign -> VBAREQUAL .)
    LPAR            reduce using rule 85 (augassign -> VBAREQUAL .)
    LSQB            reduce using rule 85 (augassign -> VBAREQUAL .)
    LBRACE          reduce using rule 85 (augassign -> VBAREQUAL .)
    BACKQUOTE       reduce using rule 85 (augassign -> VBAREQUAL .)
    NAME            reduce using rule 85 (augassign -> VBAREQUAL .)
    NUMBER          reduce using rule 85 (augassign -> VBAREQUAL .)
    STRING          reduce using rule 85 (augassign -> VBAREQUAL .)


state 114

    (71) expr_stmt -> testlist augassign . yield_expr
    (72) expr_stmt -> testlist augassign . testlist
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    yield_expr                     shift and go to state 230
    power                          shift and go to state 34
    testlist                       shift and go to state 231
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 115

    (75) expr_stmt_star -> EQUAL . yield_expr
    (76) expr_stmt_star -> EQUAL . testlist
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    yield_expr                     shift and go to state 232
    power                          shift and go to state 34
    testlist                       shift and go to state 233
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 116

    (89) augassign -> DOUBLESTAREQUAL .

    YIELD           reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    LAMBDA          reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    NOT             reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    PLUS            reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    MINUS           reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    TILDE           reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    LPAR            reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    LSQB            reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    LBRACE          reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    BACKQUOTE       reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    NAME            reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    NUMBER          reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)
    STRING          reduce using rule 89 (augassign -> DOUBLESTAREQUAL .)


state 117

    (84) augassign -> AMPEREQUAL .

    YIELD           reduce using rule 84 (augassign -> AMPEREQUAL .)
    LAMBDA          reduce using rule 84 (augassign -> AMPEREQUAL .)
    NOT             reduce using rule 84 (augassign -> AMPEREQUAL .)
    PLUS            reduce using rule 84 (augassign -> AMPEREQUAL .)
    MINUS           reduce using rule 84 (augassign -> AMPEREQUAL .)
    TILDE           reduce using rule 84 (augassign -> AMPEREQUAL .)
    LPAR            reduce using rule 84 (augassign -> AMPEREQUAL .)
    LSQB            reduce using rule 84 (augassign -> AMPEREQUAL .)
    LBRACE          reduce using rule 84 (augassign -> AMPEREQUAL .)
    BACKQUOTE       reduce using rule 84 (augassign -> AMPEREQUAL .)
    NAME            reduce using rule 84 (augassign -> AMPEREQUAL .)
    NUMBER          reduce using rule 84 (augassign -> AMPEREQUAL .)
    STRING          reduce using rule 84 (augassign -> AMPEREQUAL .)


state 118

    (79) augassign -> PLUSEQUAL .

    YIELD           reduce using rule 79 (augassign -> PLUSEQUAL .)
    LAMBDA          reduce using rule 79 (augassign -> PLUSEQUAL .)
    NOT             reduce using rule 79 (augassign -> PLUSEQUAL .)
    PLUS            reduce using rule 79 (augassign -> PLUSEQUAL .)
    MINUS           reduce using rule 79 (augassign -> PLUSEQUAL .)
    TILDE           reduce using rule 79 (augassign -> PLUSEQUAL .)
    LPAR            reduce using rule 79 (augassign -> PLUSEQUAL .)
    LSQB            reduce using rule 79 (augassign -> PLUSEQUAL .)
    LBRACE          reduce using rule 79 (augassign -> PLUSEQUAL .)
    BACKQUOTE       reduce using rule 79 (augassign -> PLUSEQUAL .)
    NAME            reduce using rule 79 (augassign -> PLUSEQUAL .)
    NUMBER          reduce using rule 79 (augassign -> PLUSEQUAL .)
    STRING          reduce using rule 79 (augassign -> PLUSEQUAL .)


state 119

    (90) augassign -> DOUBLESLASHEQUAL .

    YIELD           reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    LAMBDA          reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    NOT             reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    PLUS            reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    MINUS           reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    TILDE           reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    LPAR            reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    LSQB            reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    LBRACE          reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    BACKQUOTE       reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    NAME            reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    NUMBER          reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)
    STRING          reduce using rule 90 (augassign -> DOUBLESLASHEQUAL .)


state 120

    (74) expr_stmt -> testlist expr_stmt_star .
    (77) expr_stmt_star -> expr_stmt_star . EQUAL yield_expr
    (78) expr_stmt_star -> expr_stmt_star . EQUAL testlist

    NEWLINE         reduce using rule 74 (expr_stmt -> testlist expr_stmt_star .)
    SEMI            reduce using rule 74 (expr_stmt -> testlist expr_stmt_star .)
    EQUAL           shift and go to state 234


state 121

    (83) augassign -> PERCENTEQUAL .

    YIELD           reduce using rule 83 (augassign -> PERCENTEQUAL .)
    LAMBDA          reduce using rule 83 (augassign -> PERCENTEQUAL .)
    NOT             reduce using rule 83 (augassign -> PERCENTEQUAL .)
    PLUS            reduce using rule 83 (augassign -> PERCENTEQUAL .)
    MINUS           reduce using rule 83 (augassign -> PERCENTEQUAL .)
    TILDE           reduce using rule 83 (augassign -> PERCENTEQUAL .)
    LPAR            reduce using rule 83 (augassign -> PERCENTEQUAL .)
    LSQB            reduce using rule 83 (augassign -> PERCENTEQUAL .)
    LBRACE          reduce using rule 83 (augassign -> PERCENTEQUAL .)
    BACKQUOTE       reduce using rule 83 (augassign -> PERCENTEQUAL .)
    NAME            reduce using rule 83 (augassign -> PERCENTEQUAL .)
    NUMBER          reduce using rule 83 (augassign -> PERCENTEQUAL .)
    STRING          reduce using rule 83 (augassign -> PERCENTEQUAL .)


state 122

    (88) augassign -> RIGHTSHIFTEQUAL .

    YIELD           reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    LAMBDA          reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    NOT             reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    PLUS            reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    MINUS           reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    TILDE           reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    LPAR            reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    LSQB            reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    LBRACE          reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    BACKQUOTE       reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    NAME            reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    NUMBER          reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)
    STRING          reduce using rule 88 (augassign -> RIGHTSHIFTEQUAL .)


state 123

    (87) augassign -> LEFTSHIFTEQUAL .

    YIELD           reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    LAMBDA          reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    NOT             reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    PLUS            reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    MINUS           reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    TILDE           reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    LPAR            reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    LSQB            reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    LBRACE          reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    BACKQUOTE       reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    NAME            reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    NUMBER          reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)
    STRING          reduce using rule 87 (augassign -> LEFTSHIFTEQUAL .)


state 124

    (248) arith_expr -> term arith_expr_star .
    (251) arith_expr_star -> arith_expr_star . PLUS term
    (252) arith_expr_star -> arith_expr_star . MINUS term

    LEFTSHIFT       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    RIGHTSHIFT      reduce using rule 248 (arith_expr -> term arith_expr_star .)
    AMPER           reduce using rule 248 (arith_expr -> term arith_expr_star .)
    CIRCUMFLEX      reduce using rule 248 (arith_expr -> term arith_expr_star .)
    VBAR            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    LESS            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    GREATER         reduce using rule 248 (arith_expr -> term arith_expr_star .)
    EQEQUAL         reduce using rule 248 (arith_expr -> term arith_expr_star .)
    GREATEREQUAL    reduce using rule 248 (arith_expr -> term arith_expr_star .)
    LESSEQUAL       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    NOTEQUAL        reduce using rule 248 (arith_expr -> term arith_expr_star .)
    IN              reduce using rule 248 (arith_expr -> term arith_expr_star .)
    IS              reduce using rule 248 (arith_expr -> term arith_expr_star .)
    NOT             reduce using rule 248 (arith_expr -> term arith_expr_star .)
    AND             reduce using rule 248 (arith_expr -> term arith_expr_star .)
    OR              reduce using rule 248 (arith_expr -> term arith_expr_star .)
    IF              reduce using rule 248 (arith_expr -> term arith_expr_star .)
    COMMA           reduce using rule 248 (arith_expr -> term arith_expr_star .)
    PLUSEQUAL       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    MINEQUAL        reduce using rule 248 (arith_expr -> term arith_expr_star .)
    STAREQUAL       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    SLASHEQUAL      reduce using rule 248 (arith_expr -> term arith_expr_star .)
    PERCENTEQUAL    reduce using rule 248 (arith_expr -> term arith_expr_star .)
    AMPEREQUAL      reduce using rule 248 (arith_expr -> term arith_expr_star .)
    VBAREQUAL       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    CIRCUMFLEXEQUAL reduce using rule 248 (arith_expr -> term arith_expr_star .)
    LEFTSHIFTEQUAL  reduce using rule 248 (arith_expr -> term arith_expr_star .)
    RIGHTSHIFTEQUAL reduce using rule 248 (arith_expr -> term arith_expr_star .)
    DOUBLESTAREQUAL reduce using rule 248 (arith_expr -> term arith_expr_star .)
    DOUBLESLASHEQUAL reduce using rule 248 (arith_expr -> term arith_expr_star .)
    EQUAL           reduce using rule 248 (arith_expr -> term arith_expr_star .)
    NEWLINE         reduce using rule 248 (arith_expr -> term arith_expr_star .)
    SEMI            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    FOR             reduce using rule 248 (arith_expr -> term arith_expr_star .)
    RPAR            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    COLON           reduce using rule 248 (arith_expr -> term arith_expr_star .)
    AS              reduce using rule 248 (arith_expr -> term arith_expr_star .)
    BACKQUOTE       reduce using rule 248 (arith_expr -> term arith_expr_star .)
    RSQB            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    ELSE            reduce using rule 248 (arith_expr -> term arith_expr_star .)
    RBRACE          reduce using rule 248 (arith_expr -> term arith_expr_star .)
    PLUS            shift and go to state 235
    MINUS           shift and go to state 236


state 125

    (249) arith_expr_star -> PLUS . term
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 237
    power                          shift and go to state 34
    factor                         shift and go to state 11
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 126

    (250) arith_expr_star -> MINUS . term
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 238
    power                          shift and go to state 34
    factor                         shift and go to state 11
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 127

    (203) test -> or_test IF . or_test ELSE test
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 239

state 128

    (224) comp_op -> NOTEQUAL .

    PLUS            reduce using rule 224 (comp_op -> NOTEQUAL .)
    MINUS           reduce using rule 224 (comp_op -> NOTEQUAL .)
    TILDE           reduce using rule 224 (comp_op -> NOTEQUAL .)
    LPAR            reduce using rule 224 (comp_op -> NOTEQUAL .)
    LSQB            reduce using rule 224 (comp_op -> NOTEQUAL .)
    LBRACE          reduce using rule 224 (comp_op -> NOTEQUAL .)
    BACKQUOTE       reduce using rule 224 (comp_op -> NOTEQUAL .)
    NAME            reduce using rule 224 (comp_op -> NOTEQUAL .)
    NUMBER          reduce using rule 224 (comp_op -> NOTEQUAL .)
    STRING          reduce using rule 224 (comp_op -> NOTEQUAL .)


state 129

    (217) comparison_star -> comp_op . expr
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 240

state 130

    (220) comp_op -> GREATER .

    PLUS            reduce using rule 220 (comp_op -> GREATER .)
    MINUS           reduce using rule 220 (comp_op -> GREATER .)
    TILDE           reduce using rule 220 (comp_op -> GREATER .)
    LPAR            reduce using rule 220 (comp_op -> GREATER .)
    LSQB            reduce using rule 220 (comp_op -> GREATER .)
    LBRACE          reduce using rule 220 (comp_op -> GREATER .)
    BACKQUOTE       reduce using rule 220 (comp_op -> GREATER .)
    NAME            reduce using rule 220 (comp_op -> GREATER .)
    NUMBER          reduce using rule 220 (comp_op -> GREATER .)
    STRING          reduce using rule 220 (comp_op -> GREATER .)


state 131

    (219) comp_op -> LESS .

    PLUS            reduce using rule 219 (comp_op -> LESS .)
    MINUS           reduce using rule 219 (comp_op -> LESS .)
    TILDE           reduce using rule 219 (comp_op -> LESS .)
    LPAR            reduce using rule 219 (comp_op -> LESS .)
    LSQB            reduce using rule 219 (comp_op -> LESS .)
    LBRACE          reduce using rule 219 (comp_op -> LESS .)
    BACKQUOTE       reduce using rule 219 (comp_op -> LESS .)
    NAME            reduce using rule 219 (comp_op -> LESS .)
    NUMBER          reduce using rule 219 (comp_op -> LESS .)
    STRING          reduce using rule 219 (comp_op -> LESS .)


state 132

    (226) comp_op -> IS .
    (228) comp_op -> IS . NOT

    PLUS            reduce using rule 226 (comp_op -> IS .)
    MINUS           reduce using rule 226 (comp_op -> IS .)
    TILDE           reduce using rule 226 (comp_op -> IS .)
    LPAR            reduce using rule 226 (comp_op -> IS .)
    LSQB            reduce using rule 226 (comp_op -> IS .)
    LBRACE          reduce using rule 226 (comp_op -> IS .)
    BACKQUOTE       reduce using rule 226 (comp_op -> IS .)
    NAME            reduce using rule 226 (comp_op -> IS .)
    NUMBER          reduce using rule 226 (comp_op -> IS .)
    STRING          reduce using rule 226 (comp_op -> IS .)
    NOT             shift and go to state 241


state 133

    (222) comp_op -> GREATEREQUAL .

    PLUS            reduce using rule 222 (comp_op -> GREATEREQUAL .)
    MINUS           reduce using rule 222 (comp_op -> GREATEREQUAL .)
    TILDE           reduce using rule 222 (comp_op -> GREATEREQUAL .)
    LPAR            reduce using rule 222 (comp_op -> GREATEREQUAL .)
    LSQB            reduce using rule 222 (comp_op -> GREATEREQUAL .)
    LBRACE          reduce using rule 222 (comp_op -> GREATEREQUAL .)
    BACKQUOTE       reduce using rule 222 (comp_op -> GREATEREQUAL .)
    NAME            reduce using rule 222 (comp_op -> GREATEREQUAL .)
    NUMBER          reduce using rule 222 (comp_op -> GREATEREQUAL .)
    STRING          reduce using rule 222 (comp_op -> GREATEREQUAL .)


state 134

    (227) comp_op -> NOT . IN

    IN              shift and go to state 242


state 135

    (225) comp_op -> IN .

    PLUS            reduce using rule 225 (comp_op -> IN .)
    MINUS           reduce using rule 225 (comp_op -> IN .)
    TILDE           reduce using rule 225 (comp_op -> IN .)
    LPAR            reduce using rule 225 (comp_op -> IN .)
    LSQB            reduce using rule 225 (comp_op -> IN .)
    LBRACE          reduce using rule 225 (comp_op -> IN .)
    BACKQUOTE       reduce using rule 225 (comp_op -> IN .)
    NAME            reduce using rule 225 (comp_op -> IN .)
    NUMBER          reduce using rule 225 (comp_op -> IN .)
    STRING          reduce using rule 225 (comp_op -> IN .)


state 136

    (223) comp_op -> LESSEQUAL .

    PLUS            reduce using rule 223 (comp_op -> LESSEQUAL .)
    MINUS           reduce using rule 223 (comp_op -> LESSEQUAL .)
    TILDE           reduce using rule 223 (comp_op -> LESSEQUAL .)
    LPAR            reduce using rule 223 (comp_op -> LESSEQUAL .)
    LSQB            reduce using rule 223 (comp_op -> LESSEQUAL .)
    LBRACE          reduce using rule 223 (comp_op -> LESSEQUAL .)
    BACKQUOTE       reduce using rule 223 (comp_op -> LESSEQUAL .)
    NAME            reduce using rule 223 (comp_op -> LESSEQUAL .)
    NUMBER          reduce using rule 223 (comp_op -> LESSEQUAL .)
    STRING          reduce using rule 223 (comp_op -> LESSEQUAL .)


state 137

    (216) comparison -> expr comparison_star .
    (218) comparison_star -> comparison_star . comp_op expr
    (219) comp_op -> . LESS
    (220) comp_op -> . GREATER
    (221) comp_op -> . EQEQUAL
    (222) comp_op -> . GREATEREQUAL
    (223) comp_op -> . LESSEQUAL
    (224) comp_op -> . NOTEQUAL
    (225) comp_op -> . IN
    (226) comp_op -> . IS
    (227) comp_op -> . NOT IN
    (228) comp_op -> . IS NOT

    AND             reduce using rule 216 (comparison -> expr comparison_star .)
    OR              reduce using rule 216 (comparison -> expr comparison_star .)
    IF              reduce using rule 216 (comparison -> expr comparison_star .)
    RPAR            reduce using rule 216 (comparison -> expr comparison_star .)
    COMMA           reduce using rule 216 (comparison -> expr comparison_star .)
    BACKQUOTE       reduce using rule 216 (comparison -> expr comparison_star .)
    EQUAL           reduce using rule 216 (comparison -> expr comparison_star .)
    NEWLINE         reduce using rule 216 (comparison -> expr comparison_star .)
    SEMI            reduce using rule 216 (comparison -> expr comparison_star .)
    COLON           reduce using rule 216 (comparison -> expr comparison_star .)
    RSQB            reduce using rule 216 (comparison -> expr comparison_star .)
    FOR             reduce using rule 216 (comparison -> expr comparison_star .)
    PLUSEQUAL       reduce using rule 216 (comparison -> expr comparison_star .)
    MINEQUAL        reduce using rule 216 (comparison -> expr comparison_star .)
    STAREQUAL       reduce using rule 216 (comparison -> expr comparison_star .)
    SLASHEQUAL      reduce using rule 216 (comparison -> expr comparison_star .)
    PERCENTEQUAL    reduce using rule 216 (comparison -> expr comparison_star .)
    AMPEREQUAL      reduce using rule 216 (comparison -> expr comparison_star .)
    VBAREQUAL       reduce using rule 216 (comparison -> expr comparison_star .)
    CIRCUMFLEXEQUAL reduce using rule 216 (comparison -> expr comparison_star .)
    LEFTSHIFTEQUAL  reduce using rule 216 (comparison -> expr comparison_star .)
    RIGHTSHIFTEQUAL reduce using rule 216 (comparison -> expr comparison_star .)
    DOUBLESTAREQUAL reduce using rule 216 (comparison -> expr comparison_star .)
    DOUBLESLASHEQUAL reduce using rule 216 (comparison -> expr comparison_star .)
    AS              reduce using rule 216 (comparison -> expr comparison_star .)
    RBRACE          reduce using rule 216 (comparison -> expr comparison_star .)
    ELSE            reduce using rule 216 (comparison -> expr comparison_star .)
    LESS            shift and go to state 131
    GREATER         shift and go to state 130
    EQEQUAL         shift and go to state 138
    GREATEREQUAL    shift and go to state 133
    LESSEQUAL       shift and go to state 136
    NOTEQUAL        shift and go to state 128
    IN              shift and go to state 135
    IS              shift and go to state 132
    NOT             shift and go to state 134

    comp_op                        shift and go to state 243

state 138

    (221) comp_op -> EQEQUAL .

    PLUS            reduce using rule 221 (comp_op -> EQEQUAL .)
    MINUS           reduce using rule 221 (comp_op -> EQEQUAL .)
    TILDE           reduce using rule 221 (comp_op -> EQEQUAL .)
    LPAR            reduce using rule 221 (comp_op -> EQEQUAL .)
    LSQB            reduce using rule 221 (comp_op -> EQEQUAL .)
    LBRACE          reduce using rule 221 (comp_op -> EQEQUAL .)
    BACKQUOTE       reduce using rule 221 (comp_op -> EQEQUAL .)
    NAME            reduce using rule 221 (comp_op -> EQEQUAL .)
    NUMBER          reduce using rule 221 (comp_op -> EQEQUAL .)
    STRING          reduce using rule 221 (comp_op -> EQEQUAL .)


state 139

    (372) testlist1 -> test .
    (373) testlist1 -> test . testlist1_star
    (374) testlist1_star -> . COMMA test
    (375) testlist1_star -> . testlist1_star COMMA test

    BACKQUOTE       reduce using rule 372 (testlist1 -> test .)
    COMMA           shift and go to state 244

    testlist1_star                 shift and go to state 245

state 140

    (280) atom -> BACKQUOTE testlist1 . BACKQUOTE

    BACKQUOTE       shift and go to state 246


state 141

    (101) del_stmt -> DEL exprlist .

    NEWLINE         reduce using rule 101 (del_stmt -> DEL exprlist .)
    SEMI            reduce using rule 101 (del_stmt -> DEL exprlist .)


state 142

    (324) exprlist -> expr .
    (325) exprlist -> expr . COMMA
    (326) exprlist -> expr . exprlist_star
    (327) exprlist -> expr . exprlist_star COMMA
    (328) exprlist_star -> . COMMA expr
    (329) exprlist_star -> . exprlist_star COMMA expr

    IN              reduce using rule 324 (exprlist -> expr .)
    NEWLINE         reduce using rule 324 (exprlist -> expr .)
    SEMI            reduce using rule 324 (exprlist -> expr .)
    COMMA           shift and go to state 247

    exprlist_star                  shift and go to state 248

state 143

    (92) print_stmt -> PRINT test .
    (93) print_stmt -> PRINT test . COMMA
    (94) print_stmt -> PRINT test . print_stmt_plus
    (95) print_stmt -> PRINT test . print_stmt_plus COMMA
    (99) print_stmt_plus -> . COMMA test
    (100) print_stmt_plus -> . print_stmt_plus COMMA test

    NEWLINE         reduce using rule 92 (print_stmt -> PRINT test .)
    SEMI            reduce using rule 92 (print_stmt -> PRINT test .)
    COMMA           shift and go to state 250

    print_stmt_plus                shift and go to state 249

state 144

    (96) print_stmt -> PRINT RIGHTSHIFT . test
    (97) print_stmt -> PRINT RIGHTSHIFT . test print_stmt_plus
    (98) print_stmt -> PRINT RIGHTSHIFT . test print_stmt_plus COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 251
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 145

    (13) funcdef -> DEF NAME . parameters COLON suite
    (15) parameters -> . LPAR RPAR
    (16) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 252

    parameters                     shift and go to state 253

state 146

    (239) and_expr_star -> AMPER . shift_expr
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 254
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 147

    (238) and_expr -> shift_expr and_expr_star .
    (240) and_expr_star -> and_expr_star . AMPER shift_expr

    CIRCUMFLEX      reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    VBAR            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    COMMA           reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    NEWLINE         reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    SEMI            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    IN              reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    LESS            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    GREATER         reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    EQEQUAL         reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    GREATEREQUAL    reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    LESSEQUAL       reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    NOTEQUAL        reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    IS              reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    NOT             reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    AND             reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    OR              reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    IF              reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    BACKQUOTE       reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    PLUSEQUAL       reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    MINEQUAL        reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    STAREQUAL       reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    SLASHEQUAL      reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    PERCENTEQUAL    reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    AMPEREQUAL      reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    VBAREQUAL       reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    CIRCUMFLEXEQUAL reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    LEFTSHIFTEQUAL  reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    RIGHTSHIFTEQUAL reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    DOUBLESTAREQUAL reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    DOUBLESLASHEQUAL reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    EQUAL           reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    FOR             reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    RPAR            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    COLON           reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    AS              reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    RSQB            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    RBRACE          reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    ELSE            reduce using rule 238 (and_expr -> shift_expr and_expr_star .)
    AMPER           shift and go to state 255


state 148

    (14) funcdef -> decorators DEF . NAME parameters COLON suite

    NAME            shift and go to state 256


state 149

    (173) for_stmt -> FOR exprlist . IN testlist COLON suite
    (174) for_stmt -> FOR exprlist . IN testlist COLON suite ELSE COLON suite

    IN              shift and go to state 257


state 150

    (175) try_stmt -> TRY COLON . suite try_stmt_plus
    (176) try_stmt -> TRY COLON . suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> TRY COLON . suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> TRY COLON . suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> TRY COLON . suite FINALLY COLON suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 260
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 151

    (206) or_test -> and_test or_test_star .
    (208) or_test_star -> or_test_star . OR and_test

    IF              reduce using rule 206 (or_test -> and_test or_test_star .)
    COMMA           reduce using rule 206 (or_test -> and_test or_test_star .)
    PLUSEQUAL       reduce using rule 206 (or_test -> and_test or_test_star .)
    MINEQUAL        reduce using rule 206 (or_test -> and_test or_test_star .)
    STAREQUAL       reduce using rule 206 (or_test -> and_test or_test_star .)
    SLASHEQUAL      reduce using rule 206 (or_test -> and_test or_test_star .)
    PERCENTEQUAL    reduce using rule 206 (or_test -> and_test or_test_star .)
    AMPEREQUAL      reduce using rule 206 (or_test -> and_test or_test_star .)
    VBAREQUAL       reduce using rule 206 (or_test -> and_test or_test_star .)
    CIRCUMFLEXEQUAL reduce using rule 206 (or_test -> and_test or_test_star .)
    LEFTSHIFTEQUAL  reduce using rule 206 (or_test -> and_test or_test_star .)
    RIGHTSHIFTEQUAL reduce using rule 206 (or_test -> and_test or_test_star .)
    DOUBLESTAREQUAL reduce using rule 206 (or_test -> and_test or_test_star .)
    DOUBLESLASHEQUAL reduce using rule 206 (or_test -> and_test or_test_star .)
    EQUAL           reduce using rule 206 (or_test -> and_test or_test_star .)
    NEWLINE         reduce using rule 206 (or_test -> and_test or_test_star .)
    SEMI            reduce using rule 206 (or_test -> and_test or_test_star .)
    FOR             reduce using rule 206 (or_test -> and_test or_test_star .)
    RPAR            reduce using rule 206 (or_test -> and_test or_test_star .)
    AS              reduce using rule 206 (or_test -> and_test or_test_star .)
    COLON           reduce using rule 206 (or_test -> and_test or_test_star .)
    BACKQUOTE       reduce using rule 206 (or_test -> and_test or_test_star .)
    RBRACE          reduce using rule 206 (or_test -> and_test or_test_star .)
    RSQB            reduce using rule 206 (or_test -> and_test or_test_star .)
    ELSE            reduce using rule 206 (or_test -> and_test or_test_star .)
    OR              shift and go to state 261


state 152

    (207) or_test_star -> OR . and_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 262
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27

state 153

    (279) atom -> LBRACE dictmaker . RBRACE

    RBRACE          shift and go to state 263


state 154

    (336) dictmaker -> test . COLON test
    (337) dictmaker -> test . COLON test COMMA
    (338) dictmaker -> test . COLON test dictmaker_star
    (339) dictmaker -> test . COLON test dictmaker_star COMMA

    COLON           shift and go to state 264


state 155

    (278) atom -> LBRACE RBRACE .

    DOUBLESTAR      reduce using rule 278 (atom -> LBRACE RBRACE .)
    LPAR            reduce using rule 278 (atom -> LBRACE RBRACE .)
    LSQB            reduce using rule 278 (atom -> LBRACE RBRACE .)
    DOT             reduce using rule 278 (atom -> LBRACE RBRACE .)
    STAR            reduce using rule 278 (atom -> LBRACE RBRACE .)
    SLASH           reduce using rule 278 (atom -> LBRACE RBRACE .)
    PERCENT         reduce using rule 278 (atom -> LBRACE RBRACE .)
    DOUBLESLASH     reduce using rule 278 (atom -> LBRACE RBRACE .)
    PLUS            reduce using rule 278 (atom -> LBRACE RBRACE .)
    MINUS           reduce using rule 278 (atom -> LBRACE RBRACE .)
    LEFTSHIFT       reduce using rule 278 (atom -> LBRACE RBRACE .)
    RIGHTSHIFT      reduce using rule 278 (atom -> LBRACE RBRACE .)
    AMPER           reduce using rule 278 (atom -> LBRACE RBRACE .)
    CIRCUMFLEX      reduce using rule 278 (atom -> LBRACE RBRACE .)
    VBAR            reduce using rule 278 (atom -> LBRACE RBRACE .)
    LESS            reduce using rule 278 (atom -> LBRACE RBRACE .)
    GREATER         reduce using rule 278 (atom -> LBRACE RBRACE .)
    EQEQUAL         reduce using rule 278 (atom -> LBRACE RBRACE .)
    GREATEREQUAL    reduce using rule 278 (atom -> LBRACE RBRACE .)
    LESSEQUAL       reduce using rule 278 (atom -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 278 (atom -> LBRACE RBRACE .)
    IN              reduce using rule 278 (atom -> LBRACE RBRACE .)
    IS              reduce using rule 278 (atom -> LBRACE RBRACE .)
    NOT             reduce using rule 278 (atom -> LBRACE RBRACE .)
    AND             reduce using rule 278 (atom -> LBRACE RBRACE .)
    OR              reduce using rule 278 (atom -> LBRACE RBRACE .)
    IF              reduce using rule 278 (atom -> LBRACE RBRACE .)
    COMMA           reduce using rule 278 (atom -> LBRACE RBRACE .)
    PLUSEQUAL       reduce using rule 278 (atom -> LBRACE RBRACE .)
    MINEQUAL        reduce using rule 278 (atom -> LBRACE RBRACE .)
    STAREQUAL       reduce using rule 278 (atom -> LBRACE RBRACE .)
    SLASHEQUAL      reduce using rule 278 (atom -> LBRACE RBRACE .)
    PERCENTEQUAL    reduce using rule 278 (atom -> LBRACE RBRACE .)
    AMPEREQUAL      reduce using rule 278 (atom -> LBRACE RBRACE .)
    VBAREQUAL       reduce using rule 278 (atom -> LBRACE RBRACE .)
    CIRCUMFLEXEQUAL reduce using rule 278 (atom -> LBRACE RBRACE .)
    LEFTSHIFTEQUAL  reduce using rule 278 (atom -> LBRACE RBRACE .)
    RIGHTSHIFTEQUAL reduce using rule 278 (atom -> LBRACE RBRACE .)
    DOUBLESTAREQUAL reduce using rule 278 (atom -> LBRACE RBRACE .)
    DOUBLESLASHEQUAL reduce using rule 278 (atom -> LBRACE RBRACE .)
    EQUAL           reduce using rule 278 (atom -> LBRACE RBRACE .)
    NEWLINE         reduce using rule 278 (atom -> LBRACE RBRACE .)
    SEMI            reduce using rule 278 (atom -> LBRACE RBRACE .)
    FOR             reduce using rule 278 (atom -> LBRACE RBRACE .)
    RPAR            reduce using rule 278 (atom -> LBRACE RBRACE .)
    COLON           reduce using rule 278 (atom -> LBRACE RBRACE .)
    AS              reduce using rule 278 (atom -> LBRACE RBRACE .)
    BACKQUOTE       reduce using rule 278 (atom -> LBRACE RBRACE .)
    RSQB            reduce using rule 278 (atom -> LBRACE RBRACE .)
    ELSE            reduce using rule 278 (atom -> LBRACE RBRACE .)
    RBRACE          reduce using rule 278 (atom -> LBRACE RBRACE .)


state 156

    (12) decorators_plus -> decorators_plus decorator .

    AT              reduce using rule 12 (decorators_plus -> decorators_plus decorator .)
    DEF             reduce using rule 12 (decorators_plus -> decorators_plus decorator .)


state 157

    (302) trailer -> LPAR . RPAR
    (303) trailer -> LPAR . arglist RPAR
    (345) arglist -> . argument
    (346) arglist -> . argument COMMA
    (347) arglist -> . STAR test
    (348) arglist -> . STAR test COMMA DOUBLESTAR test
    (349) arglist -> . DOUBLESTAR test
    (350) arglist -> . arglist_star argument
    (351) arglist -> . arglist_star argument COMMA
    (352) arglist -> . arglist_star STAR test
    (353) arglist -> . arglist_star STAR test COMMA DOUBLESTAR test
    (354) arglist -> . arglist_star DOUBLESTAR test
    (357) argument -> . test
    (358) argument -> . test gen_for
    (359) argument -> . test EQUAL test
    (355) arglist_star -> . argument COMMA
    (356) arglist_star -> . arglist_star argument COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            shift and go to state 266
    STAR            shift and go to state 265
    DOUBLESTAR      shift and go to state 267
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    argument                       shift and go to state 271
    not_test                       shift and go to state 72
    arglist                        shift and go to state 268
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 269
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    arglist_star                   shift and go to state 270
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 158

    (269) power -> atom power_star .
    (270) power -> atom power_star . DOUBLESTAR factor
    (272) power_star -> power_star . trailer
    (302) trailer -> . LPAR RPAR
    (303) trailer -> . LPAR arglist RPAR
    (304) trailer -> . LSQB subscriptlist RSQB
    (305) trailer -> . DOT NAME

    STAR            reduce using rule 269 (power -> atom power_star .)
    SLASH           reduce using rule 269 (power -> atom power_star .)
    PERCENT         reduce using rule 269 (power -> atom power_star .)
    DOUBLESLASH     reduce using rule 269 (power -> atom power_star .)
    PLUS            reduce using rule 269 (power -> atom power_star .)
    MINUS           reduce using rule 269 (power -> atom power_star .)
    LEFTSHIFT       reduce using rule 269 (power -> atom power_star .)
    RIGHTSHIFT      reduce using rule 269 (power -> atom power_star .)
    AMPER           reduce using rule 269 (power -> atom power_star .)
    CIRCUMFLEX      reduce using rule 269 (power -> atom power_star .)
    VBAR            reduce using rule 269 (power -> atom power_star .)
    LESS            reduce using rule 269 (power -> atom power_star .)
    GREATER         reduce using rule 269 (power -> atom power_star .)
    EQEQUAL         reduce using rule 269 (power -> atom power_star .)
    GREATEREQUAL    reduce using rule 269 (power -> atom power_star .)
    LESSEQUAL       reduce using rule 269 (power -> atom power_star .)
    NOTEQUAL        reduce using rule 269 (power -> atom power_star .)
    IN              reduce using rule 269 (power -> atom power_star .)
    IS              reduce using rule 269 (power -> atom power_star .)
    NOT             reduce using rule 269 (power -> atom power_star .)
    AND             reduce using rule 269 (power -> atom power_star .)
    OR              reduce using rule 269 (power -> atom power_star .)
    IF              reduce using rule 269 (power -> atom power_star .)
    EQUAL           reduce using rule 269 (power -> atom power_star .)
    FOR             reduce using rule 269 (power -> atom power_star .)
    COMMA           reduce using rule 269 (power -> atom power_star .)
    RPAR            reduce using rule 269 (power -> atom power_star .)
    NEWLINE         reduce using rule 269 (power -> atom power_star .)
    SEMI            reduce using rule 269 (power -> atom power_star .)
    PLUSEQUAL       reduce using rule 269 (power -> atom power_star .)
    MINEQUAL        reduce using rule 269 (power -> atom power_star .)
    STAREQUAL       reduce using rule 269 (power -> atom power_star .)
    SLASHEQUAL      reduce using rule 269 (power -> atom power_star .)
    PERCENTEQUAL    reduce using rule 269 (power -> atom power_star .)
    AMPEREQUAL      reduce using rule 269 (power -> atom power_star .)
    VBAREQUAL       reduce using rule 269 (power -> atom power_star .)
    CIRCUMFLEXEQUAL reduce using rule 269 (power -> atom power_star .)
    LEFTSHIFTEQUAL  reduce using rule 269 (power -> atom power_star .)
    RIGHTSHIFTEQUAL reduce using rule 269 (power -> atom power_star .)
    DOUBLESTAREQUAL reduce using rule 269 (power -> atom power_star .)
    DOUBLESLASHEQUAL reduce using rule 269 (power -> atom power_star .)
    COLON           reduce using rule 269 (power -> atom power_star .)
    AS              reduce using rule 269 (power -> atom power_star .)
    BACKQUOTE       reduce using rule 269 (power -> atom power_star .)
    RSQB            reduce using rule 269 (power -> atom power_star .)
    ELSE            reduce using rule 269 (power -> atom power_star .)
    RBRACE          reduce using rule 269 (power -> atom power_star .)
    DOUBLESTAR      shift and go to state 272
    LPAR            shift and go to state 157
    LSQB            shift and go to state 161
    DOT             shift and go to state 159

    trailer                        shift and go to state 273

state 159

    (305) trailer -> DOT . NAME

    NAME            shift and go to state 274


state 160

    (268) power -> atom DOUBLESTAR . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    atom                           shift and go to state 48
    factor                         shift and go to state 275
    atom_plus                      shift and go to state 57

state 161

    (304) trailer -> LSQB . subscriptlist RSQB
    (306) subscriptlist -> . subscript
    (307) subscriptlist -> . subscript COMMA
    (308) subscriptlist -> . subscript subscriptlist_star
    (309) subscriptlist -> . subscript subscriptlist_star COMMA
    (312) subscript -> . DOT DOT DOT
    (313) subscript -> . test
    (314) subscript -> . COLON
    (315) subscript -> . COLON sliceop
    (316) subscript -> . COLON test
    (317) subscript -> . COLON test sliceop
    (318) subscript -> . test COLON
    (319) subscript -> . test COLON sliceop
    (320) subscript -> . test COLON test
    (321) subscript -> . test COLON test sliceop
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    DOT             shift and go to state 277
    COLON           shift and go to state 276
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 278
    subscript                      shift and go to state 279
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    subscriptlist                  shift and go to state 280
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 162

    (271) power_star -> trailer .

    DOUBLESTAR      reduce using rule 271 (power_star -> trailer .)
    LPAR            reduce using rule 271 (power_star -> trailer .)
    LSQB            reduce using rule 271 (power_star -> trailer .)
    DOT             reduce using rule 271 (power_star -> trailer .)
    STAR            reduce using rule 271 (power_star -> trailer .)
    SLASH           reduce using rule 271 (power_star -> trailer .)
    PERCENT         reduce using rule 271 (power_star -> trailer .)
    DOUBLESLASH     reduce using rule 271 (power_star -> trailer .)
    PLUS            reduce using rule 271 (power_star -> trailer .)
    MINUS           reduce using rule 271 (power_star -> trailer .)
    LEFTSHIFT       reduce using rule 271 (power_star -> trailer .)
    RIGHTSHIFT      reduce using rule 271 (power_star -> trailer .)
    AMPER           reduce using rule 271 (power_star -> trailer .)
    CIRCUMFLEX      reduce using rule 271 (power_star -> trailer .)
    VBAR            reduce using rule 271 (power_star -> trailer .)
    LESS            reduce using rule 271 (power_star -> trailer .)
    GREATER         reduce using rule 271 (power_star -> trailer .)
    EQEQUAL         reduce using rule 271 (power_star -> trailer .)
    GREATEREQUAL    reduce using rule 271 (power_star -> trailer .)
    LESSEQUAL       reduce using rule 271 (power_star -> trailer .)
    NOTEQUAL        reduce using rule 271 (power_star -> trailer .)
    IN              reduce using rule 271 (power_star -> trailer .)
    IS              reduce using rule 271 (power_star -> trailer .)
    NOT             reduce using rule 271 (power_star -> trailer .)
    AND             reduce using rule 271 (power_star -> trailer .)
    OR              reduce using rule 271 (power_star -> trailer .)
    IF              reduce using rule 271 (power_star -> trailer .)
    COMMA           reduce using rule 271 (power_star -> trailer .)
    PLUSEQUAL       reduce using rule 271 (power_star -> trailer .)
    MINEQUAL        reduce using rule 271 (power_star -> trailer .)
    STAREQUAL       reduce using rule 271 (power_star -> trailer .)
    SLASHEQUAL      reduce using rule 271 (power_star -> trailer .)
    PERCENTEQUAL    reduce using rule 271 (power_star -> trailer .)
    AMPEREQUAL      reduce using rule 271 (power_star -> trailer .)
    VBAREQUAL       reduce using rule 271 (power_star -> trailer .)
    CIRCUMFLEXEQUAL reduce using rule 271 (power_star -> trailer .)
    LEFTSHIFTEQUAL  reduce using rule 271 (power_star -> trailer .)
    RIGHTSHIFTEQUAL reduce using rule 271 (power_star -> trailer .)
    DOUBLESTAREQUAL reduce using rule 271 (power_star -> trailer .)
    DOUBLESLASHEQUAL reduce using rule 271 (power_star -> trailer .)
    EQUAL           reduce using rule 271 (power_star -> trailer .)
    NEWLINE         reduce using rule 271 (power_star -> trailer .)
    SEMI            reduce using rule 271 (power_star -> trailer .)
    FOR             reduce using rule 271 (power_star -> trailer .)
    RPAR            reduce using rule 271 (power_star -> trailer .)
    COLON           reduce using rule 271 (power_star -> trailer .)
    AS              reduce using rule 271 (power_star -> trailer .)
    BACKQUOTE       reduce using rule 271 (power_star -> trailer .)
    RSQB            reduce using rule 271 (power_star -> trailer .)
    ELSE            reduce using rule 271 (power_star -> trailer .)
    RBRACE          reduce using rule 271 (power_star -> trailer .)


state 163

    (213) not_test -> NOT not_test .

    AND             reduce using rule 213 (not_test -> NOT not_test .)
    OR              reduce using rule 213 (not_test -> NOT not_test .)
    IF              reduce using rule 213 (not_test -> NOT not_test .)
    COMMA           reduce using rule 213 (not_test -> NOT not_test .)
    PLUSEQUAL       reduce using rule 213 (not_test -> NOT not_test .)
    MINEQUAL        reduce using rule 213 (not_test -> NOT not_test .)
    STAREQUAL       reduce using rule 213 (not_test -> NOT not_test .)
    SLASHEQUAL      reduce using rule 213 (not_test -> NOT not_test .)
    PERCENTEQUAL    reduce using rule 213 (not_test -> NOT not_test .)
    AMPEREQUAL      reduce using rule 213 (not_test -> NOT not_test .)
    VBAREQUAL       reduce using rule 213 (not_test -> NOT not_test .)
    CIRCUMFLEXEQUAL reduce using rule 213 (not_test -> NOT not_test .)
    LEFTSHIFTEQUAL  reduce using rule 213 (not_test -> NOT not_test .)
    RIGHTSHIFTEQUAL reduce using rule 213 (not_test -> NOT not_test .)
    DOUBLESTAREQUAL reduce using rule 213 (not_test -> NOT not_test .)
    DOUBLESLASHEQUAL reduce using rule 213 (not_test -> NOT not_test .)
    EQUAL           reduce using rule 213 (not_test -> NOT not_test .)
    NEWLINE         reduce using rule 213 (not_test -> NOT not_test .)
    SEMI            reduce using rule 213 (not_test -> NOT not_test .)
    FOR             reduce using rule 213 (not_test -> NOT not_test .)
    RPAR            reduce using rule 213 (not_test -> NOT not_test .)
    COLON           reduce using rule 213 (not_test -> NOT not_test .)
    AS              reduce using rule 213 (not_test -> NOT not_test .)
    BACKQUOTE       reduce using rule 213 (not_test -> NOT not_test .)
    RSQB            reduce using rule 213 (not_test -> NOT not_test .)
    ELSE            reduce using rule 213 (not_test -> NOT not_test .)
    RBRACE          reduce using rule 213 (not_test -> NOT not_test .)


state 164

    (45) fpdef -> LPAR . fplist RPAR
    (46) fplist -> . fpdef
    (47) fplist -> . fpdef COMMA
    (48) fplist -> . fpdef fplist_star
    (49) fplist -> . fpdef fplist_star COMMA
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fplist                         shift and go to state 282
    fpdef                          shift and go to state 281

state 165

    (37) varargslist -> STAR . NAME
    (38) varargslist -> STAR . NAME COMMA DOUBLESTAR NAME

    NAME            shift and go to state 283


state 166

    (44) fpdef -> NAME .

    COMMA           reduce using rule 44 (fpdef -> NAME .)
    RPAR            reduce using rule 44 (fpdef -> NAME .)
    EQUAL           reduce using rule 44 (fpdef -> NAME .)
    COLON           reduce using rule 44 (fpdef -> NAME .)


state 167

    (17) varargslist -> fpdef . COMMA STAR NAME
    (18) varargslist -> fpdef . COMMA STAR NAME COMMA DOUBLESTAR NAME
    (19) varargslist -> fpdef . COMMA DOUBLESTAR NAME
    (20) varargslist -> fpdef .
    (21) varargslist -> fpdef . COMMA
    (22) varargslist -> fpdef . varargslist_star COMMA STAR NAME
    (23) varargslist -> fpdef . varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> fpdef . varargslist_star COMMA DOUBLESTAR NAME
    (25) varargslist -> fpdef . varargslist_star
    (26) varargslist -> fpdef . varargslist_star COMMA
    (27) varargslist -> fpdef . EQUAL test COMMA STAR NAME
    (28) varargslist -> fpdef . EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> fpdef . EQUAL test COMMA DOUBLESTAR NAME
    (30) varargslist -> fpdef . EQUAL test
    (31) varargslist -> fpdef . EQUAL test COMMA
    (32) varargslist -> fpdef . EQUAL test varargslist_star COMMA STAR NAME
    (33) varargslist -> fpdef . EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> fpdef . EQUAL test varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> fpdef . EQUAL test varargslist_star
    (36) varargslist -> fpdef . EQUAL test varargslist_star COMMA
    (40) varargslist_star -> . COMMA fpdef
    (41) varargslist_star -> . COMMA fpdef EQUAL test
    (42) varargslist_star -> . varargslist_star COMMA fpdef
    (43) varargslist_star -> . varargslist_star COMMA fpdef EQUAL test

    COMMA           shift and go to state 286
    COLON           reduce using rule 20 (varargslist -> fpdef .)
    RPAR            reduce using rule 20 (varargslist -> fpdef .)
    EQUAL           shift and go to state 285

    varargslist_star               shift and go to state 284

state 168

    (301) lambdef -> LAMBDA varargslist . COLON test

    COLON           shift and go to state 287


state 169

    (39) varargslist -> DOUBLESTAR . NAME

    NAME            shift and go to state 288


state 170

    (300) lambdef -> LAMBDA COLON . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 289
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 171

    (114) raise_stmt -> RAISE test .
    (115) raise_stmt -> RAISE test . COMMA test
    (116) raise_stmt -> RAISE test . COMMA test COMMA test

    NEWLINE         reduce using rule 114 (raise_stmt -> RAISE test .)
    SEMI            reduce using rule 114 (raise_stmt -> RAISE test .)
    COMMA           shift and go to state 290


state 172

    (149) global_stmt -> GLOBAL NAME .
    (150) global_stmt -> GLOBAL NAME . global_stmt_star
    (151) global_stmt_star -> . COMMA NAME
    (152) global_stmt_star -> . global_stmt_star COMMA NAME

    NEWLINE         reduce using rule 149 (global_stmt -> GLOBAL NAME .)
    SEMI            reduce using rule 149 (global_stmt -> GLOBAL NAME .)
    COMMA           shift and go to state 291

    global_stmt_star               shift and go to state 292

state 173

    (171) while_stmt -> WHILE test . COLON suite
    (172) while_stmt -> WHILE test . COLON suite ELSE COLON suite

    COLON           shift and go to state 293


state 174

    (111) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 111 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 111 (return_stmt -> RETURN testlist .)


state 175

    (285) atom_plus -> atom_plus STRING .

    STRING          reduce using rule 285 (atom_plus -> atom_plus STRING .)
    DOUBLESTAR      reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LPAR            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LSQB            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    DOT             reduce using rule 285 (atom_plus -> atom_plus STRING .)
    STAR            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    SLASH           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    PERCENT         reduce using rule 285 (atom_plus -> atom_plus STRING .)
    DOUBLESLASH     reduce using rule 285 (atom_plus -> atom_plus STRING .)
    PLUS            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    MINUS           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LEFTSHIFT       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    RIGHTSHIFT      reduce using rule 285 (atom_plus -> atom_plus STRING .)
    AMPER           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    CIRCUMFLEX      reduce using rule 285 (atom_plus -> atom_plus STRING .)
    VBAR            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LESS            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    GREATER         reduce using rule 285 (atom_plus -> atom_plus STRING .)
    EQEQUAL         reduce using rule 285 (atom_plus -> atom_plus STRING .)
    GREATEREQUAL    reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LESSEQUAL       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    NOTEQUAL        reduce using rule 285 (atom_plus -> atom_plus STRING .)
    IN              reduce using rule 285 (atom_plus -> atom_plus STRING .)
    IS              reduce using rule 285 (atom_plus -> atom_plus STRING .)
    NOT             reduce using rule 285 (atom_plus -> atom_plus STRING .)
    AND             reduce using rule 285 (atom_plus -> atom_plus STRING .)
    OR              reduce using rule 285 (atom_plus -> atom_plus STRING .)
    IF              reduce using rule 285 (atom_plus -> atom_plus STRING .)
    COMMA           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    PLUSEQUAL       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    MINEQUAL        reduce using rule 285 (atom_plus -> atom_plus STRING .)
    STAREQUAL       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    SLASHEQUAL      reduce using rule 285 (atom_plus -> atom_plus STRING .)
    PERCENTEQUAL    reduce using rule 285 (atom_plus -> atom_plus STRING .)
    AMPEREQUAL      reduce using rule 285 (atom_plus -> atom_plus STRING .)
    VBAREQUAL       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    CIRCUMFLEXEQUAL reduce using rule 285 (atom_plus -> atom_plus STRING .)
    LEFTSHIFTEQUAL  reduce using rule 285 (atom_plus -> atom_plus STRING .)
    RIGHTSHIFTEQUAL reduce using rule 285 (atom_plus -> atom_plus STRING .)
    DOUBLESTAREQUAL reduce using rule 285 (atom_plus -> atom_plus STRING .)
    DOUBLESLASHEQUAL reduce using rule 285 (atom_plus -> atom_plus STRING .)
    EQUAL           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    NEWLINE         reduce using rule 285 (atom_plus -> atom_plus STRING .)
    SEMI            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    FOR             reduce using rule 285 (atom_plus -> atom_plus STRING .)
    RPAR            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    COLON           reduce using rule 285 (atom_plus -> atom_plus STRING .)
    AS              reduce using rule 285 (atom_plus -> atom_plus STRING .)
    BACKQUOTE       reduce using rule 285 (atom_plus -> atom_plus STRING .)
    RSQB            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    ELSE            reduce using rule 285 (atom_plus -> atom_plus STRING .)
    RBRACE          reduce using rule 285 (atom_plus -> atom_plus STRING .)


state 176

    (2) file_input -> file_input_star ENDMARKER .

    $end            reduce using rule 2 (file_input -> file_input_star ENDMARKER .)


state 177

    (4) file_input_star -> file_input_star NEWLINE .

    ENDMARKER       reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    NEWLINE         reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    IF              reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    WHILE           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    FOR             reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    TRY             reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    WITH            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    DEF             reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    CLASS           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    NAME            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    PRINT           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    DEL             reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    PASS            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    GLOBAL          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    EXEC            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    ASSERT          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    BREAK           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    CONTINUE        reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    RETURN          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    RAISE           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    IMPORT          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    FROM            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    YIELD           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    AT              reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    LAMBDA          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    NOT             reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    PLUS            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    MINUS           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    TILDE           reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    LPAR            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    LSQB            reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    LBRACE          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    BACKQUOTE       reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    NUMBER          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)
    STRING          reduce using rule 4 (file_input_star -> file_input_star NEWLINE .)


state 178

    (6) file_input_star -> file_input_star stmt .

    ENDMARKER       reduce using rule 6 (file_input_star -> file_input_star stmt .)
    NEWLINE         reduce using rule 6 (file_input_star -> file_input_star stmt .)
    IF              reduce using rule 6 (file_input_star -> file_input_star stmt .)
    WHILE           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    FOR             reduce using rule 6 (file_input_star -> file_input_star stmt .)
    TRY             reduce using rule 6 (file_input_star -> file_input_star stmt .)
    WITH            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    DEF             reduce using rule 6 (file_input_star -> file_input_star stmt .)
    CLASS           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    NAME            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    PRINT           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    DEL             reduce using rule 6 (file_input_star -> file_input_star stmt .)
    PASS            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    GLOBAL          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    EXEC            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    ASSERT          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    BREAK           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    CONTINUE        reduce using rule 6 (file_input_star -> file_input_star stmt .)
    RETURN          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    RAISE           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    IMPORT          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    FROM            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    YIELD           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    AT              reduce using rule 6 (file_input_star -> file_input_star stmt .)
    LAMBDA          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    NOT             reduce using rule 6 (file_input_star -> file_input_star stmt .)
    PLUS            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    MINUS           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    TILDE           reduce using rule 6 (file_input_star -> file_input_star stmt .)
    LPAR            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    LSQB            reduce using rule 6 (file_input_star -> file_input_star stmt .)
    LBRACE          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    BACKQUOTE       reduce using rule 6 (file_input_star -> file_input_star stmt .)
    NUMBER          reduce using rule 6 (file_input_star -> file_input_star stmt .)
    STRING          reduce using rule 6 (file_input_star -> file_input_star stmt .)


state 179

    (230) expr -> xor_expr expr_star .
    (232) expr_star -> expr_star . VBAR xor_expr

    LESS            reduce using rule 230 (expr -> xor_expr expr_star .)
    GREATER         reduce using rule 230 (expr -> xor_expr expr_star .)
    EQEQUAL         reduce using rule 230 (expr -> xor_expr expr_star .)
    GREATEREQUAL    reduce using rule 230 (expr -> xor_expr expr_star .)
    LESSEQUAL       reduce using rule 230 (expr -> xor_expr expr_star .)
    NOTEQUAL        reduce using rule 230 (expr -> xor_expr expr_star .)
    IN              reduce using rule 230 (expr -> xor_expr expr_star .)
    IS              reduce using rule 230 (expr -> xor_expr expr_star .)
    NOT             reduce using rule 230 (expr -> xor_expr expr_star .)
    AND             reduce using rule 230 (expr -> xor_expr expr_star .)
    OR              reduce using rule 230 (expr -> xor_expr expr_star .)
    IF              reduce using rule 230 (expr -> xor_expr expr_star .)
    COMMA           reduce using rule 230 (expr -> xor_expr expr_star .)
    BACKQUOTE       reduce using rule 230 (expr -> xor_expr expr_star .)
    PLUSEQUAL       reduce using rule 230 (expr -> xor_expr expr_star .)
    MINEQUAL        reduce using rule 230 (expr -> xor_expr expr_star .)
    STAREQUAL       reduce using rule 230 (expr -> xor_expr expr_star .)
    SLASHEQUAL      reduce using rule 230 (expr -> xor_expr expr_star .)
    PERCENTEQUAL    reduce using rule 230 (expr -> xor_expr expr_star .)
    AMPEREQUAL      reduce using rule 230 (expr -> xor_expr expr_star .)
    VBAREQUAL       reduce using rule 230 (expr -> xor_expr expr_star .)
    CIRCUMFLEXEQUAL reduce using rule 230 (expr -> xor_expr expr_star .)
    LEFTSHIFTEQUAL  reduce using rule 230 (expr -> xor_expr expr_star .)
    RIGHTSHIFTEQUAL reduce using rule 230 (expr -> xor_expr expr_star .)
    DOUBLESTAREQUAL reduce using rule 230 (expr -> xor_expr expr_star .)
    DOUBLESLASHEQUAL reduce using rule 230 (expr -> xor_expr expr_star .)
    EQUAL           reduce using rule 230 (expr -> xor_expr expr_star .)
    NEWLINE         reduce using rule 230 (expr -> xor_expr expr_star .)
    SEMI            reduce using rule 230 (expr -> xor_expr expr_star .)
    RBRACE          reduce using rule 230 (expr -> xor_expr expr_star .)
    FOR             reduce using rule 230 (expr -> xor_expr expr_star .)
    RPAR            reduce using rule 230 (expr -> xor_expr expr_star .)
    COLON           reduce using rule 230 (expr -> xor_expr expr_star .)
    AS              reduce using rule 230 (expr -> xor_expr expr_star .)
    RSQB            reduce using rule 230 (expr -> xor_expr expr_star .)
    ELSE            reduce using rule 230 (expr -> xor_expr expr_star .)
    VBAR            shift and go to state 294


state 180

    (231) expr_star -> VBAR . xor_expr
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    atom_plus                      shift and go to state 57
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    xor_expr                       shift and go to state 295
    and_expr                       shift and go to state 13

state 181

    (265) factor -> TILDE factor .

    STAR            reduce using rule 265 (factor -> TILDE factor .)
    SLASH           reduce using rule 265 (factor -> TILDE factor .)
    PERCENT         reduce using rule 265 (factor -> TILDE factor .)
    DOUBLESLASH     reduce using rule 265 (factor -> TILDE factor .)
    PLUS            reduce using rule 265 (factor -> TILDE factor .)
    MINUS           reduce using rule 265 (factor -> TILDE factor .)
    LEFTSHIFT       reduce using rule 265 (factor -> TILDE factor .)
    RIGHTSHIFT      reduce using rule 265 (factor -> TILDE factor .)
    AMPER           reduce using rule 265 (factor -> TILDE factor .)
    CIRCUMFLEX      reduce using rule 265 (factor -> TILDE factor .)
    VBAR            reduce using rule 265 (factor -> TILDE factor .)
    LESS            reduce using rule 265 (factor -> TILDE factor .)
    GREATER         reduce using rule 265 (factor -> TILDE factor .)
    EQEQUAL         reduce using rule 265 (factor -> TILDE factor .)
    GREATEREQUAL    reduce using rule 265 (factor -> TILDE factor .)
    LESSEQUAL       reduce using rule 265 (factor -> TILDE factor .)
    NOTEQUAL        reduce using rule 265 (factor -> TILDE factor .)
    IN              reduce using rule 265 (factor -> TILDE factor .)
    IS              reduce using rule 265 (factor -> TILDE factor .)
    NOT             reduce using rule 265 (factor -> TILDE factor .)
    AND             reduce using rule 265 (factor -> TILDE factor .)
    OR              reduce using rule 265 (factor -> TILDE factor .)
    ELSE            reduce using rule 265 (factor -> TILDE factor .)
    IF              reduce using rule 265 (factor -> TILDE factor .)
    COMMA           reduce using rule 265 (factor -> TILDE factor .)
    PLUSEQUAL       reduce using rule 265 (factor -> TILDE factor .)
    MINEQUAL        reduce using rule 265 (factor -> TILDE factor .)
    STAREQUAL       reduce using rule 265 (factor -> TILDE factor .)
    SLASHEQUAL      reduce using rule 265 (factor -> TILDE factor .)
    PERCENTEQUAL    reduce using rule 265 (factor -> TILDE factor .)
    AMPEREQUAL      reduce using rule 265 (factor -> TILDE factor .)
    VBAREQUAL       reduce using rule 265 (factor -> TILDE factor .)
    CIRCUMFLEXEQUAL reduce using rule 265 (factor -> TILDE factor .)
    LEFTSHIFTEQUAL  reduce using rule 265 (factor -> TILDE factor .)
    RIGHTSHIFTEQUAL reduce using rule 265 (factor -> TILDE factor .)
    DOUBLESTAREQUAL reduce using rule 265 (factor -> TILDE factor .)
    DOUBLESLASHEQUAL reduce using rule 265 (factor -> TILDE factor .)
    EQUAL           reduce using rule 265 (factor -> TILDE factor .)
    NEWLINE         reduce using rule 265 (factor -> TILDE factor .)
    SEMI            reduce using rule 265 (factor -> TILDE factor .)
    FOR             reduce using rule 265 (factor -> TILDE factor .)
    RPAR            reduce using rule 265 (factor -> TILDE factor .)
    COLON           reduce using rule 265 (factor -> TILDE factor .)
    AS              reduce using rule 265 (factor -> TILDE factor .)
    BACKQUOTE       reduce using rule 265 (factor -> TILDE factor .)
    RSQB            reduce using rule 265 (factor -> TILDE factor .)
    RBRACE          reduce using rule 265 (factor -> TILDE factor .)


state 182

    (277) atom -> LSQB listmaker . RSQB

    RSQB            shift and go to state 296


state 183

    (276) atom -> LSQB RSQB .

    DOUBLESTAR      reduce using rule 276 (atom -> LSQB RSQB .)
    LPAR            reduce using rule 276 (atom -> LSQB RSQB .)
    LSQB            reduce using rule 276 (atom -> LSQB RSQB .)
    DOT             reduce using rule 276 (atom -> LSQB RSQB .)
    STAR            reduce using rule 276 (atom -> LSQB RSQB .)
    SLASH           reduce using rule 276 (atom -> LSQB RSQB .)
    PERCENT         reduce using rule 276 (atom -> LSQB RSQB .)
    DOUBLESLASH     reduce using rule 276 (atom -> LSQB RSQB .)
    PLUS            reduce using rule 276 (atom -> LSQB RSQB .)
    MINUS           reduce using rule 276 (atom -> LSQB RSQB .)
    LEFTSHIFT       reduce using rule 276 (atom -> LSQB RSQB .)
    RIGHTSHIFT      reduce using rule 276 (atom -> LSQB RSQB .)
    AMPER           reduce using rule 276 (atom -> LSQB RSQB .)
    CIRCUMFLEX      reduce using rule 276 (atom -> LSQB RSQB .)
    VBAR            reduce using rule 276 (atom -> LSQB RSQB .)
    LESS            reduce using rule 276 (atom -> LSQB RSQB .)
    GREATER         reduce using rule 276 (atom -> LSQB RSQB .)
    EQEQUAL         reduce using rule 276 (atom -> LSQB RSQB .)
    GREATEREQUAL    reduce using rule 276 (atom -> LSQB RSQB .)
    LESSEQUAL       reduce using rule 276 (atom -> LSQB RSQB .)
    NOTEQUAL        reduce using rule 276 (atom -> LSQB RSQB .)
    IN              reduce using rule 276 (atom -> LSQB RSQB .)
    IS              reduce using rule 276 (atom -> LSQB RSQB .)
    NOT             reduce using rule 276 (atom -> LSQB RSQB .)
    AND             reduce using rule 276 (atom -> LSQB RSQB .)
    OR              reduce using rule 276 (atom -> LSQB RSQB .)
    IF              reduce using rule 276 (atom -> LSQB RSQB .)
    COMMA           reduce using rule 276 (atom -> LSQB RSQB .)
    PLUSEQUAL       reduce using rule 276 (atom -> LSQB RSQB .)
    MINEQUAL        reduce using rule 276 (atom -> LSQB RSQB .)
    STAREQUAL       reduce using rule 276 (atom -> LSQB RSQB .)
    SLASHEQUAL      reduce using rule 276 (atom -> LSQB RSQB .)
    PERCENTEQUAL    reduce using rule 276 (atom -> LSQB RSQB .)
    AMPEREQUAL      reduce using rule 276 (atom -> LSQB RSQB .)
    VBAREQUAL       reduce using rule 276 (atom -> LSQB RSQB .)
    CIRCUMFLEXEQUAL reduce using rule 276 (atom -> LSQB RSQB .)
    LEFTSHIFTEQUAL  reduce using rule 276 (atom -> LSQB RSQB .)
    RIGHTSHIFTEQUAL reduce using rule 276 (atom -> LSQB RSQB .)
    DOUBLESTAREQUAL reduce using rule 276 (atom -> LSQB RSQB .)
    DOUBLESLASHEQUAL reduce using rule 276 (atom -> LSQB RSQB .)
    EQUAL           reduce using rule 276 (atom -> LSQB RSQB .)
    NEWLINE         reduce using rule 276 (atom -> LSQB RSQB .)
    SEMI            reduce using rule 276 (atom -> LSQB RSQB .)
    FOR             reduce using rule 276 (atom -> LSQB RSQB .)
    RPAR            reduce using rule 276 (atom -> LSQB RSQB .)
    COLON           reduce using rule 276 (atom -> LSQB RSQB .)
    AS              reduce using rule 276 (atom -> LSQB RSQB .)
    BACKQUOTE       reduce using rule 276 (atom -> LSQB RSQB .)
    RSQB            reduce using rule 276 (atom -> LSQB RSQB .)
    ELSE            reduce using rule 276 (atom -> LSQB RSQB .)
    RBRACE          reduce using rule 276 (atom -> LSQB RSQB .)


state 184

    (286) listmaker -> test . list_for
    (287) listmaker -> test .
    (288) listmaker -> test . COMMA
    (289) listmaker -> test . listmaker_star
    (290) listmaker -> test . listmaker_star COMMA
    (362) list_for -> . FOR exprlist IN testlist_safe
    (363) list_for -> . FOR exprlist IN testlist_safe list_iter
    (291) listmaker_star -> . COMMA test
    (292) listmaker_star -> . listmaker_star COMMA test

    RSQB            reduce using rule 287 (listmaker -> test .)
    COMMA           shift and go to state 299
    FOR             shift and go to state 297

    list_for                       shift and go to state 298
    listmaker_star                 shift and go to state 300

state 185

    (69) expr_stmt -> NAME NAME . EQUAL yield_expr
    (70) expr_stmt -> NAME NAME . EQUAL testlist

    EQUAL           shift and go to state 301


state 186

    (156) assert_stmt -> ASSERT test .
    (157) assert_stmt -> ASSERT test . COMMA test

    NEWLINE         reduce using rule 156 (assert_stmt -> ASSERT test .)
    SEMI            reduce using rule 156 (assert_stmt -> ASSERT test .)
    COMMA           shift and go to state 302


state 187

    (243) shift_expr_star -> LEFTSHIFT . arith_expr
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    arith_expr                     shift and go to state 303
    power                          shift and go to state 34
    atom                           shift and go to state 48
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 188

    (244) shift_expr_star -> RIGHTSHIFT . arith_expr
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    arith_expr                     shift and go to state 304
    power                          shift and go to state 34
    atom                           shift and go to state 48
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 189

    (242) shift_expr -> arith_expr shift_expr_star .
    (245) shift_expr_star -> shift_expr_star . LEFTSHIFT arith_expr
    (246) shift_expr_star -> shift_expr_star . RIGHTSHIFT arith_expr

    AMPER           reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    CIRCUMFLEX      reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    VBAR            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    LESS            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    GREATER         reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    EQEQUAL         reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    GREATEREQUAL    reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    LESSEQUAL       reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    NOTEQUAL        reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    IN              reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    IS              reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    NOT             reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    AND             reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    OR              reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    IF              reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    NEWLINE         reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    SEMI            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    COMMA           reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    RPAR            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    PLUSEQUAL       reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    MINEQUAL        reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    STAREQUAL       reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    SLASHEQUAL      reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    PERCENTEQUAL    reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    AMPEREQUAL      reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    VBAREQUAL       reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    CIRCUMFLEXEQUAL reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    LEFTSHIFTEQUAL  reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    RIGHTSHIFTEQUAL reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    DOUBLESTAREQUAL reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    DOUBLESLASHEQUAL reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    EQUAL           reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    FOR             reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    COLON           reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    RSQB            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    AS              reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    BACKQUOTE       reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    ELSE            reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    RBRACE          reduce using rule 242 (shift_expr -> arith_expr shift_expr_star .)
    LEFTSHIFT       shift and go to state 305
    RIGHTSHIFT      shift and go to state 306


state 190

    (211) and_test_star -> AND . not_test
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 307
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27

state 191

    (210) and_test -> not_test and_test_star .
    (212) and_test_star -> and_test_star . AND not_test

    OR              reduce using rule 210 (and_test -> not_test and_test_star .)
    IF              reduce using rule 210 (and_test -> not_test and_test_star .)
    COMMA           reduce using rule 210 (and_test -> not_test and_test_star .)
    PLUSEQUAL       reduce using rule 210 (and_test -> not_test and_test_star .)
    MINEQUAL        reduce using rule 210 (and_test -> not_test and_test_star .)
    STAREQUAL       reduce using rule 210 (and_test -> not_test and_test_star .)
    SLASHEQUAL      reduce using rule 210 (and_test -> not_test and_test_star .)
    PERCENTEQUAL    reduce using rule 210 (and_test -> not_test and_test_star .)
    AMPEREQUAL      reduce using rule 210 (and_test -> not_test and_test_star .)
    VBAREQUAL       reduce using rule 210 (and_test -> not_test and_test_star .)
    CIRCUMFLEXEQUAL reduce using rule 210 (and_test -> not_test and_test_star .)
    LEFTSHIFTEQUAL  reduce using rule 210 (and_test -> not_test and_test_star .)
    RIGHTSHIFTEQUAL reduce using rule 210 (and_test -> not_test and_test_star .)
    DOUBLESTAREQUAL reduce using rule 210 (and_test -> not_test and_test_star .)
    DOUBLESLASHEQUAL reduce using rule 210 (and_test -> not_test and_test_star .)
    EQUAL           reduce using rule 210 (and_test -> not_test and_test_star .)
    NEWLINE         reduce using rule 210 (and_test -> not_test and_test_star .)
    SEMI            reduce using rule 210 (and_test -> not_test and_test_star .)
    RPAR            reduce using rule 210 (and_test -> not_test and_test_star .)
    COLON           reduce using rule 210 (and_test -> not_test and_test_star .)
    RSQB            reduce using rule 210 (and_test -> not_test and_test_star .)
    RBRACE          reduce using rule 210 (and_test -> not_test and_test_star .)
    FOR             reduce using rule 210 (and_test -> not_test and_test_star .)
    AS              reduce using rule 210 (and_test -> not_test and_test_star .)
    BACKQUOTE       reduce using rule 210 (and_test -> not_test and_test_star .)
    ELSE            reduce using rule 210 (and_test -> not_test and_test_star .)
    AND             shift and go to state 308


state 192

    (332) testlist -> test testlist_star .
    (333) testlist -> test testlist_star . COMMA
    (335) testlist_star -> testlist_star . COMMA test

    PLUSEQUAL       reduce using rule 332 (testlist -> test testlist_star .)
    MINEQUAL        reduce using rule 332 (testlist -> test testlist_star .)
    STAREQUAL       reduce using rule 332 (testlist -> test testlist_star .)
    SLASHEQUAL      reduce using rule 332 (testlist -> test testlist_star .)
    PERCENTEQUAL    reduce using rule 332 (testlist -> test testlist_star .)
    AMPEREQUAL      reduce using rule 332 (testlist -> test testlist_star .)
    VBAREQUAL       reduce using rule 332 (testlist -> test testlist_star .)
    CIRCUMFLEXEQUAL reduce using rule 332 (testlist -> test testlist_star .)
    LEFTSHIFTEQUAL  reduce using rule 332 (testlist -> test testlist_star .)
    RIGHTSHIFTEQUAL reduce using rule 332 (testlist -> test testlist_star .)
    DOUBLESTAREQUAL reduce using rule 332 (testlist -> test testlist_star .)
    DOUBLESLASHEQUAL reduce using rule 332 (testlist -> test testlist_star .)
    EQUAL           reduce using rule 332 (testlist -> test testlist_star .)
    NEWLINE         reduce using rule 332 (testlist -> test testlist_star .)
    SEMI            reduce using rule 332 (testlist -> test testlist_star .)
    COLON           reduce using rule 332 (testlist -> test testlist_star .)
    RPAR            reduce using rule 332 (testlist -> test testlist_star .)
    COMMA           shift and go to state 309


state 193

    (331) testlist -> test COMMA .
    (334) testlist_star -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUSEQUAL       reduce using rule 331 (testlist -> test COMMA .)
    MINEQUAL        reduce using rule 331 (testlist -> test COMMA .)
    STAREQUAL       reduce using rule 331 (testlist -> test COMMA .)
    SLASHEQUAL      reduce using rule 331 (testlist -> test COMMA .)
    PERCENTEQUAL    reduce using rule 331 (testlist -> test COMMA .)
    AMPEREQUAL      reduce using rule 331 (testlist -> test COMMA .)
    VBAREQUAL       reduce using rule 331 (testlist -> test COMMA .)
    CIRCUMFLEXEQUAL reduce using rule 331 (testlist -> test COMMA .)
    LEFTSHIFTEQUAL  reduce using rule 331 (testlist -> test COMMA .)
    RIGHTSHIFTEQUAL reduce using rule 331 (testlist -> test COMMA .)
    DOUBLESTAREQUAL reduce using rule 331 (testlist -> test COMMA .)
    DOUBLESLASHEQUAL reduce using rule 331 (testlist -> test COMMA .)
    EQUAL           reduce using rule 331 (testlist -> test COMMA .)
    NEWLINE         reduce using rule 331 (testlist -> test COMMA .)
    SEMI            reduce using rule 331 (testlist -> test COMMA .)
    COLON           reduce using rule 331 (testlist -> test COMMA .)
    RPAR            reduce using rule 331 (testlist -> test COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 310
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 194

    (342) classdef -> CLASS NAME . COLON suite
    (343) classdef -> CLASS NAME . LPAR RPAR COLON suite
    (344) classdef -> CLASS NAME . LPAR testlist RPAR COLON suite

    COLON           shift and go to state 312
    LPAR            shift and go to state 311


state 195

    (378) yield_expr -> YIELD testlist .

    NEWLINE         reduce using rule 378 (yield_expr -> YIELD testlist .)
    SEMI            reduce using rule 378 (yield_expr -> YIELD testlist .)
    EQUAL           reduce using rule 378 (yield_expr -> YIELD testlist .)
    RPAR            reduce using rule 378 (yield_expr -> YIELD testlist .)


state 196

    (7) decorator -> AT dotted_name . NEWLINE
    (8) decorator -> AT dotted_name . LPAR RPAR NEWLINE
    (9) decorator -> AT dotted_name . LPAR arglist RPAR NEWLINE

    NEWLINE         shift and go to state 314
    LPAR            shift and go to state 313


state 197

    (165) if_stmt -> IF test . COLON suite
    (166) if_stmt -> IF test . COLON suite ELSE COLON suite
    (167) if_stmt -> IF test . COLON suite if_stmt_star
    (168) if_stmt -> IF test . COLON suite if_stmt_star ELSE COLON suite

    COLON           shift and go to state 315


state 198

    (120) import_from -> FROM dotted_name . IMPORT STAR
    (121) import_from -> FROM dotted_name . IMPORT LPAR import_as_names RPAR
    (122) import_from -> FROM dotted_name . IMPORT import_as_names

    IMPORT          shift and go to state 316


state 199

    (123) import_from -> FROM import_from_plus . dotted_name IMPORT STAR
    (124) import_from -> FROM import_from_plus . dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> FROM import_from_plus . dotted_name IMPORT import_as_names
    (126) import_from -> FROM import_from_plus . IMPORT STAR
    (127) import_from -> FROM import_from_plus . IMPORT LPAR import_as_names RPAR
    (128) import_from -> FROM import_from_plus . IMPORT import_as_names
    (130) import_from_plus -> import_from_plus . DOT
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star

    IMPORT          shift and go to state 318
    DOT             shift and go to state 319
    NAME            shift and go to state 103

    dotted_name                    shift and go to state 317

state 200

    (129) import_from_plus -> DOT .

    IMPORT          reduce using rule 129 (import_from_plus -> DOT .)
    DOT             reduce using rule 129 (import_from_plus -> DOT .)
    NAME            reduce using rule 129 (import_from_plus -> DOT .)


state 201

    (275) atom -> LPAR testlist_gexp RPAR .

    DOUBLESTAR      reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LPAR            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LSQB            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    DOT             reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    STAR            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    SLASH           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    PERCENT         reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    DOUBLESLASH     reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    PLUS            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    MINUS           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LEFTSHIFT       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    RIGHTSHIFT      reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    AMPER           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    CIRCUMFLEX      reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    VBAR            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LESS            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    GREATER         reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    EQEQUAL         reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    GREATEREQUAL    reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LESSEQUAL       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    NOTEQUAL        reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    IN              reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    IS              reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    NOT             reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    AND             reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    OR              reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    IF              reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    COMMA           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    PLUSEQUAL       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    MINEQUAL        reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    STAREQUAL       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    SLASHEQUAL      reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    PERCENTEQUAL    reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    AMPEREQUAL      reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    VBAREQUAL       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    CIRCUMFLEXEQUAL reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    LEFTSHIFTEQUAL  reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    RIGHTSHIFTEQUAL reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    DOUBLESTAREQUAL reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    DOUBLESLASHEQUAL reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    EQUAL           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    NEWLINE         reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    SEMI            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    FOR             reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    RPAR            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    COLON           reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    AS              reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    BACKQUOTE       reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    RSQB            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    ELSE            reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)
    RBRACE          reduce using rule 275 (atom -> LPAR testlist_gexp RPAR .)


state 202

    (296) testlist_gexp -> test testlist_gexp_star .
    (297) testlist_gexp -> test testlist_gexp_star . COMMA
    (299) testlist_gexp_star -> testlist_gexp_star . COMMA test

    RPAR            reduce using rule 296 (testlist_gexp -> test testlist_gexp_star .)
    COMMA           shift and go to state 320


state 203

    (368) gen_for -> FOR . exprlist IN or_test
    (369) gen_for -> FOR . exprlist IN or_test gen_iter
    (324) exprlist -> . expr
    (325) exprlist -> . expr COMMA
    (326) exprlist -> . expr exprlist_star
    (327) exprlist -> . expr exprlist_star COMMA
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 321
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 142

state 204

    (293) testlist_gexp -> test gen_for .

    RPAR            reduce using rule 293 (testlist_gexp -> test gen_for .)


state 205

    (295) testlist_gexp -> test COMMA .
    (298) testlist_gexp_star -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            reduce using rule 295 (testlist_gexp -> test COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 322
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 206

    (274) atom -> LPAR yield_expr RPAR .

    DOUBLESTAR      reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LPAR            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LSQB            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    DOT             reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    STAR            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    SLASH           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    PERCENT         reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    DOUBLESLASH     reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    PLUS            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    MINUS           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LEFTSHIFT       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    RIGHTSHIFT      reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    AMPER           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    CIRCUMFLEX      reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    VBAR            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LESS            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    GREATER         reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    EQEQUAL         reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    GREATEREQUAL    reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LESSEQUAL       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    NOTEQUAL        reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    IN              reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    IS              reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    NOT             reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    AND             reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    OR              reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    IF              reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    COMMA           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    PLUSEQUAL       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    MINEQUAL        reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    STAREQUAL       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    SLASHEQUAL      reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    PERCENTEQUAL    reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    AMPEREQUAL      reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    VBAREQUAL       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    CIRCUMFLEXEQUAL reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    LEFTSHIFTEQUAL  reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    RIGHTSHIFTEQUAL reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    DOUBLESTAREQUAL reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    DOUBLESLASHEQUAL reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    EQUAL           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    NEWLINE         reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    SEMI            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    FOR             reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    RPAR            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    COLON           reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    AS              reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    BACKQUOTE       reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    RSQB            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    ELSE            reduce using rule 274 (atom -> LPAR yield_expr RPAR .)
    RBRACE          reduce using rule 274 (atom -> LPAR yield_expr RPAR .)


state 207

    (56) simple_stmt -> small_stmt simple_stmt_star NEWLINE .

    ENDMARKER       reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    NEWLINE         reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    IF              reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    WHILE           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    FOR             reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    TRY             reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    WITH            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    DEF             reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    CLASS           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    NAME            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    PRINT           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    DEL             reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    PASS            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    GLOBAL          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    EXEC            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    ASSERT          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    BREAK           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    CONTINUE        reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    RETURN          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    RAISE           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    IMPORT          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    FROM            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    YIELD           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    AT              reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    LAMBDA          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    NOT             reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    PLUS            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    MINUS           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    TILDE           reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    LPAR            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    LSQB            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    LBRACE          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    BACKQUOTE       reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    NUMBER          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    STRING          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    DEDENT          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    ELSE            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    ELIF            reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    FINALLY         reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)
    EXCEPT          reduce using rule 56 (simple_stmt -> small_stmt simple_stmt_star NEWLINE .)


state 208

    (57) simple_stmt -> small_stmt simple_stmt_star SEMI . NEWLINE
    (59) simple_stmt_star -> simple_stmt_star SEMI . small_stmt
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 324
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 323
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    expr_stmt                      shift and go to state 21
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    raise_stmt                     shift and go to state 65
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 209

    (58) simple_stmt_star -> SEMI small_stmt .

    NEWLINE         reduce using rule 58 (simple_stmt_star -> SEMI small_stmt .)
    SEMI            reduce using rule 58 (simple_stmt_star -> SEMI small_stmt .)


state 210

    (55) simple_stmt -> small_stmt SEMI NEWLINE .

    ENDMARKER       reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    NEWLINE         reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    IF              reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    WHILE           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    FOR             reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    TRY             reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    WITH            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    DEF             reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    CLASS           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    NAME            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    PRINT           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    DEL             reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    PASS            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    GLOBAL          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    EXEC            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    ASSERT          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    BREAK           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    CONTINUE        reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    RETURN          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    RAISE           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    IMPORT          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    FROM            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    YIELD           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    AT              reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    LAMBDA          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    NOT             reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    PLUS            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    MINUS           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    TILDE           reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    LPAR            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    LSQB            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    LBRACE          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    BACKQUOTE       reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    NUMBER          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    STRING          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    DEDENT          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    ELSE            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    ELIF            reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    FINALLY         reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)
    EXCEPT          reduce using rule 55 (simple_stmt -> small_stmt SEMI NEWLINE .)


state 211

    (184) with_var -> AS . expr
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 325

state 212

    (183) with_stmt -> WITH test with_var . COLON suite

    COLON           shift and go to state 326


state 213

    (182) with_stmt -> WITH test COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 327
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 214

    (255) term_star -> STAR factor .

    STAR            reduce using rule 255 (term_star -> STAR factor .)
    SLASH           reduce using rule 255 (term_star -> STAR factor .)
    PERCENT         reduce using rule 255 (term_star -> STAR factor .)
    DOUBLESLASH     reduce using rule 255 (term_star -> STAR factor .)
    PLUS            reduce using rule 255 (term_star -> STAR factor .)
    MINUS           reduce using rule 255 (term_star -> STAR factor .)
    LEFTSHIFT       reduce using rule 255 (term_star -> STAR factor .)
    RIGHTSHIFT      reduce using rule 255 (term_star -> STAR factor .)
    AMPER           reduce using rule 255 (term_star -> STAR factor .)
    CIRCUMFLEX      reduce using rule 255 (term_star -> STAR factor .)
    VBAR            reduce using rule 255 (term_star -> STAR factor .)
    LESS            reduce using rule 255 (term_star -> STAR factor .)
    GREATER         reduce using rule 255 (term_star -> STAR factor .)
    EQEQUAL         reduce using rule 255 (term_star -> STAR factor .)
    GREATEREQUAL    reduce using rule 255 (term_star -> STAR factor .)
    LESSEQUAL       reduce using rule 255 (term_star -> STAR factor .)
    NOTEQUAL        reduce using rule 255 (term_star -> STAR factor .)
    IN              reduce using rule 255 (term_star -> STAR factor .)
    IS              reduce using rule 255 (term_star -> STAR factor .)
    NOT             reduce using rule 255 (term_star -> STAR factor .)
    AND             reduce using rule 255 (term_star -> STAR factor .)
    OR              reduce using rule 255 (term_star -> STAR factor .)
    IF              reduce using rule 255 (term_star -> STAR factor .)
    COMMA           reduce using rule 255 (term_star -> STAR factor .)
    PLUSEQUAL       reduce using rule 255 (term_star -> STAR factor .)
    MINEQUAL        reduce using rule 255 (term_star -> STAR factor .)
    STAREQUAL       reduce using rule 255 (term_star -> STAR factor .)
    SLASHEQUAL      reduce using rule 255 (term_star -> STAR factor .)
    PERCENTEQUAL    reduce using rule 255 (term_star -> STAR factor .)
    AMPEREQUAL      reduce using rule 255 (term_star -> STAR factor .)
    VBAREQUAL       reduce using rule 255 (term_star -> STAR factor .)
    CIRCUMFLEXEQUAL reduce using rule 255 (term_star -> STAR factor .)
    LEFTSHIFTEQUAL  reduce using rule 255 (term_star -> STAR factor .)
    RIGHTSHIFTEQUAL reduce using rule 255 (term_star -> STAR factor .)
    DOUBLESTAREQUAL reduce using rule 255 (term_star -> STAR factor .)
    DOUBLESLASHEQUAL reduce using rule 255 (term_star -> STAR factor .)
    EQUAL           reduce using rule 255 (term_star -> STAR factor .)
    NEWLINE         reduce using rule 255 (term_star -> STAR factor .)
    SEMI            reduce using rule 255 (term_star -> STAR factor .)
    FOR             reduce using rule 255 (term_star -> STAR factor .)
    RPAR            reduce using rule 255 (term_star -> STAR factor .)
    COLON           reduce using rule 255 (term_star -> STAR factor .)
    AS              reduce using rule 255 (term_star -> STAR factor .)
    BACKQUOTE       reduce using rule 255 (term_star -> STAR factor .)
    RSQB            reduce using rule 255 (term_star -> STAR factor .)
    ELSE            reduce using rule 255 (term_star -> STAR factor .)
    RBRACE          reduce using rule 255 (term_star -> STAR factor .)


state 215

    (257) term_star -> PERCENT factor .

    STAR            reduce using rule 257 (term_star -> PERCENT factor .)
    SLASH           reduce using rule 257 (term_star -> PERCENT factor .)
    PERCENT         reduce using rule 257 (term_star -> PERCENT factor .)
    DOUBLESLASH     reduce using rule 257 (term_star -> PERCENT factor .)
    PLUS            reduce using rule 257 (term_star -> PERCENT factor .)
    MINUS           reduce using rule 257 (term_star -> PERCENT factor .)
    LEFTSHIFT       reduce using rule 257 (term_star -> PERCENT factor .)
    RIGHTSHIFT      reduce using rule 257 (term_star -> PERCENT factor .)
    AMPER           reduce using rule 257 (term_star -> PERCENT factor .)
    CIRCUMFLEX      reduce using rule 257 (term_star -> PERCENT factor .)
    VBAR            reduce using rule 257 (term_star -> PERCENT factor .)
    LESS            reduce using rule 257 (term_star -> PERCENT factor .)
    GREATER         reduce using rule 257 (term_star -> PERCENT factor .)
    EQEQUAL         reduce using rule 257 (term_star -> PERCENT factor .)
    GREATEREQUAL    reduce using rule 257 (term_star -> PERCENT factor .)
    LESSEQUAL       reduce using rule 257 (term_star -> PERCENT factor .)
    NOTEQUAL        reduce using rule 257 (term_star -> PERCENT factor .)
    IN              reduce using rule 257 (term_star -> PERCENT factor .)
    IS              reduce using rule 257 (term_star -> PERCENT factor .)
    NOT             reduce using rule 257 (term_star -> PERCENT factor .)
    AND             reduce using rule 257 (term_star -> PERCENT factor .)
    OR              reduce using rule 257 (term_star -> PERCENT factor .)
    IF              reduce using rule 257 (term_star -> PERCENT factor .)
    COMMA           reduce using rule 257 (term_star -> PERCENT factor .)
    PLUSEQUAL       reduce using rule 257 (term_star -> PERCENT factor .)
    MINEQUAL        reduce using rule 257 (term_star -> PERCENT factor .)
    STAREQUAL       reduce using rule 257 (term_star -> PERCENT factor .)
    SLASHEQUAL      reduce using rule 257 (term_star -> PERCENT factor .)
    PERCENTEQUAL    reduce using rule 257 (term_star -> PERCENT factor .)
    AMPEREQUAL      reduce using rule 257 (term_star -> PERCENT factor .)
    VBAREQUAL       reduce using rule 257 (term_star -> PERCENT factor .)
    CIRCUMFLEXEQUAL reduce using rule 257 (term_star -> PERCENT factor .)
    LEFTSHIFTEQUAL  reduce using rule 257 (term_star -> PERCENT factor .)
    RIGHTSHIFTEQUAL reduce using rule 257 (term_star -> PERCENT factor .)
    DOUBLESTAREQUAL reduce using rule 257 (term_star -> PERCENT factor .)
    DOUBLESLASHEQUAL reduce using rule 257 (term_star -> PERCENT factor .)
    EQUAL           reduce using rule 257 (term_star -> PERCENT factor .)
    NEWLINE         reduce using rule 257 (term_star -> PERCENT factor .)
    SEMI            reduce using rule 257 (term_star -> PERCENT factor .)
    FOR             reduce using rule 257 (term_star -> PERCENT factor .)
    RPAR            reduce using rule 257 (term_star -> PERCENT factor .)
    COLON           reduce using rule 257 (term_star -> PERCENT factor .)
    AS              reduce using rule 257 (term_star -> PERCENT factor .)
    BACKQUOTE       reduce using rule 257 (term_star -> PERCENT factor .)
    RSQB            reduce using rule 257 (term_star -> PERCENT factor .)
    ELSE            reduce using rule 257 (term_star -> PERCENT factor .)
    RBRACE          reduce using rule 257 (term_star -> PERCENT factor .)


state 216

    (258) term_star -> DOUBLESLASH factor .

    STAR            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    SLASH           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    PERCENT         reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    DOUBLESLASH     reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    PLUS            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    MINUS           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    LEFTSHIFT       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    RIGHTSHIFT      reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    AMPER           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    CIRCUMFLEX      reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    VBAR            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    LESS            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    GREATER         reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    EQEQUAL         reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    GREATEREQUAL    reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    LESSEQUAL       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    NOTEQUAL        reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    IN              reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    IS              reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    NOT             reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    AND             reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    OR              reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    IF              reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    COMMA           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    PLUSEQUAL       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    MINEQUAL        reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    STAREQUAL       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    SLASHEQUAL      reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    PERCENTEQUAL    reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    AMPEREQUAL      reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    VBAREQUAL       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    CIRCUMFLEXEQUAL reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    LEFTSHIFTEQUAL  reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    RIGHTSHIFTEQUAL reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    DOUBLESTAREQUAL reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    DOUBLESLASHEQUAL reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    EQUAL           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    NEWLINE         reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    SEMI            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    FOR             reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    RPAR            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    COLON           reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    AS              reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    BACKQUOTE       reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    RSQB            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    ELSE            reduce using rule 258 (term_star -> DOUBLESLASH factor .)
    RBRACE          reduce using rule 258 (term_star -> DOUBLESLASH factor .)


state 217

    (259) term_star -> term_star STAR . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 328
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 218

    (261) term_star -> term_star PERCENT . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 329
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 219

    (262) term_star -> term_star DOUBLESLASH . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 330
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 220

    (260) term_star -> term_star SLASH . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    factor                         shift and go to state 331
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 221

    (256) term_star -> SLASH factor .

    STAR            reduce using rule 256 (term_star -> SLASH factor .)
    SLASH           reduce using rule 256 (term_star -> SLASH factor .)
    PERCENT         reduce using rule 256 (term_star -> SLASH factor .)
    DOUBLESLASH     reduce using rule 256 (term_star -> SLASH factor .)
    PLUS            reduce using rule 256 (term_star -> SLASH factor .)
    MINUS           reduce using rule 256 (term_star -> SLASH factor .)
    LEFTSHIFT       reduce using rule 256 (term_star -> SLASH factor .)
    RIGHTSHIFT      reduce using rule 256 (term_star -> SLASH factor .)
    AMPER           reduce using rule 256 (term_star -> SLASH factor .)
    CIRCUMFLEX      reduce using rule 256 (term_star -> SLASH factor .)
    VBAR            reduce using rule 256 (term_star -> SLASH factor .)
    LESS            reduce using rule 256 (term_star -> SLASH factor .)
    GREATER         reduce using rule 256 (term_star -> SLASH factor .)
    EQEQUAL         reduce using rule 256 (term_star -> SLASH factor .)
    GREATEREQUAL    reduce using rule 256 (term_star -> SLASH factor .)
    LESSEQUAL       reduce using rule 256 (term_star -> SLASH factor .)
    NOTEQUAL        reduce using rule 256 (term_star -> SLASH factor .)
    IN              reduce using rule 256 (term_star -> SLASH factor .)
    IS              reduce using rule 256 (term_star -> SLASH factor .)
    NOT             reduce using rule 256 (term_star -> SLASH factor .)
    AND             reduce using rule 256 (term_star -> SLASH factor .)
    OR              reduce using rule 256 (term_star -> SLASH factor .)
    IF              reduce using rule 256 (term_star -> SLASH factor .)
    COMMA           reduce using rule 256 (term_star -> SLASH factor .)
    PLUSEQUAL       reduce using rule 256 (term_star -> SLASH factor .)
    MINEQUAL        reduce using rule 256 (term_star -> SLASH factor .)
    STAREQUAL       reduce using rule 256 (term_star -> SLASH factor .)
    SLASHEQUAL      reduce using rule 256 (term_star -> SLASH factor .)
    PERCENTEQUAL    reduce using rule 256 (term_star -> SLASH factor .)
    AMPEREQUAL      reduce using rule 256 (term_star -> SLASH factor .)
    VBAREQUAL       reduce using rule 256 (term_star -> SLASH factor .)
    CIRCUMFLEXEQUAL reduce using rule 256 (term_star -> SLASH factor .)
    LEFTSHIFTEQUAL  reduce using rule 256 (term_star -> SLASH factor .)
    RIGHTSHIFTEQUAL reduce using rule 256 (term_star -> SLASH factor .)
    DOUBLESTAREQUAL reduce using rule 256 (term_star -> SLASH factor .)
    DOUBLESLASHEQUAL reduce using rule 256 (term_star -> SLASH factor .)
    EQUAL           reduce using rule 256 (term_star -> SLASH factor .)
    NEWLINE         reduce using rule 256 (term_star -> SLASH factor .)
    SEMI            reduce using rule 256 (term_star -> SLASH factor .)
    FOR             reduce using rule 256 (term_star -> SLASH factor .)
    RPAR            reduce using rule 256 (term_star -> SLASH factor .)
    COLON           reduce using rule 256 (term_star -> SLASH factor .)
    AS              reduce using rule 256 (term_star -> SLASH factor .)
    BACKQUOTE       reduce using rule 256 (term_star -> SLASH factor .)
    RSQB            reduce using rule 256 (term_star -> SLASH factor .)
    ELSE            reduce using rule 256 (term_star -> SLASH factor .)
    RBRACE          reduce using rule 256 (term_star -> SLASH factor .)


state 222

    (134) dotted_as_name -> dotted_name AS . NAME

    NAME            shift and go to state 332


state 223

    (147) dotted_name_star -> DOT . NAME

    NAME            shift and go to state 333


state 224

    (146) dotted_name -> NAME dotted_name_star .
    (148) dotted_name_star -> dotted_name_star . DOT NAME

    IMPORT          reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    AS              reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    COMMA           reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    NEWLINE         reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    SEMI            reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    LPAR            reduce using rule 146 (dotted_name -> NAME dotted_name_star .)
    DOT             shift and go to state 334


state 225

    (143) dotted_as_names_star -> COMMA . dotted_as_name
    (133) dotted_as_name -> . dotted_name
    (134) dotted_as_name -> . dotted_name AS NAME
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star

    NAME            shift and go to state 103

    dotted_as_name                 shift and go to state 335
    dotted_name                    shift and go to state 102

state 226

    (142) dotted_as_names -> dotted_as_name dotted_as_names_star .
    (144) dotted_as_names_star -> dotted_as_names_star . COMMA dotted_as_name

    NEWLINE         reduce using rule 142 (dotted_as_names -> dotted_as_name dotted_as_names_star .)
    SEMI            reduce using rule 142 (dotted_as_names -> dotted_as_name dotted_as_names_star .)
    COMMA           shift and go to state 336


state 227

    (235) xor_expr_star -> CIRCUMFLEX and_expr .

    CIRCUMFLEX      reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    VBAR            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    LESS            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    GREATER         reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    EQEQUAL         reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    GREATEREQUAL    reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    LESSEQUAL       reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    NOTEQUAL        reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    IN              reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    IS              reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    NOT             reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    AND             reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    OR              reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    IF              reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    COMMA           reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    PLUSEQUAL       reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    MINEQUAL        reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    STAREQUAL       reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    SLASHEQUAL      reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    PERCENTEQUAL    reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    AMPEREQUAL      reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    VBAREQUAL       reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    CIRCUMFLEXEQUAL reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    LEFTSHIFTEQUAL  reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    RIGHTSHIFTEQUAL reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    DOUBLESTAREQUAL reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    DOUBLESLASHEQUAL reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    EQUAL           reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    NEWLINE         reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    SEMI            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    FOR             reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    RPAR            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    COLON           reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    AS              reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    BACKQUOTE       reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    RSQB            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    ELSE            reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)
    RBRACE          reduce using rule 235 (xor_expr_star -> CIRCUMFLEX and_expr .)


state 228

    (236) xor_expr_star -> xor_expr_star CIRCUMFLEX . and_expr
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57
    and_expr                       shift and go to state 337

state 229

    (154) exec_stmt -> EXEC expr IN . test
    (155) exec_stmt -> EXEC expr IN . test COMMA test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 338
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 230

    (71) expr_stmt -> testlist augassign yield_expr .

    NEWLINE         reduce using rule 71 (expr_stmt -> testlist augassign yield_expr .)
    SEMI            reduce using rule 71 (expr_stmt -> testlist augassign yield_expr .)


state 231

    (72) expr_stmt -> testlist augassign testlist .

    NEWLINE         reduce using rule 72 (expr_stmt -> testlist augassign testlist .)
    SEMI            reduce using rule 72 (expr_stmt -> testlist augassign testlist .)


state 232

    (75) expr_stmt_star -> EQUAL yield_expr .

    EQUAL           reduce using rule 75 (expr_stmt_star -> EQUAL yield_expr .)
    NEWLINE         reduce using rule 75 (expr_stmt_star -> EQUAL yield_expr .)
    SEMI            reduce using rule 75 (expr_stmt_star -> EQUAL yield_expr .)


state 233

    (76) expr_stmt_star -> EQUAL testlist .

    EQUAL           reduce using rule 76 (expr_stmt_star -> EQUAL testlist .)
    NEWLINE         reduce using rule 76 (expr_stmt_star -> EQUAL testlist .)
    SEMI            reduce using rule 76 (expr_stmt_star -> EQUAL testlist .)


state 234

    (77) expr_stmt_star -> expr_stmt_star EQUAL . yield_expr
    (78) expr_stmt_star -> expr_stmt_star EQUAL . testlist
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    yield_expr                     shift and go to state 339
    power                          shift and go to state 34
    testlist                       shift and go to state 340
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 235

    (251) arith_expr_star -> arith_expr_star PLUS . term
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 341
    power                          shift and go to state 34
    factor                         shift and go to state 11
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 236

    (252) arith_expr_star -> arith_expr_star MINUS . term
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 342
    power                          shift and go to state 34
    factor                         shift and go to state 11
    atom                           shift and go to state 48
    atom_plus                      shift and go to state 57

state 237

    (249) arith_expr_star -> PLUS term .

    PLUS            reduce using rule 249 (arith_expr_star -> PLUS term .)
    MINUS           reduce using rule 249 (arith_expr_star -> PLUS term .)
    LEFTSHIFT       reduce using rule 249 (arith_expr_star -> PLUS term .)
    RIGHTSHIFT      reduce using rule 249 (arith_expr_star -> PLUS term .)
    AMPER           reduce using rule 249 (arith_expr_star -> PLUS term .)
    CIRCUMFLEX      reduce using rule 249 (arith_expr_star -> PLUS term .)
    VBAR            reduce using rule 249 (arith_expr_star -> PLUS term .)
    LESS            reduce using rule 249 (arith_expr_star -> PLUS term .)
    GREATER         reduce using rule 249 (arith_expr_star -> PLUS term .)
    EQEQUAL         reduce using rule 249 (arith_expr_star -> PLUS term .)
    GREATEREQUAL    reduce using rule 249 (arith_expr_star -> PLUS term .)
    LESSEQUAL       reduce using rule 249 (arith_expr_star -> PLUS term .)
    NOTEQUAL        reduce using rule 249 (arith_expr_star -> PLUS term .)
    IN              reduce using rule 249 (arith_expr_star -> PLUS term .)
    IS              reduce using rule 249 (arith_expr_star -> PLUS term .)
    NOT             reduce using rule 249 (arith_expr_star -> PLUS term .)
    AND             reduce using rule 249 (arith_expr_star -> PLUS term .)
    OR              reduce using rule 249 (arith_expr_star -> PLUS term .)
    IF              reduce using rule 249 (arith_expr_star -> PLUS term .)
    COMMA           reduce using rule 249 (arith_expr_star -> PLUS term .)
    PLUSEQUAL       reduce using rule 249 (arith_expr_star -> PLUS term .)
    MINEQUAL        reduce using rule 249 (arith_expr_star -> PLUS term .)
    STAREQUAL       reduce using rule 249 (arith_expr_star -> PLUS term .)
    SLASHEQUAL      reduce using rule 249 (arith_expr_star -> PLUS term .)
    PERCENTEQUAL    reduce using rule 249 (arith_expr_star -> PLUS term .)
    AMPEREQUAL      reduce using rule 249 (arith_expr_star -> PLUS term .)
    VBAREQUAL       reduce using rule 249 (arith_expr_star -> PLUS term .)
    CIRCUMFLEXEQUAL reduce using rule 249 (arith_expr_star -> PLUS term .)
    LEFTSHIFTEQUAL  reduce using rule 249 (arith_expr_star -> PLUS term .)
    RIGHTSHIFTEQUAL reduce using rule 249 (arith_expr_star -> PLUS term .)
    DOUBLESTAREQUAL reduce using rule 249 (arith_expr_star -> PLUS term .)
    DOUBLESLASHEQUAL reduce using rule 249 (arith_expr_star -> PLUS term .)
    EQUAL           reduce using rule 249 (arith_expr_star -> PLUS term .)
    NEWLINE         reduce using rule 249 (arith_expr_star -> PLUS term .)
    SEMI            reduce using rule 249 (arith_expr_star -> PLUS term .)
    FOR             reduce using rule 249 (arith_expr_star -> PLUS term .)
    RPAR            reduce using rule 249 (arith_expr_star -> PLUS term .)
    COLON           reduce using rule 249 (arith_expr_star -> PLUS term .)
    AS              reduce using rule 249 (arith_expr_star -> PLUS term .)
    BACKQUOTE       reduce using rule 249 (arith_expr_star -> PLUS term .)
    RSQB            reduce using rule 249 (arith_expr_star -> PLUS term .)
    ELSE            reduce using rule 249 (arith_expr_star -> PLUS term .)
    RBRACE          reduce using rule 249 (arith_expr_star -> PLUS term .)


state 238

    (250) arith_expr_star -> MINUS term .

    PLUS            reduce using rule 250 (arith_expr_star -> MINUS term .)
    MINUS           reduce using rule 250 (arith_expr_star -> MINUS term .)
    LEFTSHIFT       reduce using rule 250 (arith_expr_star -> MINUS term .)
    RIGHTSHIFT      reduce using rule 250 (arith_expr_star -> MINUS term .)
    AMPER           reduce using rule 250 (arith_expr_star -> MINUS term .)
    CIRCUMFLEX      reduce using rule 250 (arith_expr_star -> MINUS term .)
    VBAR            reduce using rule 250 (arith_expr_star -> MINUS term .)
    LESS            reduce using rule 250 (arith_expr_star -> MINUS term .)
    GREATER         reduce using rule 250 (arith_expr_star -> MINUS term .)
    EQEQUAL         reduce using rule 250 (arith_expr_star -> MINUS term .)
    GREATEREQUAL    reduce using rule 250 (arith_expr_star -> MINUS term .)
    LESSEQUAL       reduce using rule 250 (arith_expr_star -> MINUS term .)
    NOTEQUAL        reduce using rule 250 (arith_expr_star -> MINUS term .)
    IN              reduce using rule 250 (arith_expr_star -> MINUS term .)
    IS              reduce using rule 250 (arith_expr_star -> MINUS term .)
    NOT             reduce using rule 250 (arith_expr_star -> MINUS term .)
    AND             reduce using rule 250 (arith_expr_star -> MINUS term .)
    OR              reduce using rule 250 (arith_expr_star -> MINUS term .)
    IF              reduce using rule 250 (arith_expr_star -> MINUS term .)
    COMMA           reduce using rule 250 (arith_expr_star -> MINUS term .)
    PLUSEQUAL       reduce using rule 250 (arith_expr_star -> MINUS term .)
    MINEQUAL        reduce using rule 250 (arith_expr_star -> MINUS term .)
    STAREQUAL       reduce using rule 250 (arith_expr_star -> MINUS term .)
    SLASHEQUAL      reduce using rule 250 (arith_expr_star -> MINUS term .)
    PERCENTEQUAL    reduce using rule 250 (arith_expr_star -> MINUS term .)
    AMPEREQUAL      reduce using rule 250 (arith_expr_star -> MINUS term .)
    VBAREQUAL       reduce using rule 250 (arith_expr_star -> MINUS term .)
    CIRCUMFLEXEQUAL reduce using rule 250 (arith_expr_star -> MINUS term .)
    LEFTSHIFTEQUAL  reduce using rule 250 (arith_expr_star -> MINUS term .)
    RIGHTSHIFTEQUAL reduce using rule 250 (arith_expr_star -> MINUS term .)
    DOUBLESTAREQUAL reduce using rule 250 (arith_expr_star -> MINUS term .)
    DOUBLESLASHEQUAL reduce using rule 250 (arith_expr_star -> MINUS term .)
    EQUAL           reduce using rule 250 (arith_expr_star -> MINUS term .)
    NEWLINE         reduce using rule 250 (arith_expr_star -> MINUS term .)
    SEMI            reduce using rule 250 (arith_expr_star -> MINUS term .)
    FOR             reduce using rule 250 (arith_expr_star -> MINUS term .)
    RPAR            reduce using rule 250 (arith_expr_star -> MINUS term .)
    COLON           reduce using rule 250 (arith_expr_star -> MINUS term .)
    AS              reduce using rule 250 (arith_expr_star -> MINUS term .)
    BACKQUOTE       reduce using rule 250 (arith_expr_star -> MINUS term .)
    RSQB            reduce using rule 250 (arith_expr_star -> MINUS term .)
    ELSE            reduce using rule 250 (arith_expr_star -> MINUS term .)
    RBRACE          reduce using rule 250 (arith_expr_star -> MINUS term .)


state 239

    (203) test -> or_test IF or_test . ELSE test

    ELSE            shift and go to state 343


state 240

    (217) comparison_star -> comp_op expr .

    LESS            reduce using rule 217 (comparison_star -> comp_op expr .)
    GREATER         reduce using rule 217 (comparison_star -> comp_op expr .)
    EQEQUAL         reduce using rule 217 (comparison_star -> comp_op expr .)
    GREATEREQUAL    reduce using rule 217 (comparison_star -> comp_op expr .)
    LESSEQUAL       reduce using rule 217 (comparison_star -> comp_op expr .)
    NOTEQUAL        reduce using rule 217 (comparison_star -> comp_op expr .)
    IN              reduce using rule 217 (comparison_star -> comp_op expr .)
    IS              reduce using rule 217 (comparison_star -> comp_op expr .)
    NOT             reduce using rule 217 (comparison_star -> comp_op expr .)
    AND             reduce using rule 217 (comparison_star -> comp_op expr .)
    OR              reduce using rule 217 (comparison_star -> comp_op expr .)
    IF              reduce using rule 217 (comparison_star -> comp_op expr .)
    COMMA           reduce using rule 217 (comparison_star -> comp_op expr .)
    PLUSEQUAL       reduce using rule 217 (comparison_star -> comp_op expr .)
    MINEQUAL        reduce using rule 217 (comparison_star -> comp_op expr .)
    STAREQUAL       reduce using rule 217 (comparison_star -> comp_op expr .)
    SLASHEQUAL      reduce using rule 217 (comparison_star -> comp_op expr .)
    PERCENTEQUAL    reduce using rule 217 (comparison_star -> comp_op expr .)
    AMPEREQUAL      reduce using rule 217 (comparison_star -> comp_op expr .)
    VBAREQUAL       reduce using rule 217 (comparison_star -> comp_op expr .)
    CIRCUMFLEXEQUAL reduce using rule 217 (comparison_star -> comp_op expr .)
    LEFTSHIFTEQUAL  reduce using rule 217 (comparison_star -> comp_op expr .)
    RIGHTSHIFTEQUAL reduce using rule 217 (comparison_star -> comp_op expr .)
    DOUBLESTAREQUAL reduce using rule 217 (comparison_star -> comp_op expr .)
    DOUBLESLASHEQUAL reduce using rule 217 (comparison_star -> comp_op expr .)
    EQUAL           reduce using rule 217 (comparison_star -> comp_op expr .)
    NEWLINE         reduce using rule 217 (comparison_star -> comp_op expr .)
    SEMI            reduce using rule 217 (comparison_star -> comp_op expr .)
    FOR             reduce using rule 217 (comparison_star -> comp_op expr .)
    RPAR            reduce using rule 217 (comparison_star -> comp_op expr .)
    COLON           reduce using rule 217 (comparison_star -> comp_op expr .)
    AS              reduce using rule 217 (comparison_star -> comp_op expr .)
    BACKQUOTE       reduce using rule 217 (comparison_star -> comp_op expr .)
    RSQB            reduce using rule 217 (comparison_star -> comp_op expr .)
    ELSE            reduce using rule 217 (comparison_star -> comp_op expr .)
    RBRACE          reduce using rule 217 (comparison_star -> comp_op expr .)


state 241

    (228) comp_op -> IS NOT .

    PLUS            reduce using rule 228 (comp_op -> IS NOT .)
    MINUS           reduce using rule 228 (comp_op -> IS NOT .)
    TILDE           reduce using rule 228 (comp_op -> IS NOT .)
    LPAR            reduce using rule 228 (comp_op -> IS NOT .)
    LSQB            reduce using rule 228 (comp_op -> IS NOT .)
    LBRACE          reduce using rule 228 (comp_op -> IS NOT .)
    BACKQUOTE       reduce using rule 228 (comp_op -> IS NOT .)
    NAME            reduce using rule 228 (comp_op -> IS NOT .)
    NUMBER          reduce using rule 228 (comp_op -> IS NOT .)
    STRING          reduce using rule 228 (comp_op -> IS NOT .)


state 242

    (227) comp_op -> NOT IN .

    PLUS            reduce using rule 227 (comp_op -> NOT IN .)
    MINUS           reduce using rule 227 (comp_op -> NOT IN .)
    TILDE           reduce using rule 227 (comp_op -> NOT IN .)
    LPAR            reduce using rule 227 (comp_op -> NOT IN .)
    LSQB            reduce using rule 227 (comp_op -> NOT IN .)
    LBRACE          reduce using rule 227 (comp_op -> NOT IN .)
    BACKQUOTE       reduce using rule 227 (comp_op -> NOT IN .)
    NAME            reduce using rule 227 (comp_op -> NOT IN .)
    NUMBER          reduce using rule 227 (comp_op -> NOT IN .)
    STRING          reduce using rule 227 (comp_op -> NOT IN .)


state 243

    (218) comparison_star -> comparison_star comp_op . expr
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 344

state 244

    (374) testlist1_star -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 345
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 245

    (373) testlist1 -> test testlist1_star .
    (375) testlist1_star -> testlist1_star . COMMA test

    BACKQUOTE       reduce using rule 373 (testlist1 -> test testlist1_star .)
    COMMA           shift and go to state 346


state 246

    (280) atom -> BACKQUOTE testlist1 BACKQUOTE .

    DOUBLESTAR      reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LPAR            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LSQB            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    DOT             reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STAR            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASH           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PERCENT         reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    DOUBLESLASH     reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PLUS            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    MINUS           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LEFTSHIFT       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RIGHTSHIFT      reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AMPER           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    CIRCUMFLEX      reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    VBAR            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LESS            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    GREATER         reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    EQEQUAL         reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    GREATEREQUAL    reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LESSEQUAL       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NOTEQUAL        reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IN              reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IS              reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NOT             reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AND             reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    OR              reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IF              reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    COMMA           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PLUSEQUAL       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    MINEQUAL        reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STAREQUAL       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASHEQUAL      reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PERCENTEQUAL    reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AMPEREQUAL      reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    VBAREQUAL       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    CIRCUMFLEXEQUAL reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LEFTSHIFTEQUAL  reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RIGHTSHIFTEQUAL reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    DOUBLESTAREQUAL reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    DOUBLESLASHEQUAL reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    EQUAL           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NEWLINE         reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SEMI            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    FOR             reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RPAR            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    COLON           reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AS              reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    BACKQUOTE       reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RSQB            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    ELSE            reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RBRACE          reduce using rule 280 (atom -> BACKQUOTE testlist1 BACKQUOTE .)


state 247

    (325) exprlist -> expr COMMA .
    (328) exprlist_star -> COMMA . expr
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    IN              reduce using rule 325 (exprlist -> expr COMMA .)
    NEWLINE         reduce using rule 325 (exprlist -> expr COMMA .)
    SEMI            reduce using rule 325 (exprlist -> expr COMMA .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 347

state 248

    (326) exprlist -> expr exprlist_star .
    (327) exprlist -> expr exprlist_star . COMMA
    (329) exprlist_star -> exprlist_star . COMMA expr

    IN              reduce using rule 326 (exprlist -> expr exprlist_star .)
    NEWLINE         reduce using rule 326 (exprlist -> expr exprlist_star .)
    SEMI            reduce using rule 326 (exprlist -> expr exprlist_star .)
    COMMA           shift and go to state 348


state 249

    (94) print_stmt -> PRINT test print_stmt_plus .
    (95) print_stmt -> PRINT test print_stmt_plus . COMMA
    (100) print_stmt_plus -> print_stmt_plus . COMMA test

    NEWLINE         reduce using rule 94 (print_stmt -> PRINT test print_stmt_plus .)
    SEMI            reduce using rule 94 (print_stmt -> PRINT test print_stmt_plus .)
    COMMA           shift and go to state 349


state 250

    (93) print_stmt -> PRINT test COMMA .
    (99) print_stmt_plus -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 93 (print_stmt -> PRINT test COMMA .)
    SEMI            reduce using rule 93 (print_stmt -> PRINT test COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 350
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 251

    (96) print_stmt -> PRINT RIGHTSHIFT test .
    (97) print_stmt -> PRINT RIGHTSHIFT test . print_stmt_plus
    (98) print_stmt -> PRINT RIGHTSHIFT test . print_stmt_plus COMMA
    (99) print_stmt_plus -> . COMMA test
    (100) print_stmt_plus -> . print_stmt_plus COMMA test

    NEWLINE         reduce using rule 96 (print_stmt -> PRINT RIGHTSHIFT test .)
    SEMI            reduce using rule 96 (print_stmt -> PRINT RIGHTSHIFT test .)
    COMMA           shift and go to state 352

    print_stmt_plus                shift and go to state 351

state 252

    (15) parameters -> LPAR . RPAR
    (16) parameters -> LPAR . varargslist RPAR
    (17) varargslist -> . fpdef COMMA STAR NAME
    (18) varargslist -> . fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME
    (19) varargslist -> . fpdef COMMA DOUBLESTAR NAME
    (20) varargslist -> . fpdef
    (21) varargslist -> . fpdef COMMA
    (22) varargslist -> . fpdef varargslist_star COMMA STAR NAME
    (23) varargslist -> . fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> . fpdef varargslist_star COMMA DOUBLESTAR NAME
    (25) varargslist -> . fpdef varargslist_star
    (26) varargslist -> . fpdef varargslist_star COMMA
    (27) varargslist -> . fpdef EQUAL test COMMA STAR NAME
    (28) varargslist -> . fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> . fpdef EQUAL test COMMA DOUBLESTAR NAME
    (30) varargslist -> . fpdef EQUAL test
    (31) varargslist -> . fpdef EQUAL test COMMA
    (32) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME
    (33) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> . fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> . fpdef EQUAL test varargslist_star
    (36) varargslist -> . fpdef EQUAL test varargslist_star COMMA
    (37) varargslist -> . STAR NAME
    (38) varargslist -> . STAR NAME COMMA DOUBLESTAR NAME
    (39) varargslist -> . DOUBLESTAR NAME
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    RPAR            shift and go to state 353
    STAR            shift and go to state 165
    DOUBLESTAR      shift and go to state 169
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 167
    varargslist                    shift and go to state 354

state 253

    (13) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 355


state 254

    (239) and_expr_star -> AMPER shift_expr .

    AMPER           reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    CIRCUMFLEX      reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    VBAR            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    LESS            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    GREATER         reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    EQEQUAL         reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    GREATEREQUAL    reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    LESSEQUAL       reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    NOTEQUAL        reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    IN              reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    IS              reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    NOT             reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    AND             reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    OR              reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    IF              reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    COMMA           reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    PLUSEQUAL       reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    MINEQUAL        reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    STAREQUAL       reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    SLASHEQUAL      reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    PERCENTEQUAL    reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    AMPEREQUAL      reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    VBAREQUAL       reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    CIRCUMFLEXEQUAL reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    LEFTSHIFTEQUAL  reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    RIGHTSHIFTEQUAL reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    DOUBLESTAREQUAL reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    DOUBLESLASHEQUAL reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    EQUAL           reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    NEWLINE         reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    SEMI            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    FOR             reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    RPAR            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    COLON           reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    AS              reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    BACKQUOTE       reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    RSQB            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    ELSE            reduce using rule 239 (and_expr_star -> AMPER shift_expr .)
    RBRACE          reduce using rule 239 (and_expr_star -> AMPER shift_expr .)


state 255

    (240) and_expr_star -> and_expr_star AMPER . shift_expr
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 356
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 256

    (14) funcdef -> decorators DEF NAME . parameters COLON suite
    (15) parameters -> . LPAR RPAR
    (16) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 252

    parameters                     shift and go to state 357

state 257

    (173) for_stmt -> FOR exprlist IN . testlist COLON suite
    (174) for_stmt -> FOR exprlist IN . testlist COLON suite ELSE COLON suite
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    testlist                       shift and go to state 358
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 258

    (190) suite -> NEWLINE . INDENT suite_plus DEDENT

    INDENT          shift and go to state 359


state 259

    (189) suite -> simple_stmt .

    ELSE            reduce using rule 189 (suite -> simple_stmt .)
    ENDMARKER       reduce using rule 189 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 189 (suite -> simple_stmt .)
    IF              reduce using rule 189 (suite -> simple_stmt .)
    WHILE           reduce using rule 189 (suite -> simple_stmt .)
    FOR             reduce using rule 189 (suite -> simple_stmt .)
    TRY             reduce using rule 189 (suite -> simple_stmt .)
    WITH            reduce using rule 189 (suite -> simple_stmt .)
    DEF             reduce using rule 189 (suite -> simple_stmt .)
    CLASS           reduce using rule 189 (suite -> simple_stmt .)
    NAME            reduce using rule 189 (suite -> simple_stmt .)
    PRINT           reduce using rule 189 (suite -> simple_stmt .)
    DEL             reduce using rule 189 (suite -> simple_stmt .)
    PASS            reduce using rule 189 (suite -> simple_stmt .)
    GLOBAL          reduce using rule 189 (suite -> simple_stmt .)
    EXEC            reduce using rule 189 (suite -> simple_stmt .)
    ASSERT          reduce using rule 189 (suite -> simple_stmt .)
    BREAK           reduce using rule 189 (suite -> simple_stmt .)
    CONTINUE        reduce using rule 189 (suite -> simple_stmt .)
    RETURN          reduce using rule 189 (suite -> simple_stmt .)
    RAISE           reduce using rule 189 (suite -> simple_stmt .)
    IMPORT          reduce using rule 189 (suite -> simple_stmt .)
    FROM            reduce using rule 189 (suite -> simple_stmt .)
    YIELD           reduce using rule 189 (suite -> simple_stmt .)
    AT              reduce using rule 189 (suite -> simple_stmt .)
    LAMBDA          reduce using rule 189 (suite -> simple_stmt .)
    NOT             reduce using rule 189 (suite -> simple_stmt .)
    PLUS            reduce using rule 189 (suite -> simple_stmt .)
    MINUS           reduce using rule 189 (suite -> simple_stmt .)
    TILDE           reduce using rule 189 (suite -> simple_stmt .)
    LPAR            reduce using rule 189 (suite -> simple_stmt .)
    LSQB            reduce using rule 189 (suite -> simple_stmt .)
    LBRACE          reduce using rule 189 (suite -> simple_stmt .)
    BACKQUOTE       reduce using rule 189 (suite -> simple_stmt .)
    NUMBER          reduce using rule 189 (suite -> simple_stmt .)
    STRING          reduce using rule 189 (suite -> simple_stmt .)
    DEDENT          reduce using rule 189 (suite -> simple_stmt .)
    FINALLY         reduce using rule 189 (suite -> simple_stmt .)
    EXCEPT          reduce using rule 189 (suite -> simple_stmt .)
    ELIF            reduce using rule 189 (suite -> simple_stmt .)


state 260

    (175) try_stmt -> TRY COLON suite . try_stmt_plus
    (176) try_stmt -> TRY COLON suite . try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> TRY COLON suite . try_stmt_plus ELSE COLON suite
    (178) try_stmt -> TRY COLON suite . try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> TRY COLON suite . FINALLY COLON suite
    (180) try_stmt_plus -> . except_clause COLON suite
    (181) try_stmt_plus -> . try_stmt_plus except_clause COLON suite
    (185) except_clause -> . EXCEPT
    (186) except_clause -> . EXCEPT test
    (187) except_clause -> . EXCEPT test AS test
    (188) except_clause -> . EXCEPT test COMMA test

    FINALLY         shift and go to state 362
    EXCEPT          shift and go to state 361

    except_clause                  shift and go to state 360
    try_stmt_plus                  shift and go to state 363

state 261

    (208) or_test_star -> or_test_star OR . and_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 364
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27

state 262

    (207) or_test_star -> OR and_test .

    OR              reduce using rule 207 (or_test_star -> OR and_test .)
    IF              reduce using rule 207 (or_test_star -> OR and_test .)
    COMMA           reduce using rule 207 (or_test_star -> OR and_test .)
    PLUSEQUAL       reduce using rule 207 (or_test_star -> OR and_test .)
    MINEQUAL        reduce using rule 207 (or_test_star -> OR and_test .)
    STAREQUAL       reduce using rule 207 (or_test_star -> OR and_test .)
    SLASHEQUAL      reduce using rule 207 (or_test_star -> OR and_test .)
    PERCENTEQUAL    reduce using rule 207 (or_test_star -> OR and_test .)
    AMPEREQUAL      reduce using rule 207 (or_test_star -> OR and_test .)
    VBAREQUAL       reduce using rule 207 (or_test_star -> OR and_test .)
    CIRCUMFLEXEQUAL reduce using rule 207 (or_test_star -> OR and_test .)
    LEFTSHIFTEQUAL  reduce using rule 207 (or_test_star -> OR and_test .)
    RIGHTSHIFTEQUAL reduce using rule 207 (or_test_star -> OR and_test .)
    DOUBLESTAREQUAL reduce using rule 207 (or_test_star -> OR and_test .)
    DOUBLESLASHEQUAL reduce using rule 207 (or_test_star -> OR and_test .)
    EQUAL           reduce using rule 207 (or_test_star -> OR and_test .)
    NEWLINE         reduce using rule 207 (or_test_star -> OR and_test .)
    SEMI            reduce using rule 207 (or_test_star -> OR and_test .)
    FOR             reduce using rule 207 (or_test_star -> OR and_test .)
    RPAR            reduce using rule 207 (or_test_star -> OR and_test .)
    COLON           reduce using rule 207 (or_test_star -> OR and_test .)
    AS              reduce using rule 207 (or_test_star -> OR and_test .)
    BACKQUOTE       reduce using rule 207 (or_test_star -> OR and_test .)
    RSQB            reduce using rule 207 (or_test_star -> OR and_test .)
    ELSE            reduce using rule 207 (or_test_star -> OR and_test .)
    RBRACE          reduce using rule 207 (or_test_star -> OR and_test .)


state 263

    (279) atom -> LBRACE dictmaker RBRACE .

    DOUBLESTAR      reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LPAR            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LSQB            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    DOT             reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    STAR            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    SLASH           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    PERCENT         reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    DOUBLESLASH     reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    PLUS            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    MINUS           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LEFTSHIFT       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    RIGHTSHIFT      reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    AMPER           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    CIRCUMFLEX      reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    VBAR            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LESS            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    GREATER         reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    EQEQUAL         reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    GREATEREQUAL    reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LESSEQUAL       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    NOTEQUAL        reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    IN              reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    IS              reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    NOT             reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    AND             reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    OR              reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    IF              reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    COMMA           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    PLUSEQUAL       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    MINEQUAL        reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    STAREQUAL       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    SLASHEQUAL      reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    PERCENTEQUAL    reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    AMPEREQUAL      reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    VBAREQUAL       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    CIRCUMFLEXEQUAL reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    LEFTSHIFTEQUAL  reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    RIGHTSHIFTEQUAL reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    DOUBLESTAREQUAL reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    DOUBLESLASHEQUAL reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    EQUAL           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    NEWLINE         reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    SEMI            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    FOR             reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    RPAR            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    COLON           reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    AS              reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    BACKQUOTE       reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    RSQB            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    ELSE            reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)
    RBRACE          reduce using rule 279 (atom -> LBRACE dictmaker RBRACE .)


state 264

    (336) dictmaker -> test COLON . test
    (337) dictmaker -> test COLON . test COMMA
    (338) dictmaker -> test COLON . test dictmaker_star
    (339) dictmaker -> test COLON . test dictmaker_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 365
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 265

    (347) arglist -> STAR . test
    (348) arglist -> STAR . test COMMA DOUBLESTAR test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 366
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 266

    (302) trailer -> LPAR RPAR .

    DOUBLESTAR      reduce using rule 302 (trailer -> LPAR RPAR .)
    LPAR            reduce using rule 302 (trailer -> LPAR RPAR .)
    LSQB            reduce using rule 302 (trailer -> LPAR RPAR .)
    DOT             reduce using rule 302 (trailer -> LPAR RPAR .)
    STAR            reduce using rule 302 (trailer -> LPAR RPAR .)
    SLASH           reduce using rule 302 (trailer -> LPAR RPAR .)
    PERCENT         reduce using rule 302 (trailer -> LPAR RPAR .)
    DOUBLESLASH     reduce using rule 302 (trailer -> LPAR RPAR .)
    PLUS            reduce using rule 302 (trailer -> LPAR RPAR .)
    MINUS           reduce using rule 302 (trailer -> LPAR RPAR .)
    LEFTSHIFT       reduce using rule 302 (trailer -> LPAR RPAR .)
    RIGHTSHIFT      reduce using rule 302 (trailer -> LPAR RPAR .)
    AMPER           reduce using rule 302 (trailer -> LPAR RPAR .)
    CIRCUMFLEX      reduce using rule 302 (trailer -> LPAR RPAR .)
    VBAR            reduce using rule 302 (trailer -> LPAR RPAR .)
    LESS            reduce using rule 302 (trailer -> LPAR RPAR .)
    GREATER         reduce using rule 302 (trailer -> LPAR RPAR .)
    EQEQUAL         reduce using rule 302 (trailer -> LPAR RPAR .)
    GREATEREQUAL    reduce using rule 302 (trailer -> LPAR RPAR .)
    LESSEQUAL       reduce using rule 302 (trailer -> LPAR RPAR .)
    NOTEQUAL        reduce using rule 302 (trailer -> LPAR RPAR .)
    IN              reduce using rule 302 (trailer -> LPAR RPAR .)
    IS              reduce using rule 302 (trailer -> LPAR RPAR .)
    NOT             reduce using rule 302 (trailer -> LPAR RPAR .)
    AND             reduce using rule 302 (trailer -> LPAR RPAR .)
    OR              reduce using rule 302 (trailer -> LPAR RPAR .)
    IF              reduce using rule 302 (trailer -> LPAR RPAR .)
    COMMA           reduce using rule 302 (trailer -> LPAR RPAR .)
    PLUSEQUAL       reduce using rule 302 (trailer -> LPAR RPAR .)
    MINEQUAL        reduce using rule 302 (trailer -> LPAR RPAR .)
    STAREQUAL       reduce using rule 302 (trailer -> LPAR RPAR .)
    SLASHEQUAL      reduce using rule 302 (trailer -> LPAR RPAR .)
    PERCENTEQUAL    reduce using rule 302 (trailer -> LPAR RPAR .)
    AMPEREQUAL      reduce using rule 302 (trailer -> LPAR RPAR .)
    VBAREQUAL       reduce using rule 302 (trailer -> LPAR RPAR .)
    CIRCUMFLEXEQUAL reduce using rule 302 (trailer -> LPAR RPAR .)
    LEFTSHIFTEQUAL  reduce using rule 302 (trailer -> LPAR RPAR .)
    RIGHTSHIFTEQUAL reduce using rule 302 (trailer -> LPAR RPAR .)
    DOUBLESTAREQUAL reduce using rule 302 (trailer -> LPAR RPAR .)
    DOUBLESLASHEQUAL reduce using rule 302 (trailer -> LPAR RPAR .)
    EQUAL           reduce using rule 302 (trailer -> LPAR RPAR .)
    NEWLINE         reduce using rule 302 (trailer -> LPAR RPAR .)
    SEMI            reduce using rule 302 (trailer -> LPAR RPAR .)
    FOR             reduce using rule 302 (trailer -> LPAR RPAR .)
    RPAR            reduce using rule 302 (trailer -> LPAR RPAR .)
    COLON           reduce using rule 302 (trailer -> LPAR RPAR .)
    AS              reduce using rule 302 (trailer -> LPAR RPAR .)
    BACKQUOTE       reduce using rule 302 (trailer -> LPAR RPAR .)
    RSQB            reduce using rule 302 (trailer -> LPAR RPAR .)
    ELSE            reduce using rule 302 (trailer -> LPAR RPAR .)
    RBRACE          reduce using rule 302 (trailer -> LPAR RPAR .)


state 267

    (349) arglist -> DOUBLESTAR . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 367
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 268

    (303) trailer -> LPAR arglist . RPAR

    RPAR            shift and go to state 368


state 269

    (357) argument -> test .
    (358) argument -> test . gen_for
    (359) argument -> test . EQUAL test
    (368) gen_for -> . FOR exprlist IN or_test
    (369) gen_for -> . FOR exprlist IN or_test gen_iter

    COMMA           reduce using rule 357 (argument -> test .)
    RPAR            reduce using rule 357 (argument -> test .)
    EQUAL           shift and go to state 370
    FOR             shift and go to state 203

    gen_for                        shift and go to state 369

state 270

    (350) arglist -> arglist_star . argument
    (351) arglist -> arglist_star . argument COMMA
    (352) arglist -> arglist_star . STAR test
    (353) arglist -> arglist_star . STAR test COMMA DOUBLESTAR test
    (354) arglist -> arglist_star . DOUBLESTAR test
    (356) arglist_star -> arglist_star . argument COMMA
    (357) argument -> . test
    (358) argument -> . test gen_for
    (359) argument -> . test EQUAL test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    STAR            shift and go to state 371
    DOUBLESTAR      shift and go to state 373
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    argument                       shift and go to state 372
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 269
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 271

    (345) arglist -> argument .
    (346) arglist -> argument . COMMA
    (355) arglist_star -> argument . COMMA

    RPAR            reduce using rule 345 (arglist -> argument .)
    COMMA           shift and go to state 374


state 272

    (270) power -> atom power_star DOUBLESTAR . factor
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    power                          shift and go to state 34
    atom                           shift and go to state 48
    factor                         shift and go to state 375
    atom_plus                      shift and go to state 57

state 273

    (272) power_star -> power_star trailer .

    DOUBLESTAR      reduce using rule 272 (power_star -> power_star trailer .)
    LPAR            reduce using rule 272 (power_star -> power_star trailer .)
    LSQB            reduce using rule 272 (power_star -> power_star trailer .)
    DOT             reduce using rule 272 (power_star -> power_star trailer .)
    STAR            reduce using rule 272 (power_star -> power_star trailer .)
    SLASH           reduce using rule 272 (power_star -> power_star trailer .)
    PERCENT         reduce using rule 272 (power_star -> power_star trailer .)
    DOUBLESLASH     reduce using rule 272 (power_star -> power_star trailer .)
    PLUS            reduce using rule 272 (power_star -> power_star trailer .)
    MINUS           reduce using rule 272 (power_star -> power_star trailer .)
    LEFTSHIFT       reduce using rule 272 (power_star -> power_star trailer .)
    RIGHTSHIFT      reduce using rule 272 (power_star -> power_star trailer .)
    AMPER           reduce using rule 272 (power_star -> power_star trailer .)
    CIRCUMFLEX      reduce using rule 272 (power_star -> power_star trailer .)
    VBAR            reduce using rule 272 (power_star -> power_star trailer .)
    LESS            reduce using rule 272 (power_star -> power_star trailer .)
    GREATER         reduce using rule 272 (power_star -> power_star trailer .)
    EQEQUAL         reduce using rule 272 (power_star -> power_star trailer .)
    GREATEREQUAL    reduce using rule 272 (power_star -> power_star trailer .)
    LESSEQUAL       reduce using rule 272 (power_star -> power_star trailer .)
    NOTEQUAL        reduce using rule 272 (power_star -> power_star trailer .)
    IN              reduce using rule 272 (power_star -> power_star trailer .)
    IS              reduce using rule 272 (power_star -> power_star trailer .)
    NOT             reduce using rule 272 (power_star -> power_star trailer .)
    AND             reduce using rule 272 (power_star -> power_star trailer .)
    OR              reduce using rule 272 (power_star -> power_star trailer .)
    IF              reduce using rule 272 (power_star -> power_star trailer .)
    COMMA           reduce using rule 272 (power_star -> power_star trailer .)
    PLUSEQUAL       reduce using rule 272 (power_star -> power_star trailer .)
    MINEQUAL        reduce using rule 272 (power_star -> power_star trailer .)
    STAREQUAL       reduce using rule 272 (power_star -> power_star trailer .)
    SLASHEQUAL      reduce using rule 272 (power_star -> power_star trailer .)
    PERCENTEQUAL    reduce using rule 272 (power_star -> power_star trailer .)
    AMPEREQUAL      reduce using rule 272 (power_star -> power_star trailer .)
    VBAREQUAL       reduce using rule 272 (power_star -> power_star trailer .)
    CIRCUMFLEXEQUAL reduce using rule 272 (power_star -> power_star trailer .)
    LEFTSHIFTEQUAL  reduce using rule 272 (power_star -> power_star trailer .)
    RIGHTSHIFTEQUAL reduce using rule 272 (power_star -> power_star trailer .)
    DOUBLESTAREQUAL reduce using rule 272 (power_star -> power_star trailer .)
    DOUBLESLASHEQUAL reduce using rule 272 (power_star -> power_star trailer .)
    EQUAL           reduce using rule 272 (power_star -> power_star trailer .)
    NEWLINE         reduce using rule 272 (power_star -> power_star trailer .)
    SEMI            reduce using rule 272 (power_star -> power_star trailer .)
    FOR             reduce using rule 272 (power_star -> power_star trailer .)
    RPAR            reduce using rule 272 (power_star -> power_star trailer .)
    COLON           reduce using rule 272 (power_star -> power_star trailer .)
    AS              reduce using rule 272 (power_star -> power_star trailer .)
    BACKQUOTE       reduce using rule 272 (power_star -> power_star trailer .)
    RSQB            reduce using rule 272 (power_star -> power_star trailer .)
    ELSE            reduce using rule 272 (power_star -> power_star trailer .)
    RBRACE          reduce using rule 272 (power_star -> power_star trailer .)


state 274

    (305) trailer -> DOT NAME .

    DOUBLESTAR      reduce using rule 305 (trailer -> DOT NAME .)
    LPAR            reduce using rule 305 (trailer -> DOT NAME .)
    LSQB            reduce using rule 305 (trailer -> DOT NAME .)
    DOT             reduce using rule 305 (trailer -> DOT NAME .)
    STAR            reduce using rule 305 (trailer -> DOT NAME .)
    SLASH           reduce using rule 305 (trailer -> DOT NAME .)
    PERCENT         reduce using rule 305 (trailer -> DOT NAME .)
    DOUBLESLASH     reduce using rule 305 (trailer -> DOT NAME .)
    PLUS            reduce using rule 305 (trailer -> DOT NAME .)
    MINUS           reduce using rule 305 (trailer -> DOT NAME .)
    LEFTSHIFT       reduce using rule 305 (trailer -> DOT NAME .)
    RIGHTSHIFT      reduce using rule 305 (trailer -> DOT NAME .)
    AMPER           reduce using rule 305 (trailer -> DOT NAME .)
    CIRCUMFLEX      reduce using rule 305 (trailer -> DOT NAME .)
    VBAR            reduce using rule 305 (trailer -> DOT NAME .)
    LESS            reduce using rule 305 (trailer -> DOT NAME .)
    GREATER         reduce using rule 305 (trailer -> DOT NAME .)
    EQEQUAL         reduce using rule 305 (trailer -> DOT NAME .)
    GREATEREQUAL    reduce using rule 305 (trailer -> DOT NAME .)
    LESSEQUAL       reduce using rule 305 (trailer -> DOT NAME .)
    NOTEQUAL        reduce using rule 305 (trailer -> DOT NAME .)
    IN              reduce using rule 305 (trailer -> DOT NAME .)
    IS              reduce using rule 305 (trailer -> DOT NAME .)
    NOT             reduce using rule 305 (trailer -> DOT NAME .)
    AND             reduce using rule 305 (trailer -> DOT NAME .)
    OR              reduce using rule 305 (trailer -> DOT NAME .)
    IF              reduce using rule 305 (trailer -> DOT NAME .)
    COMMA           reduce using rule 305 (trailer -> DOT NAME .)
    PLUSEQUAL       reduce using rule 305 (trailer -> DOT NAME .)
    MINEQUAL        reduce using rule 305 (trailer -> DOT NAME .)
    STAREQUAL       reduce using rule 305 (trailer -> DOT NAME .)
    SLASHEQUAL      reduce using rule 305 (trailer -> DOT NAME .)
    PERCENTEQUAL    reduce using rule 305 (trailer -> DOT NAME .)
    AMPEREQUAL      reduce using rule 305 (trailer -> DOT NAME .)
    VBAREQUAL       reduce using rule 305 (trailer -> DOT NAME .)
    CIRCUMFLEXEQUAL reduce using rule 305 (trailer -> DOT NAME .)
    LEFTSHIFTEQUAL  reduce using rule 305 (trailer -> DOT NAME .)
    RIGHTSHIFTEQUAL reduce using rule 305 (trailer -> DOT NAME .)
    DOUBLESTAREQUAL reduce using rule 305 (trailer -> DOT NAME .)
    DOUBLESLASHEQUAL reduce using rule 305 (trailer -> DOT NAME .)
    EQUAL           reduce using rule 305 (trailer -> DOT NAME .)
    NEWLINE         reduce using rule 305 (trailer -> DOT NAME .)
    SEMI            reduce using rule 305 (trailer -> DOT NAME .)
    FOR             reduce using rule 305 (trailer -> DOT NAME .)
    RPAR            reduce using rule 305 (trailer -> DOT NAME .)
    COLON           reduce using rule 305 (trailer -> DOT NAME .)
    AS              reduce using rule 305 (trailer -> DOT NAME .)
    BACKQUOTE       reduce using rule 305 (trailer -> DOT NAME .)
    RSQB            reduce using rule 305 (trailer -> DOT NAME .)
    ELSE            reduce using rule 305 (trailer -> DOT NAME .)
    RBRACE          reduce using rule 305 (trailer -> DOT NAME .)


state 275

    (268) power -> atom DOUBLESTAR factor .

    STAR            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    SLASH           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    PERCENT         reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    DOUBLESLASH     reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    PLUS            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    MINUS           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    LEFTSHIFT       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    RIGHTSHIFT      reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    AMPER           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    CIRCUMFLEX      reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    VBAR            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    LESS            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    GREATER         reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    EQEQUAL         reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    GREATEREQUAL    reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    LESSEQUAL       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    NOTEQUAL        reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    IN              reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    IS              reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    NOT             reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    AND             reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    OR              reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    IF              reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    EQUAL           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    FOR             reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    COMMA           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    RPAR            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    NEWLINE         reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    SEMI            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    PLUSEQUAL       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    MINEQUAL        reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    STAREQUAL       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    SLASHEQUAL      reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    PERCENTEQUAL    reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    AMPEREQUAL      reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    VBAREQUAL       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    CIRCUMFLEXEQUAL reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    LEFTSHIFTEQUAL  reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    RIGHTSHIFTEQUAL reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    DOUBLESTAREQUAL reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    DOUBLESLASHEQUAL reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    COLON           reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    AS              reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    BACKQUOTE       reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    RSQB            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    ELSE            reduce using rule 268 (power -> atom DOUBLESTAR factor .)
    RBRACE          reduce using rule 268 (power -> atom DOUBLESTAR factor .)


state 276

    (314) subscript -> COLON .
    (315) subscript -> COLON . sliceop
    (316) subscript -> COLON . test
    (317) subscript -> COLON . test sliceop
    (322) sliceop -> . COLON
    (323) sliceop -> . COLON test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    COMMA           reduce using rule 314 (subscript -> COLON .)
    RSQB            reduce using rule 314 (subscript -> COLON .)
    COLON           shift and go to state 376
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 377
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    sliceop                        shift and go to state 378
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 277

    (312) subscript -> DOT . DOT DOT

    DOT             shift and go to state 379


state 278

    (313) subscript -> test .
    (318) subscript -> test . COLON
    (319) subscript -> test . COLON sliceop
    (320) subscript -> test . COLON test
    (321) subscript -> test . COLON test sliceop

    COMMA           reduce using rule 313 (subscript -> test .)
    RSQB            reduce using rule 313 (subscript -> test .)
    COLON           shift and go to state 380


state 279

    (306) subscriptlist -> subscript .
    (307) subscriptlist -> subscript . COMMA
    (308) subscriptlist -> subscript . subscriptlist_star
    (309) subscriptlist -> subscript . subscriptlist_star COMMA
    (310) subscriptlist_star -> . COMMA subscript
    (311) subscriptlist_star -> . subscriptlist_star COMMA subscript

    RSQB            reduce using rule 306 (subscriptlist -> subscript .)
    COMMA           shift and go to state 382

    subscriptlist_star             shift and go to state 381

state 280

    (304) trailer -> LSQB subscriptlist . RSQB

    RSQB            shift and go to state 383


state 281

    (46) fplist -> fpdef .
    (47) fplist -> fpdef . COMMA
    (48) fplist -> fpdef . fplist_star
    (49) fplist -> fpdef . fplist_star COMMA
    (50) fplist_star -> . COMMA fpdef
    (51) fplist_star -> . fplist_star COMMA fpdef

    RPAR            reduce using rule 46 (fplist -> fpdef .)
    COMMA           shift and go to state 384

    fplist_star                    shift and go to state 385

state 282

    (45) fpdef -> LPAR fplist . RPAR

    RPAR            shift and go to state 386


state 283

    (37) varargslist -> STAR NAME .
    (38) varargslist -> STAR NAME . COMMA DOUBLESTAR NAME

    COLON           reduce using rule 37 (varargslist -> STAR NAME .)
    RPAR            reduce using rule 37 (varargslist -> STAR NAME .)
    COMMA           shift and go to state 387


state 284

    (22) varargslist -> fpdef varargslist_star . COMMA STAR NAME
    (23) varargslist -> fpdef varargslist_star . COMMA STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> fpdef varargslist_star . COMMA DOUBLESTAR NAME
    (25) varargslist -> fpdef varargslist_star .
    (26) varargslist -> fpdef varargslist_star . COMMA
    (42) varargslist_star -> varargslist_star . COMMA fpdef
    (43) varargslist_star -> varargslist_star . COMMA fpdef EQUAL test

    COMMA           shift and go to state 388
    COLON           reduce using rule 25 (varargslist -> fpdef varargslist_star .)
    RPAR            reduce using rule 25 (varargslist -> fpdef varargslist_star .)


state 285

    (27) varargslist -> fpdef EQUAL . test COMMA STAR NAME
    (28) varargslist -> fpdef EQUAL . test COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> fpdef EQUAL . test COMMA DOUBLESTAR NAME
    (30) varargslist -> fpdef EQUAL . test
    (31) varargslist -> fpdef EQUAL . test COMMA
    (32) varargslist -> fpdef EQUAL . test varargslist_star COMMA STAR NAME
    (33) varargslist -> fpdef EQUAL . test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> fpdef EQUAL . test varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> fpdef EQUAL . test varargslist_star
    (36) varargslist -> fpdef EQUAL . test varargslist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 389
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 286

    (17) varargslist -> fpdef COMMA . STAR NAME
    (18) varargslist -> fpdef COMMA . STAR NAME COMMA DOUBLESTAR NAME
    (19) varargslist -> fpdef COMMA . DOUBLESTAR NAME
    (21) varargslist -> fpdef COMMA .
    (40) varargslist_star -> COMMA . fpdef
    (41) varargslist_star -> COMMA . fpdef EQUAL test
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    STAR            shift and go to state 390
    DOUBLESTAR      shift and go to state 392
    COLON           reduce using rule 21 (varargslist -> fpdef COMMA .)
    RPAR            reduce using rule 21 (varargslist -> fpdef COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 391

state 287

    (301) lambdef -> LAMBDA varargslist COLON . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 393
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 288

    (39) varargslist -> DOUBLESTAR NAME .

    COLON           reduce using rule 39 (varargslist -> DOUBLESTAR NAME .)
    RPAR            reduce using rule 39 (varargslist -> DOUBLESTAR NAME .)


state 289

    (300) lambdef -> LAMBDA COLON test .

    COMMA           reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    RSQB            reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    COLON           reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    PLUSEQUAL       reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    MINEQUAL        reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    STAREQUAL       reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    SLASHEQUAL      reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    PERCENTEQUAL    reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    AMPEREQUAL      reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    VBAREQUAL       reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    CIRCUMFLEXEQUAL reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    LEFTSHIFTEQUAL  reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    RIGHTSHIFTEQUAL reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    DOUBLESTAREQUAL reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    DOUBLESLASHEQUAL reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    EQUAL           reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    NEWLINE         reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    SEMI            reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    FOR             reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    RPAR            reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    RBRACE          reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    AS              reduce using rule 300 (lambdef -> LAMBDA COLON test .)
    BACKQUOTE       reduce using rule 300 (lambdef -> LAMBDA COLON test .)


state 290

    (115) raise_stmt -> RAISE test COMMA . test
    (116) raise_stmt -> RAISE test COMMA . test COMMA test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 394
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 291

    (151) global_stmt_star -> COMMA . NAME

    NAME            shift and go to state 395


state 292

    (150) global_stmt -> GLOBAL NAME global_stmt_star .
    (152) global_stmt_star -> global_stmt_star . COMMA NAME

    NEWLINE         reduce using rule 150 (global_stmt -> GLOBAL NAME global_stmt_star .)
    SEMI            reduce using rule 150 (global_stmt -> GLOBAL NAME global_stmt_star .)
    COMMA           shift and go to state 396


state 293

    (171) while_stmt -> WHILE test COLON . suite
    (172) while_stmt -> WHILE test COLON . suite ELSE COLON suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 397
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 294

    (232) expr_star -> expr_star VBAR . xor_expr
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    atom_plus                      shift and go to state 57
    power                          shift and go to state 34
    arith_expr                     shift and go to state 71
    atom                           shift and go to state 48
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    xor_expr                       shift and go to state 398
    and_expr                       shift and go to state 13

state 295

    (231) expr_star -> VBAR xor_expr .

    VBAR            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    LESS            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    GREATER         reduce using rule 231 (expr_star -> VBAR xor_expr .)
    EQEQUAL         reduce using rule 231 (expr_star -> VBAR xor_expr .)
    GREATEREQUAL    reduce using rule 231 (expr_star -> VBAR xor_expr .)
    LESSEQUAL       reduce using rule 231 (expr_star -> VBAR xor_expr .)
    NOTEQUAL        reduce using rule 231 (expr_star -> VBAR xor_expr .)
    IN              reduce using rule 231 (expr_star -> VBAR xor_expr .)
    IS              reduce using rule 231 (expr_star -> VBAR xor_expr .)
    NOT             reduce using rule 231 (expr_star -> VBAR xor_expr .)
    AND             reduce using rule 231 (expr_star -> VBAR xor_expr .)
    OR              reduce using rule 231 (expr_star -> VBAR xor_expr .)
    IF              reduce using rule 231 (expr_star -> VBAR xor_expr .)
    COMMA           reduce using rule 231 (expr_star -> VBAR xor_expr .)
    PLUSEQUAL       reduce using rule 231 (expr_star -> VBAR xor_expr .)
    MINEQUAL        reduce using rule 231 (expr_star -> VBAR xor_expr .)
    STAREQUAL       reduce using rule 231 (expr_star -> VBAR xor_expr .)
    SLASHEQUAL      reduce using rule 231 (expr_star -> VBAR xor_expr .)
    PERCENTEQUAL    reduce using rule 231 (expr_star -> VBAR xor_expr .)
    AMPEREQUAL      reduce using rule 231 (expr_star -> VBAR xor_expr .)
    VBAREQUAL       reduce using rule 231 (expr_star -> VBAR xor_expr .)
    CIRCUMFLEXEQUAL reduce using rule 231 (expr_star -> VBAR xor_expr .)
    LEFTSHIFTEQUAL  reduce using rule 231 (expr_star -> VBAR xor_expr .)
    RIGHTSHIFTEQUAL reduce using rule 231 (expr_star -> VBAR xor_expr .)
    DOUBLESTAREQUAL reduce using rule 231 (expr_star -> VBAR xor_expr .)
    DOUBLESLASHEQUAL reduce using rule 231 (expr_star -> VBAR xor_expr .)
    EQUAL           reduce using rule 231 (expr_star -> VBAR xor_expr .)
    NEWLINE         reduce using rule 231 (expr_star -> VBAR xor_expr .)
    SEMI            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    FOR             reduce using rule 231 (expr_star -> VBAR xor_expr .)
    RPAR            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    COLON           reduce using rule 231 (expr_star -> VBAR xor_expr .)
    AS              reduce using rule 231 (expr_star -> VBAR xor_expr .)
    BACKQUOTE       reduce using rule 231 (expr_star -> VBAR xor_expr .)
    RSQB            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    ELSE            reduce using rule 231 (expr_star -> VBAR xor_expr .)
    RBRACE          reduce using rule 231 (expr_star -> VBAR xor_expr .)


state 296

    (277) atom -> LSQB listmaker RSQB .

    DOUBLESTAR      reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LPAR            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LSQB            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    DOT             reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    STAR            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    SLASH           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    PERCENT         reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    DOUBLESLASH     reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    PLUS            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    MINUS           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LEFTSHIFT       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    RIGHTSHIFT      reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    AMPER           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    CIRCUMFLEX      reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    VBAR            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LESS            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    GREATER         reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    EQEQUAL         reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    GREATEREQUAL    reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LESSEQUAL       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    NOTEQUAL        reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    IN              reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    IS              reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    NOT             reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    AND             reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    OR              reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    IF              reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    COMMA           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    PLUSEQUAL       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    MINEQUAL        reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    STAREQUAL       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    SLASHEQUAL      reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    PERCENTEQUAL    reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    AMPEREQUAL      reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    VBAREQUAL       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    CIRCUMFLEXEQUAL reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    LEFTSHIFTEQUAL  reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    RIGHTSHIFTEQUAL reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    DOUBLESTAREQUAL reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    DOUBLESLASHEQUAL reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    EQUAL           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    NEWLINE         reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    SEMI            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    FOR             reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    RPAR            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    COLON           reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    AS              reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    BACKQUOTE       reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    RSQB            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    ELSE            reduce using rule 277 (atom -> LSQB listmaker RSQB .)
    RBRACE          reduce using rule 277 (atom -> LSQB listmaker RSQB .)


state 297

    (362) list_for -> FOR . exprlist IN testlist_safe
    (363) list_for -> FOR . exprlist IN testlist_safe list_iter
    (324) exprlist -> . expr
    (325) exprlist -> . expr COMMA
    (326) exprlist -> . expr exprlist_star
    (327) exprlist -> . expr exprlist_star COMMA
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 399
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 142

state 298

    (286) listmaker -> test list_for .

    RSQB            reduce using rule 286 (listmaker -> test list_for .)


state 299

    (288) listmaker -> test COMMA .
    (291) listmaker_star -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RSQB            reduce using rule 288 (listmaker -> test COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 400
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 300

    (289) listmaker -> test listmaker_star .
    (290) listmaker -> test listmaker_star . COMMA
    (292) listmaker_star -> listmaker_star . COMMA test

    RSQB            reduce using rule 289 (listmaker -> test listmaker_star .)
    COMMA           shift and go to state 401


state 301

    (69) expr_stmt -> NAME NAME EQUAL . yield_expr
    (70) expr_stmt -> NAME NAME EQUAL . testlist
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    yield_expr                     shift and go to state 402
    power                          shift and go to state 34
    testlist                       shift and go to state 403
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 302

    (157) assert_stmt -> ASSERT test COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 404
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 303

    (243) shift_expr_star -> LEFTSHIFT arith_expr .

    LEFTSHIFT       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    RIGHTSHIFT      reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    AMPER           reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    CIRCUMFLEX      reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    VBAR            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    LESS            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    GREATER         reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    EQEQUAL         reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    GREATEREQUAL    reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    LESSEQUAL       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    NOTEQUAL        reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    IN              reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    IS              reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    NOT             reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    AND             reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    OR              reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    IF              reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    COMMA           reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    PLUSEQUAL       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    MINEQUAL        reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    STAREQUAL       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    SLASHEQUAL      reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    PERCENTEQUAL    reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    AMPEREQUAL      reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    VBAREQUAL       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    CIRCUMFLEXEQUAL reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    LEFTSHIFTEQUAL  reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    RIGHTSHIFTEQUAL reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    DOUBLESTAREQUAL reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    DOUBLESLASHEQUAL reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    EQUAL           reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    NEWLINE         reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    SEMI            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    FOR             reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    RPAR            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    COLON           reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    AS              reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    BACKQUOTE       reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    RSQB            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    ELSE            reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)
    RBRACE          reduce using rule 243 (shift_expr_star -> LEFTSHIFT arith_expr .)


state 304

    (244) shift_expr_star -> RIGHTSHIFT arith_expr .

    LEFTSHIFT       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    RIGHTSHIFT      reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    AMPER           reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    CIRCUMFLEX      reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    VBAR            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    LESS            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    GREATER         reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    EQEQUAL         reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    GREATEREQUAL    reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    LESSEQUAL       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    NOTEQUAL        reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    IN              reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    IS              reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    NOT             reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    AND             reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    OR              reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    IF              reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    COMMA           reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    PLUSEQUAL       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    MINEQUAL        reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    STAREQUAL       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    SLASHEQUAL      reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    PERCENTEQUAL    reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    AMPEREQUAL      reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    VBAREQUAL       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    CIRCUMFLEXEQUAL reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    LEFTSHIFTEQUAL  reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    RIGHTSHIFTEQUAL reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    DOUBLESTAREQUAL reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    DOUBLESLASHEQUAL reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    EQUAL           reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    NEWLINE         reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    SEMI            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    FOR             reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    RPAR            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    COLON           reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    AS              reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    BACKQUOTE       reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    RSQB            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    ELSE            reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)
    RBRACE          reduce using rule 244 (shift_expr_star -> RIGHTSHIFT arith_expr .)


state 305

    (245) shift_expr_star -> shift_expr_star LEFTSHIFT . arith_expr
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 405
    atom                           shift and go to state 48
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 306

    (246) shift_expr_star -> shift_expr_star RIGHTSHIFT . arith_expr
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    term                           shift and go to state 23
    power                          shift and go to state 34
    arith_expr                     shift and go to state 406
    atom                           shift and go to state 48
    factor                         shift and go to state 11
    atom_plus                      shift and go to state 57

state 307

    (211) and_test_star -> AND not_test .

    AND             reduce using rule 211 (and_test_star -> AND not_test .)
    OR              reduce using rule 211 (and_test_star -> AND not_test .)
    IF              reduce using rule 211 (and_test_star -> AND not_test .)
    COMMA           reduce using rule 211 (and_test_star -> AND not_test .)
    PLUSEQUAL       reduce using rule 211 (and_test_star -> AND not_test .)
    MINEQUAL        reduce using rule 211 (and_test_star -> AND not_test .)
    STAREQUAL       reduce using rule 211 (and_test_star -> AND not_test .)
    SLASHEQUAL      reduce using rule 211 (and_test_star -> AND not_test .)
    PERCENTEQUAL    reduce using rule 211 (and_test_star -> AND not_test .)
    AMPEREQUAL      reduce using rule 211 (and_test_star -> AND not_test .)
    VBAREQUAL       reduce using rule 211 (and_test_star -> AND not_test .)
    CIRCUMFLEXEQUAL reduce using rule 211 (and_test_star -> AND not_test .)
    LEFTSHIFTEQUAL  reduce using rule 211 (and_test_star -> AND not_test .)
    RIGHTSHIFTEQUAL reduce using rule 211 (and_test_star -> AND not_test .)
    DOUBLESTAREQUAL reduce using rule 211 (and_test_star -> AND not_test .)
    DOUBLESLASHEQUAL reduce using rule 211 (and_test_star -> AND not_test .)
    EQUAL           reduce using rule 211 (and_test_star -> AND not_test .)
    NEWLINE         reduce using rule 211 (and_test_star -> AND not_test .)
    SEMI            reduce using rule 211 (and_test_star -> AND not_test .)
    FOR             reduce using rule 211 (and_test_star -> AND not_test .)
    RPAR            reduce using rule 211 (and_test_star -> AND not_test .)
    COLON           reduce using rule 211 (and_test_star -> AND not_test .)
    AS              reduce using rule 211 (and_test_star -> AND not_test .)
    BACKQUOTE       reduce using rule 211 (and_test_star -> AND not_test .)
    RSQB            reduce using rule 211 (and_test_star -> AND not_test .)
    ELSE            reduce using rule 211 (and_test_star -> AND not_test .)
    RBRACE          reduce using rule 211 (and_test_star -> AND not_test .)


state 308

    (212) and_test_star -> and_test_star AND . not_test
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 407
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27

state 309

    (333) testlist -> test testlist_star COMMA .
    (335) testlist_star -> testlist_star COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    PLUSEQUAL       reduce using rule 333 (testlist -> test testlist_star COMMA .)
    MINEQUAL        reduce using rule 333 (testlist -> test testlist_star COMMA .)
    STAREQUAL       reduce using rule 333 (testlist -> test testlist_star COMMA .)
    SLASHEQUAL      reduce using rule 333 (testlist -> test testlist_star COMMA .)
    PERCENTEQUAL    reduce using rule 333 (testlist -> test testlist_star COMMA .)
    AMPEREQUAL      reduce using rule 333 (testlist -> test testlist_star COMMA .)
    VBAREQUAL       reduce using rule 333 (testlist -> test testlist_star COMMA .)
    CIRCUMFLEXEQUAL reduce using rule 333 (testlist -> test testlist_star COMMA .)
    LEFTSHIFTEQUAL  reduce using rule 333 (testlist -> test testlist_star COMMA .)
    RIGHTSHIFTEQUAL reduce using rule 333 (testlist -> test testlist_star COMMA .)
    DOUBLESTAREQUAL reduce using rule 333 (testlist -> test testlist_star COMMA .)
    DOUBLESLASHEQUAL reduce using rule 333 (testlist -> test testlist_star COMMA .)
    EQUAL           reduce using rule 333 (testlist -> test testlist_star COMMA .)
    NEWLINE         reduce using rule 333 (testlist -> test testlist_star COMMA .)
    SEMI            reduce using rule 333 (testlist -> test testlist_star COMMA .)
    COLON           reduce using rule 333 (testlist -> test testlist_star COMMA .)
    RPAR            reduce using rule 333 (testlist -> test testlist_star COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 408
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 310

    (334) testlist_star -> COMMA test .

    COMMA           reduce using rule 334 (testlist_star -> COMMA test .)
    PLUSEQUAL       reduce using rule 334 (testlist_star -> COMMA test .)
    MINEQUAL        reduce using rule 334 (testlist_star -> COMMA test .)
    STAREQUAL       reduce using rule 334 (testlist_star -> COMMA test .)
    SLASHEQUAL      reduce using rule 334 (testlist_star -> COMMA test .)
    PERCENTEQUAL    reduce using rule 334 (testlist_star -> COMMA test .)
    AMPEREQUAL      reduce using rule 334 (testlist_star -> COMMA test .)
    VBAREQUAL       reduce using rule 334 (testlist_star -> COMMA test .)
    CIRCUMFLEXEQUAL reduce using rule 334 (testlist_star -> COMMA test .)
    LEFTSHIFTEQUAL  reduce using rule 334 (testlist_star -> COMMA test .)
    RIGHTSHIFTEQUAL reduce using rule 334 (testlist_star -> COMMA test .)
    DOUBLESTAREQUAL reduce using rule 334 (testlist_star -> COMMA test .)
    DOUBLESLASHEQUAL reduce using rule 334 (testlist_star -> COMMA test .)
    EQUAL           reduce using rule 334 (testlist_star -> COMMA test .)
    NEWLINE         reduce using rule 334 (testlist_star -> COMMA test .)
    SEMI            reduce using rule 334 (testlist_star -> COMMA test .)
    RPAR            reduce using rule 334 (testlist_star -> COMMA test .)
    COLON           reduce using rule 334 (testlist_star -> COMMA test .)


state 311

    (343) classdef -> CLASS NAME LPAR . RPAR COLON suite
    (344) classdef -> CLASS NAME LPAR . testlist RPAR COLON suite
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            shift and go to state 409
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 74
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    testlist                       shift and go to state 410
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 312

    (342) classdef -> CLASS NAME COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 411
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 313

    (8) decorator -> AT dotted_name LPAR . RPAR NEWLINE
    (9) decorator -> AT dotted_name LPAR . arglist RPAR NEWLINE
    (345) arglist -> . argument
    (346) arglist -> . argument COMMA
    (347) arglist -> . STAR test
    (348) arglist -> . STAR test COMMA DOUBLESTAR test
    (349) arglist -> . DOUBLESTAR test
    (350) arglist -> . arglist_star argument
    (351) arglist -> . arglist_star argument COMMA
    (352) arglist -> . arglist_star STAR test
    (353) arglist -> . arglist_star STAR test COMMA DOUBLESTAR test
    (354) arglist -> . arglist_star DOUBLESTAR test
    (357) argument -> . test
    (358) argument -> . test gen_for
    (359) argument -> . test EQUAL test
    (355) arglist_star -> . argument COMMA
    (356) arglist_star -> . arglist_star argument COMMA
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            shift and go to state 412
    STAR            shift and go to state 265
    DOUBLESTAR      shift and go to state 267
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    argument                       shift and go to state 271
    not_test                       shift and go to state 72
    arglist                        shift and go to state 413
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 269
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    arglist_star                   shift and go to state 270
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 314

    (7) decorator -> AT dotted_name NEWLINE .

    AT              reduce using rule 7 (decorator -> AT dotted_name NEWLINE .)
    DEF             reduce using rule 7 (decorator -> AT dotted_name NEWLINE .)


state 315

    (165) if_stmt -> IF test COLON . suite
    (166) if_stmt -> IF test COLON . suite ELSE COLON suite
    (167) if_stmt -> IF test COLON . suite if_stmt_star
    (168) if_stmt -> IF test COLON . suite if_stmt_star ELSE COLON suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 414
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 316

    (120) import_from -> FROM dotted_name IMPORT . STAR
    (121) import_from -> FROM dotted_name IMPORT . LPAR import_as_names RPAR
    (122) import_from -> FROM dotted_name IMPORT . import_as_names
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    STAR            shift and go to state 416
    LPAR            shift and go to state 418
    NAME            shift and go to state 417

    import_as_names                shift and go to state 419
    import_as_name                 shift and go to state 415

state 317

    (123) import_from -> FROM import_from_plus dotted_name . IMPORT STAR
    (124) import_from -> FROM import_from_plus dotted_name . IMPORT LPAR import_as_names RPAR
    (125) import_from -> FROM import_from_plus dotted_name . IMPORT import_as_names

    IMPORT          shift and go to state 420


state 318

    (126) import_from -> FROM import_from_plus IMPORT . STAR
    (127) import_from -> FROM import_from_plus IMPORT . LPAR import_as_names RPAR
    (128) import_from -> FROM import_from_plus IMPORT . import_as_names
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    STAR            shift and go to state 422
    LPAR            shift and go to state 421
    NAME            shift and go to state 417

    import_as_names                shift and go to state 423
    import_as_name                 shift and go to state 415

state 319

    (130) import_from_plus -> import_from_plus DOT .

    IMPORT          reduce using rule 130 (import_from_plus -> import_from_plus DOT .)
    DOT             reduce using rule 130 (import_from_plus -> import_from_plus DOT .)
    NAME            reduce using rule 130 (import_from_plus -> import_from_plus DOT .)


state 320

    (297) testlist_gexp -> test testlist_gexp_star COMMA .
    (299) testlist_gexp_star -> testlist_gexp_star COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RPAR            reduce using rule 297 (testlist_gexp -> test testlist_gexp_star COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 424
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 321

    (368) gen_for -> FOR exprlist . IN or_test
    (369) gen_for -> FOR exprlist . IN or_test gen_iter

    IN              shift and go to state 425


state 322

    (298) testlist_gexp_star -> COMMA test .

    COMMA           reduce using rule 298 (testlist_gexp_star -> COMMA test .)
    RPAR            reduce using rule 298 (testlist_gexp_star -> COMMA test .)


state 323

    (59) simple_stmt_star -> simple_stmt_star SEMI small_stmt .

    NEWLINE         reduce using rule 59 (simple_stmt_star -> simple_stmt_star SEMI small_stmt .)
    SEMI            reduce using rule 59 (simple_stmt_star -> simple_stmt_star SEMI small_stmt .)


state 324

    (57) simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .

    ENDMARKER       reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    NEWLINE         reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    IF              reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    WHILE           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    FOR             reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    TRY             reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    WITH            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    DEF             reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    CLASS           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    NAME            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    PRINT           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    DEL             reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    PASS            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    GLOBAL          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    EXEC            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    ASSERT          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    BREAK           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    CONTINUE        reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    RETURN          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    RAISE           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    IMPORT          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    FROM            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    YIELD           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    AT              reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    LAMBDA          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    NOT             reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    PLUS            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    MINUS           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    TILDE           reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    LPAR            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    LSQB            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    LBRACE          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    BACKQUOTE       reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    NUMBER          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    STRING          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    DEDENT          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    ELSE            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    ELIF            reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    FINALLY         reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)
    EXCEPT          reduce using rule 57 (simple_stmt -> small_stmt simple_stmt_star SEMI NEWLINE .)


state 325

    (184) with_var -> AS expr .

    COLON           reduce using rule 184 (with_var -> AS expr .)


state 326

    (183) with_stmt -> WITH test with_var COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 426
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 327

    (182) with_stmt -> WITH test COLON suite .

    ENDMARKER       reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    NEWLINE         reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    IF              reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    WHILE           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    FOR             reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    TRY             reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    WITH            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    DEF             reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    CLASS           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    NAME            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    PRINT           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    DEL             reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    PASS            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    GLOBAL          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    EXEC            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    ASSERT          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    BREAK           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    CONTINUE        reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    RETURN          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    RAISE           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    IMPORT          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    FROM            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    YIELD           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    AT              reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    LAMBDA          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    NOT             reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    PLUS            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    MINUS           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    TILDE           reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    LPAR            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    LSQB            reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    LBRACE          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    BACKQUOTE       reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    NUMBER          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    STRING          reduce using rule 182 (with_stmt -> WITH test COLON suite .)
    DEDENT          reduce using rule 182 (with_stmt -> WITH test COLON suite .)


state 328

    (259) term_star -> term_star STAR factor .

    STAR            reduce using rule 259 (term_star -> term_star STAR factor .)
    SLASH           reduce using rule 259 (term_star -> term_star STAR factor .)
    PERCENT         reduce using rule 259 (term_star -> term_star STAR factor .)
    DOUBLESLASH     reduce using rule 259 (term_star -> term_star STAR factor .)
    PLUS            reduce using rule 259 (term_star -> term_star STAR factor .)
    MINUS           reduce using rule 259 (term_star -> term_star STAR factor .)
    LEFTSHIFT       reduce using rule 259 (term_star -> term_star STAR factor .)
    RIGHTSHIFT      reduce using rule 259 (term_star -> term_star STAR factor .)
    AMPER           reduce using rule 259 (term_star -> term_star STAR factor .)
    CIRCUMFLEX      reduce using rule 259 (term_star -> term_star STAR factor .)
    VBAR            reduce using rule 259 (term_star -> term_star STAR factor .)
    LESS            reduce using rule 259 (term_star -> term_star STAR factor .)
    GREATER         reduce using rule 259 (term_star -> term_star STAR factor .)
    EQEQUAL         reduce using rule 259 (term_star -> term_star STAR factor .)
    GREATEREQUAL    reduce using rule 259 (term_star -> term_star STAR factor .)
    LESSEQUAL       reduce using rule 259 (term_star -> term_star STAR factor .)
    NOTEQUAL        reduce using rule 259 (term_star -> term_star STAR factor .)
    IN              reduce using rule 259 (term_star -> term_star STAR factor .)
    IS              reduce using rule 259 (term_star -> term_star STAR factor .)
    NOT             reduce using rule 259 (term_star -> term_star STAR factor .)
    AND             reduce using rule 259 (term_star -> term_star STAR factor .)
    OR              reduce using rule 259 (term_star -> term_star STAR factor .)
    IF              reduce using rule 259 (term_star -> term_star STAR factor .)
    COMMA           reduce using rule 259 (term_star -> term_star STAR factor .)
    PLUSEQUAL       reduce using rule 259 (term_star -> term_star STAR factor .)
    MINEQUAL        reduce using rule 259 (term_star -> term_star STAR factor .)
    STAREQUAL       reduce using rule 259 (term_star -> term_star STAR factor .)
    SLASHEQUAL      reduce using rule 259 (term_star -> term_star STAR factor .)
    PERCENTEQUAL    reduce using rule 259 (term_star -> term_star STAR factor .)
    AMPEREQUAL      reduce using rule 259 (term_star -> term_star STAR factor .)
    VBAREQUAL       reduce using rule 259 (term_star -> term_star STAR factor .)
    CIRCUMFLEXEQUAL reduce using rule 259 (term_star -> term_star STAR factor .)
    LEFTSHIFTEQUAL  reduce using rule 259 (term_star -> term_star STAR factor .)
    RIGHTSHIFTEQUAL reduce using rule 259 (term_star -> term_star STAR factor .)
    DOUBLESTAREQUAL reduce using rule 259 (term_star -> term_star STAR factor .)
    DOUBLESLASHEQUAL reduce using rule 259 (term_star -> term_star STAR factor .)
    EQUAL           reduce using rule 259 (term_star -> term_star STAR factor .)
    NEWLINE         reduce using rule 259 (term_star -> term_star STAR factor .)
    SEMI            reduce using rule 259 (term_star -> term_star STAR factor .)
    FOR             reduce using rule 259 (term_star -> term_star STAR factor .)
    RPAR            reduce using rule 259 (term_star -> term_star STAR factor .)
    COLON           reduce using rule 259 (term_star -> term_star STAR factor .)
    AS              reduce using rule 259 (term_star -> term_star STAR factor .)
    BACKQUOTE       reduce using rule 259 (term_star -> term_star STAR factor .)
    RSQB            reduce using rule 259 (term_star -> term_star STAR factor .)
    ELSE            reduce using rule 259 (term_star -> term_star STAR factor .)
    RBRACE          reduce using rule 259 (term_star -> term_star STAR factor .)


state 329

    (261) term_star -> term_star PERCENT factor .

    STAR            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    SLASH           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    PERCENT         reduce using rule 261 (term_star -> term_star PERCENT factor .)
    DOUBLESLASH     reduce using rule 261 (term_star -> term_star PERCENT factor .)
    PLUS            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    MINUS           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    LEFTSHIFT       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    RIGHTSHIFT      reduce using rule 261 (term_star -> term_star PERCENT factor .)
    AMPER           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    CIRCUMFLEX      reduce using rule 261 (term_star -> term_star PERCENT factor .)
    VBAR            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    LESS            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    GREATER         reduce using rule 261 (term_star -> term_star PERCENT factor .)
    EQEQUAL         reduce using rule 261 (term_star -> term_star PERCENT factor .)
    GREATEREQUAL    reduce using rule 261 (term_star -> term_star PERCENT factor .)
    LESSEQUAL       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    NOTEQUAL        reduce using rule 261 (term_star -> term_star PERCENT factor .)
    IN              reduce using rule 261 (term_star -> term_star PERCENT factor .)
    IS              reduce using rule 261 (term_star -> term_star PERCENT factor .)
    NOT             reduce using rule 261 (term_star -> term_star PERCENT factor .)
    AND             reduce using rule 261 (term_star -> term_star PERCENT factor .)
    OR              reduce using rule 261 (term_star -> term_star PERCENT factor .)
    IF              reduce using rule 261 (term_star -> term_star PERCENT factor .)
    COMMA           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    PLUSEQUAL       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    MINEQUAL        reduce using rule 261 (term_star -> term_star PERCENT factor .)
    STAREQUAL       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    SLASHEQUAL      reduce using rule 261 (term_star -> term_star PERCENT factor .)
    PERCENTEQUAL    reduce using rule 261 (term_star -> term_star PERCENT factor .)
    AMPEREQUAL      reduce using rule 261 (term_star -> term_star PERCENT factor .)
    VBAREQUAL       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    CIRCUMFLEXEQUAL reduce using rule 261 (term_star -> term_star PERCENT factor .)
    LEFTSHIFTEQUAL  reduce using rule 261 (term_star -> term_star PERCENT factor .)
    RIGHTSHIFTEQUAL reduce using rule 261 (term_star -> term_star PERCENT factor .)
    DOUBLESTAREQUAL reduce using rule 261 (term_star -> term_star PERCENT factor .)
    DOUBLESLASHEQUAL reduce using rule 261 (term_star -> term_star PERCENT factor .)
    EQUAL           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    NEWLINE         reduce using rule 261 (term_star -> term_star PERCENT factor .)
    SEMI            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    FOR             reduce using rule 261 (term_star -> term_star PERCENT factor .)
    RPAR            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    COLON           reduce using rule 261 (term_star -> term_star PERCENT factor .)
    AS              reduce using rule 261 (term_star -> term_star PERCENT factor .)
    BACKQUOTE       reduce using rule 261 (term_star -> term_star PERCENT factor .)
    RSQB            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    ELSE            reduce using rule 261 (term_star -> term_star PERCENT factor .)
    RBRACE          reduce using rule 261 (term_star -> term_star PERCENT factor .)


state 330

    (262) term_star -> term_star DOUBLESLASH factor .

    STAR            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    SLASH           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    PERCENT         reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    DOUBLESLASH     reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    PLUS            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    MINUS           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    LEFTSHIFT       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    RIGHTSHIFT      reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    AMPER           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    CIRCUMFLEX      reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    VBAR            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    LESS            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    GREATER         reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    EQEQUAL         reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    GREATEREQUAL    reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    LESSEQUAL       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    NOTEQUAL        reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    IN              reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    IS              reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    NOT             reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    AND             reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    OR              reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    IF              reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    COMMA           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    PLUSEQUAL       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    MINEQUAL        reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    STAREQUAL       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    SLASHEQUAL      reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    PERCENTEQUAL    reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    AMPEREQUAL      reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    VBAREQUAL       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    CIRCUMFLEXEQUAL reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    LEFTSHIFTEQUAL  reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    RIGHTSHIFTEQUAL reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    DOUBLESTAREQUAL reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    DOUBLESLASHEQUAL reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    EQUAL           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    NEWLINE         reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    SEMI            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    FOR             reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    RPAR            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    COLON           reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    AS              reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    BACKQUOTE       reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    RSQB            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    ELSE            reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)
    RBRACE          reduce using rule 262 (term_star -> term_star DOUBLESLASH factor .)


state 331

    (260) term_star -> term_star SLASH factor .

    STAR            reduce using rule 260 (term_star -> term_star SLASH factor .)
    SLASH           reduce using rule 260 (term_star -> term_star SLASH factor .)
    PERCENT         reduce using rule 260 (term_star -> term_star SLASH factor .)
    DOUBLESLASH     reduce using rule 260 (term_star -> term_star SLASH factor .)
    PLUS            reduce using rule 260 (term_star -> term_star SLASH factor .)
    MINUS           reduce using rule 260 (term_star -> term_star SLASH factor .)
    LEFTSHIFT       reduce using rule 260 (term_star -> term_star SLASH factor .)
    RIGHTSHIFT      reduce using rule 260 (term_star -> term_star SLASH factor .)
    AMPER           reduce using rule 260 (term_star -> term_star SLASH factor .)
    CIRCUMFLEX      reduce using rule 260 (term_star -> term_star SLASH factor .)
    VBAR            reduce using rule 260 (term_star -> term_star SLASH factor .)
    LESS            reduce using rule 260 (term_star -> term_star SLASH factor .)
    GREATER         reduce using rule 260 (term_star -> term_star SLASH factor .)
    EQEQUAL         reduce using rule 260 (term_star -> term_star SLASH factor .)
    GREATEREQUAL    reduce using rule 260 (term_star -> term_star SLASH factor .)
    LESSEQUAL       reduce using rule 260 (term_star -> term_star SLASH factor .)
    NOTEQUAL        reduce using rule 260 (term_star -> term_star SLASH factor .)
    IN              reduce using rule 260 (term_star -> term_star SLASH factor .)
    IS              reduce using rule 260 (term_star -> term_star SLASH factor .)
    NOT             reduce using rule 260 (term_star -> term_star SLASH factor .)
    AND             reduce using rule 260 (term_star -> term_star SLASH factor .)
    OR              reduce using rule 260 (term_star -> term_star SLASH factor .)
    IF              reduce using rule 260 (term_star -> term_star SLASH factor .)
    COMMA           reduce using rule 260 (term_star -> term_star SLASH factor .)
    PLUSEQUAL       reduce using rule 260 (term_star -> term_star SLASH factor .)
    MINEQUAL        reduce using rule 260 (term_star -> term_star SLASH factor .)
    STAREQUAL       reduce using rule 260 (term_star -> term_star SLASH factor .)
    SLASHEQUAL      reduce using rule 260 (term_star -> term_star SLASH factor .)
    PERCENTEQUAL    reduce using rule 260 (term_star -> term_star SLASH factor .)
    AMPEREQUAL      reduce using rule 260 (term_star -> term_star SLASH factor .)
    VBAREQUAL       reduce using rule 260 (term_star -> term_star SLASH factor .)
    CIRCUMFLEXEQUAL reduce using rule 260 (term_star -> term_star SLASH factor .)
    LEFTSHIFTEQUAL  reduce using rule 260 (term_star -> term_star SLASH factor .)
    RIGHTSHIFTEQUAL reduce using rule 260 (term_star -> term_star SLASH factor .)
    DOUBLESTAREQUAL reduce using rule 260 (term_star -> term_star SLASH factor .)
    DOUBLESLASHEQUAL reduce using rule 260 (term_star -> term_star SLASH factor .)
    EQUAL           reduce using rule 260 (term_star -> term_star SLASH factor .)
    NEWLINE         reduce using rule 260 (term_star -> term_star SLASH factor .)
    SEMI            reduce using rule 260 (term_star -> term_star SLASH factor .)
    FOR             reduce using rule 260 (term_star -> term_star SLASH factor .)
    RPAR            reduce using rule 260 (term_star -> term_star SLASH factor .)
    COLON           reduce using rule 260 (term_star -> term_star SLASH factor .)
    AS              reduce using rule 260 (term_star -> term_star SLASH factor .)
    BACKQUOTE       reduce using rule 260 (term_star -> term_star SLASH factor .)
    RSQB            reduce using rule 260 (term_star -> term_star SLASH factor .)
    ELSE            reduce using rule 260 (term_star -> term_star SLASH factor .)
    RBRACE          reduce using rule 260 (term_star -> term_star SLASH factor .)


state 332

    (134) dotted_as_name -> dotted_name AS NAME .

    COMMA           reduce using rule 134 (dotted_as_name -> dotted_name AS NAME .)
    NEWLINE         reduce using rule 134 (dotted_as_name -> dotted_name AS NAME .)
    SEMI            reduce using rule 134 (dotted_as_name -> dotted_name AS NAME .)


state 333

    (147) dotted_name_star -> DOT NAME .

    DOT             reduce using rule 147 (dotted_name_star -> DOT NAME .)
    AS              reduce using rule 147 (dotted_name_star -> DOT NAME .)
    COMMA           reduce using rule 147 (dotted_name_star -> DOT NAME .)
    NEWLINE         reduce using rule 147 (dotted_name_star -> DOT NAME .)
    SEMI            reduce using rule 147 (dotted_name_star -> DOT NAME .)
    LPAR            reduce using rule 147 (dotted_name_star -> DOT NAME .)
    IMPORT          reduce using rule 147 (dotted_name_star -> DOT NAME .)


state 334

    (148) dotted_name_star -> dotted_name_star DOT . NAME

    NAME            shift and go to state 427


state 335

    (143) dotted_as_names_star -> COMMA dotted_as_name .

    COMMA           reduce using rule 143 (dotted_as_names_star -> COMMA dotted_as_name .)
    NEWLINE         reduce using rule 143 (dotted_as_names_star -> COMMA dotted_as_name .)
    SEMI            reduce using rule 143 (dotted_as_names_star -> COMMA dotted_as_name .)


state 336

    (144) dotted_as_names_star -> dotted_as_names_star COMMA . dotted_as_name
    (133) dotted_as_name -> . dotted_name
    (134) dotted_as_name -> . dotted_name AS NAME
    (145) dotted_name -> . NAME
    (146) dotted_name -> . NAME dotted_name_star

    NAME            shift and go to state 103

    dotted_as_name                 shift and go to state 428
    dotted_name                    shift and go to state 102

state 337

    (236) xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .

    CIRCUMFLEX      reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    VBAR            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    LESS            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    GREATER         reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    EQEQUAL         reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    GREATEREQUAL    reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    LESSEQUAL       reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    NOTEQUAL        reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    IN              reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    IS              reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    NOT             reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    AND             reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    OR              reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    IF              reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    COMMA           reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    PLUSEQUAL       reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    MINEQUAL        reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    STAREQUAL       reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    SLASHEQUAL      reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    PERCENTEQUAL    reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    AMPEREQUAL      reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    VBAREQUAL       reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    CIRCUMFLEXEQUAL reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    LEFTSHIFTEQUAL  reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    RIGHTSHIFTEQUAL reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    DOUBLESTAREQUAL reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    DOUBLESLASHEQUAL reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    EQUAL           reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    NEWLINE         reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    SEMI            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    FOR             reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    RPAR            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    COLON           reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    AS              reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    BACKQUOTE       reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    RSQB            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    ELSE            reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)
    RBRACE          reduce using rule 236 (xor_expr_star -> xor_expr_star CIRCUMFLEX and_expr .)


state 338

    (154) exec_stmt -> EXEC expr IN test .
    (155) exec_stmt -> EXEC expr IN test . COMMA test

    NEWLINE         reduce using rule 154 (exec_stmt -> EXEC expr IN test .)
    SEMI            reduce using rule 154 (exec_stmt -> EXEC expr IN test .)
    COMMA           shift and go to state 429


state 339

    (77) expr_stmt_star -> expr_stmt_star EQUAL yield_expr .

    EQUAL           reduce using rule 77 (expr_stmt_star -> expr_stmt_star EQUAL yield_expr .)
    NEWLINE         reduce using rule 77 (expr_stmt_star -> expr_stmt_star EQUAL yield_expr .)
    SEMI            reduce using rule 77 (expr_stmt_star -> expr_stmt_star EQUAL yield_expr .)


state 340

    (78) expr_stmt_star -> expr_stmt_star EQUAL testlist .

    EQUAL           reduce using rule 78 (expr_stmt_star -> expr_stmt_star EQUAL testlist .)
    NEWLINE         reduce using rule 78 (expr_stmt_star -> expr_stmt_star EQUAL testlist .)
    SEMI            reduce using rule 78 (expr_stmt_star -> expr_stmt_star EQUAL testlist .)


state 341

    (251) arith_expr_star -> arith_expr_star PLUS term .

    PLUS            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    MINUS           reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    LEFTSHIFT       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    RIGHTSHIFT      reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    AMPER           reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    CIRCUMFLEX      reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    VBAR            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    LESS            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    GREATER         reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    EQEQUAL         reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    GREATEREQUAL    reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    LESSEQUAL       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    NOTEQUAL        reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    IN              reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    IS              reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    NOT             reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    AND             reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    OR              reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    IF              reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    COMMA           reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    PLUSEQUAL       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    MINEQUAL        reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    STAREQUAL       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    SLASHEQUAL      reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    PERCENTEQUAL    reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    AMPEREQUAL      reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    VBAREQUAL       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    CIRCUMFLEXEQUAL reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    LEFTSHIFTEQUAL  reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    RIGHTSHIFTEQUAL reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    DOUBLESTAREQUAL reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    DOUBLESLASHEQUAL reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    EQUAL           reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    NEWLINE         reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    SEMI            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    FOR             reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    RPAR            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    COLON           reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    AS              reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    BACKQUOTE       reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    RSQB            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    ELSE            reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)
    RBRACE          reduce using rule 251 (arith_expr_star -> arith_expr_star PLUS term .)


state 342

    (252) arith_expr_star -> arith_expr_star MINUS term .

    PLUS            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    MINUS           reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    LEFTSHIFT       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    RIGHTSHIFT      reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    AMPER           reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    CIRCUMFLEX      reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    VBAR            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    LESS            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    GREATER         reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    EQEQUAL         reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    GREATEREQUAL    reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    LESSEQUAL       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    NOTEQUAL        reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    IN              reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    IS              reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    NOT             reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    AND             reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    OR              reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    IF              reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    COMMA           reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    PLUSEQUAL       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    MINEQUAL        reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    STAREQUAL       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    SLASHEQUAL      reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    PERCENTEQUAL    reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    AMPEREQUAL      reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    VBAREQUAL       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    CIRCUMFLEXEQUAL reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    LEFTSHIFTEQUAL  reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    RIGHTSHIFTEQUAL reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    DOUBLESTAREQUAL reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    DOUBLESLASHEQUAL reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    EQUAL           reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    NEWLINE         reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    SEMI            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    FOR             reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    RPAR            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    COLON           reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    AS              reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    BACKQUOTE       reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    RSQB            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    ELSE            reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)
    RBRACE          reduce using rule 252 (arith_expr_star -> arith_expr_star MINUS term .)


state 343

    (203) test -> or_test IF or_test ELSE . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 430
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 344

    (218) comparison_star -> comparison_star comp_op expr .

    LESS            reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    GREATER         reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    EQEQUAL         reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    GREATEREQUAL    reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    LESSEQUAL       reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    NOTEQUAL        reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    IN              reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    IS              reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    NOT             reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    AND             reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    OR              reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    IF              reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    COMMA           reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    PLUSEQUAL       reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    MINEQUAL        reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    STAREQUAL       reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    SLASHEQUAL      reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    PERCENTEQUAL    reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    AMPEREQUAL      reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    VBAREQUAL       reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    CIRCUMFLEXEQUAL reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    LEFTSHIFTEQUAL  reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    RIGHTSHIFTEQUAL reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    DOUBLESTAREQUAL reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    DOUBLESLASHEQUAL reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    EQUAL           reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    NEWLINE         reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    SEMI            reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    FOR             reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    RPAR            reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    COLON           reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    AS              reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    BACKQUOTE       reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    RSQB            reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    ELSE            reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)
    RBRACE          reduce using rule 218 (comparison_star -> comparison_star comp_op expr .)


state 345

    (374) testlist1_star -> COMMA test .

    COMMA           reduce using rule 374 (testlist1_star -> COMMA test .)
    BACKQUOTE       reduce using rule 374 (testlist1_star -> COMMA test .)


state 346

    (375) testlist1_star -> testlist1_star COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 431
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 347

    (328) exprlist_star -> COMMA expr .

    COMMA           reduce using rule 328 (exprlist_star -> COMMA expr .)
    NEWLINE         reduce using rule 328 (exprlist_star -> COMMA expr .)
    SEMI            reduce using rule 328 (exprlist_star -> COMMA expr .)
    IN              reduce using rule 328 (exprlist_star -> COMMA expr .)


state 348

    (327) exprlist -> expr exprlist_star COMMA .
    (329) exprlist_star -> exprlist_star COMMA . expr
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    IN              reduce using rule 327 (exprlist -> expr exprlist_star COMMA .)
    NEWLINE         reduce using rule 327 (exprlist -> expr exprlist_star COMMA .)
    SEMI            reduce using rule 327 (exprlist -> expr exprlist_star COMMA .)
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 432

state 349

    (95) print_stmt -> PRINT test print_stmt_plus COMMA .
    (100) print_stmt_plus -> print_stmt_plus COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 95 (print_stmt -> PRINT test print_stmt_plus COMMA .)
    SEMI            reduce using rule 95 (print_stmt -> PRINT test print_stmt_plus COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 433
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 350

    (99) print_stmt_plus -> COMMA test .

    COMMA           reduce using rule 99 (print_stmt_plus -> COMMA test .)
    NEWLINE         reduce using rule 99 (print_stmt_plus -> COMMA test .)
    SEMI            reduce using rule 99 (print_stmt_plus -> COMMA test .)


state 351

    (97) print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus .
    (98) print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus . COMMA
    (100) print_stmt_plus -> print_stmt_plus . COMMA test

    NEWLINE         reduce using rule 97 (print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus .)
    SEMI            reduce using rule 97 (print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus .)
    COMMA           shift and go to state 434


state 352

    (99) print_stmt_plus -> COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 350
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 353

    (15) parameters -> LPAR RPAR .

    COLON           reduce using rule 15 (parameters -> LPAR RPAR .)


state 354

    (16) parameters -> LPAR varargslist . RPAR

    RPAR            shift and go to state 435


state 355

    (13) funcdef -> DEF NAME parameters COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 436
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 356

    (240) and_expr_star -> and_expr_star AMPER shift_expr .

    AMPER           reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    CIRCUMFLEX      reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    VBAR            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    LESS            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    GREATER         reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    EQEQUAL         reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    GREATEREQUAL    reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    LESSEQUAL       reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    NOTEQUAL        reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    IN              reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    IS              reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    NOT             reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    AND             reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    OR              reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    IF              reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    COMMA           reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    PLUSEQUAL       reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    MINEQUAL        reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    STAREQUAL       reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    SLASHEQUAL      reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    PERCENTEQUAL    reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    AMPEREQUAL      reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    VBAREQUAL       reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    CIRCUMFLEXEQUAL reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    LEFTSHIFTEQUAL  reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    RIGHTSHIFTEQUAL reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    DOUBLESTAREQUAL reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    DOUBLESLASHEQUAL reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    EQUAL           reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    NEWLINE         reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    SEMI            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    FOR             reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    RPAR            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    COLON           reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    AS              reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    BACKQUOTE       reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    RSQB            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    ELSE            reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)
    RBRACE          reduce using rule 240 (and_expr_star -> and_expr_star AMPER shift_expr .)


state 357

    (14) funcdef -> decorators DEF NAME parameters . COLON suite

    COLON           shift and go to state 437


state 358

    (173) for_stmt -> FOR exprlist IN testlist . COLON suite
    (174) for_stmt -> FOR exprlist IN testlist . COLON suite ELSE COLON suite

    COLON           shift and go to state 438


state 359

    (190) suite -> NEWLINE INDENT . suite_plus DEDENT
    (191) suite_plus -> . stmt
    (192) suite_plus -> . suite_plus stmt
    (52) stmt -> . simple_stmt
    (53) stmt -> . compound_stmt
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (158) compound_stmt -> . if_stmt
    (159) compound_stmt -> . while_stmt
    (160) compound_stmt -> . for_stmt
    (161) compound_stmt -> . try_stmt
    (162) compound_stmt -> . with_stmt
    (163) compound_stmt -> . funcdef
    (164) compound_stmt -> . classdef
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (165) if_stmt -> . IF test COLON suite
    (166) if_stmt -> . IF test COLON suite ELSE COLON suite
    (167) if_stmt -> . IF test COLON suite if_stmt_star
    (168) if_stmt -> . IF test COLON suite if_stmt_star ELSE COLON suite
    (171) while_stmt -> . WHILE test COLON suite
    (172) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (173) for_stmt -> . FOR exprlist IN testlist COLON suite
    (174) for_stmt -> . FOR exprlist IN testlist COLON suite ELSE COLON suite
    (175) try_stmt -> . TRY COLON suite try_stmt_plus
    (176) try_stmt -> . TRY COLON suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (182) with_stmt -> . WITH test COLON suite
    (183) with_stmt -> . WITH test with_var COLON suite
    (13) funcdef -> . DEF NAME parameters COLON suite
    (14) funcdef -> . decorators DEF NAME parameters COLON suite
    (342) classdef -> . CLASS NAME COLON suite
    (343) classdef -> . CLASS NAME LPAR RPAR COLON suite
    (344) classdef -> . CLASS NAME LPAR testlist RPAR COLON suite
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (10) decorators -> . decorators_plus
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (11) decorators_plus -> . decorator
    (12) decorators_plus -> . decorators_plus decorator
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (7) decorator -> . AT dotted_name NEWLINE
    (8) decorator -> . AT dotted_name LPAR RPAR NEWLINE
    (9) decorator -> . AT dotted_name LPAR arglist RPAR NEWLINE
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    IF              shift and go to state 81
    WHILE           shift and go to state 54
    FOR             shift and go to state 39
    TRY             shift and go to state 41
    WITH            shift and go to state 7
    DEF             shift and go to state 31
    CLASS           shift and go to state 77
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    AT              shift and go to state 80
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    try_stmt                       shift and go to state 6
    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    or_test                        shift and go to state 25
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    decorator                      shift and go to state 22
    flow_stmt                      shift and go to state 33
    suite_plus                     shift and go to state 439
    expr_stmt                      shift and go to state 21
    atom                           shift and go to state 48
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 15
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    decorators                     shift and go to state 37
    compound_stmt                  shift and go to state 38
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 440
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 83
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    funcdef                        shift and go to state 5
    import_stmt                    shift and go to state 43
    pass_stmt                      shift and go to state 46
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    if_stmt                        shift and go to state 24
    decorators_plus                shift and go to state 47
    import_name                    shift and go to state 76
    raise_stmt                     shift and go to state 65
    del_stmt                       shift and go to state 84
    while_stmt                     shift and go to state 85
    expr                           shift and go to state 27
    with_stmt                      shift and go to state 26
    xor_expr                       shift and go to state 59
    yield_stmt                     shift and go to state 69

state 360

    (180) try_stmt_plus -> except_clause . COLON suite

    COLON           shift and go to state 441


state 361

    (185) except_clause -> EXCEPT .
    (186) except_clause -> EXCEPT . test
    (187) except_clause -> EXCEPT . test AS test
    (188) except_clause -> EXCEPT . test COMMA test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    COLON           reduce using rule 185 (except_clause -> EXCEPT .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 442
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 362

    (179) try_stmt -> TRY COLON suite FINALLY . COLON suite

    COLON           shift and go to state 443


state 363

    (175) try_stmt -> TRY COLON suite try_stmt_plus .
    (176) try_stmt -> TRY COLON suite try_stmt_plus . FINALLY COLON suite
    (177) try_stmt -> TRY COLON suite try_stmt_plus . ELSE COLON suite
    (178) try_stmt -> TRY COLON suite try_stmt_plus . ELSE COLON suite FINALLY COLON suite
    (181) try_stmt_plus -> try_stmt_plus . except_clause COLON suite
    (185) except_clause -> . EXCEPT
    (186) except_clause -> . EXCEPT test
    (187) except_clause -> . EXCEPT test AS test
    (188) except_clause -> . EXCEPT test COMMA test

    ENDMARKER       reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    NEWLINE         reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    IF              reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    WHILE           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    FOR             reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    TRY             reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    WITH            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    DEF             reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    CLASS           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    NAME            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    PRINT           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    DEL             reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    PASS            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    GLOBAL          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    EXEC            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    ASSERT          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    BREAK           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    CONTINUE        reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    RETURN          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    RAISE           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    IMPORT          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    FROM            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    YIELD           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    AT              reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    LAMBDA          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    NOT             reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    PLUS            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    MINUS           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    TILDE           reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    LPAR            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    LSQB            reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    LBRACE          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    BACKQUOTE       reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    NUMBER          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    STRING          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    DEDENT          reduce using rule 175 (try_stmt -> TRY COLON suite try_stmt_plus .)
    FINALLY         shift and go to state 446
    ELSE            shift and go to state 445
    EXCEPT          shift and go to state 361

    except_clause                  shift and go to state 444

state 364

    (208) or_test_star -> or_test_star OR and_test .

    OR              reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    IF              reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    COMMA           reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    PLUSEQUAL       reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    MINEQUAL        reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    STAREQUAL       reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    SLASHEQUAL      reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    PERCENTEQUAL    reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    AMPEREQUAL      reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    VBAREQUAL       reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    CIRCUMFLEXEQUAL reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    LEFTSHIFTEQUAL  reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    RIGHTSHIFTEQUAL reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    DOUBLESTAREQUAL reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    DOUBLESLASHEQUAL reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    EQUAL           reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    NEWLINE         reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    SEMI            reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    FOR             reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    RPAR            reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    COLON           reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    AS              reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    BACKQUOTE       reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    RSQB            reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    ELSE            reduce using rule 208 (or_test_star -> or_test_star OR and_test .)
    RBRACE          reduce using rule 208 (or_test_star -> or_test_star OR and_test .)


state 365

    (336) dictmaker -> test COLON test .
    (337) dictmaker -> test COLON test . COMMA
    (338) dictmaker -> test COLON test . dictmaker_star
    (339) dictmaker -> test COLON test . dictmaker_star COMMA
    (340) dictmaker_star -> . COMMA test COLON test
    (341) dictmaker_star -> . dictmaker_star COMMA test COLON test

    RBRACE          reduce using rule 336 (dictmaker -> test COLON test .)
    COMMA           shift and go to state 447

    dictmaker_star                 shift and go to state 448

state 366

    (347) arglist -> STAR test .
    (348) arglist -> STAR test . COMMA DOUBLESTAR test

    RPAR            reduce using rule 347 (arglist -> STAR test .)
    COMMA           shift and go to state 449


state 367

    (349) arglist -> DOUBLESTAR test .

    RPAR            reduce using rule 349 (arglist -> DOUBLESTAR test .)


state 368

    (303) trailer -> LPAR arglist RPAR .

    DOUBLESTAR      reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LPAR            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LSQB            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    DOT             reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    STAR            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    SLASH           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    PERCENT         reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    DOUBLESLASH     reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    PLUS            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    MINUS           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LEFTSHIFT       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    RIGHTSHIFT      reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    AMPER           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    CIRCUMFLEX      reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    VBAR            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LESS            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    GREATER         reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    EQEQUAL         reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    GREATEREQUAL    reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LESSEQUAL       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    NOTEQUAL        reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    IN              reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    IS              reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    NOT             reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    AND             reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    OR              reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    IF              reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    COMMA           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    PLUSEQUAL       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    MINEQUAL        reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    STAREQUAL       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    SLASHEQUAL      reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    PERCENTEQUAL    reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    AMPEREQUAL      reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    VBAREQUAL       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    CIRCUMFLEXEQUAL reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    LEFTSHIFTEQUAL  reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    RIGHTSHIFTEQUAL reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    DOUBLESTAREQUAL reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    DOUBLESLASHEQUAL reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    EQUAL           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    NEWLINE         reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    SEMI            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    FOR             reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    RPAR            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    COLON           reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    AS              reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    BACKQUOTE       reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    RSQB            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    ELSE            reduce using rule 303 (trailer -> LPAR arglist RPAR .)
    RBRACE          reduce using rule 303 (trailer -> LPAR arglist RPAR .)


state 369

    (358) argument -> test gen_for .

    COMMA           reduce using rule 358 (argument -> test gen_for .)
    RPAR            reduce using rule 358 (argument -> test gen_for .)


state 370

    (359) argument -> test EQUAL . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 450
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 371

    (352) arglist -> arglist_star STAR . test
    (353) arglist -> arglist_star STAR . test COMMA DOUBLESTAR test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 451
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 372

    (350) arglist -> arglist_star argument .
    (351) arglist -> arglist_star argument . COMMA
    (356) arglist_star -> arglist_star argument . COMMA

    RPAR            reduce using rule 350 (arglist -> arglist_star argument .)
    COMMA           shift and go to state 452


state 373

    (354) arglist -> arglist_star DOUBLESTAR . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 453
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 374

    (346) arglist -> argument COMMA .
    (355) arglist_star -> argument COMMA .

    RPAR            reduce using rule 346 (arglist -> argument COMMA .)
    STAR            reduce using rule 355 (arglist_star -> argument COMMA .)
    DOUBLESTAR      reduce using rule 355 (arglist_star -> argument COMMA .)
    LAMBDA          reduce using rule 355 (arglist_star -> argument COMMA .)
    NOT             reduce using rule 355 (arglist_star -> argument COMMA .)
    PLUS            reduce using rule 355 (arglist_star -> argument COMMA .)
    MINUS           reduce using rule 355 (arglist_star -> argument COMMA .)
    TILDE           reduce using rule 355 (arglist_star -> argument COMMA .)
    LPAR            reduce using rule 355 (arglist_star -> argument COMMA .)
    LSQB            reduce using rule 355 (arglist_star -> argument COMMA .)
    LBRACE          reduce using rule 355 (arglist_star -> argument COMMA .)
    BACKQUOTE       reduce using rule 355 (arglist_star -> argument COMMA .)
    NAME            reduce using rule 355 (arglist_star -> argument COMMA .)
    NUMBER          reduce using rule 355 (arglist_star -> argument COMMA .)
    STRING          reduce using rule 355 (arglist_star -> argument COMMA .)


state 375

    (270) power -> atom power_star DOUBLESTAR factor .

    STAR            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    SLASH           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    PERCENT         reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    DOUBLESLASH     reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    PLUS            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    MINUS           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    LEFTSHIFT       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    RIGHTSHIFT      reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    AMPER           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    CIRCUMFLEX      reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    VBAR            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    LESS            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    GREATER         reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    EQEQUAL         reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    GREATEREQUAL    reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    LESSEQUAL       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    NOTEQUAL        reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    IN              reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    IS              reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    NOT             reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    AND             reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    OR              reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    IF              reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    EQUAL           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    FOR             reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    COMMA           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    RPAR            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    NEWLINE         reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    SEMI            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    PLUSEQUAL       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    MINEQUAL        reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    STAREQUAL       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    SLASHEQUAL      reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    PERCENTEQUAL    reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    AMPEREQUAL      reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    VBAREQUAL       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    CIRCUMFLEXEQUAL reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    LEFTSHIFTEQUAL  reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    RIGHTSHIFTEQUAL reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    DOUBLESTAREQUAL reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    DOUBLESLASHEQUAL reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    COLON           reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    AS              reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    BACKQUOTE       reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    RSQB            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    ELSE            reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)
    RBRACE          reduce using rule 270 (power -> atom power_star DOUBLESTAR factor .)


state 376

    (322) sliceop -> COLON .
    (323) sliceop -> COLON . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    COMMA           reduce using rule 322 (sliceop -> COLON .)
    RSQB            reduce using rule 322 (sliceop -> COLON .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 454
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 377

    (316) subscript -> COLON test .
    (317) subscript -> COLON test . sliceop
    (322) sliceop -> . COLON
    (323) sliceop -> . COLON test

    COMMA           reduce using rule 316 (subscript -> COLON test .)
    RSQB            reduce using rule 316 (subscript -> COLON test .)
    COLON           shift and go to state 376

    sliceop                        shift and go to state 455

state 378

    (315) subscript -> COLON sliceop .

    COMMA           reduce using rule 315 (subscript -> COLON sliceop .)
    RSQB            reduce using rule 315 (subscript -> COLON sliceop .)


state 379

    (312) subscript -> DOT DOT . DOT

    DOT             shift and go to state 456


state 380

    (318) subscript -> test COLON .
    (319) subscript -> test COLON . sliceop
    (320) subscript -> test COLON . test
    (321) subscript -> test COLON . test sliceop
    (322) sliceop -> . COLON
    (323) sliceop -> . COLON test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    COMMA           reduce using rule 318 (subscript -> test COLON .)
    RSQB            reduce using rule 318 (subscript -> test COLON .)
    COLON           shift and go to state 376
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 457
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    sliceop                        shift and go to state 458
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 381

    (308) subscriptlist -> subscript subscriptlist_star .
    (309) subscriptlist -> subscript subscriptlist_star . COMMA
    (311) subscriptlist_star -> subscriptlist_star . COMMA subscript

    RSQB            reduce using rule 308 (subscriptlist -> subscript subscriptlist_star .)
    COMMA           shift and go to state 459


state 382

    (307) subscriptlist -> subscript COMMA .
    (310) subscriptlist_star -> COMMA . subscript
    (312) subscript -> . DOT DOT DOT
    (313) subscript -> . test
    (314) subscript -> . COLON
    (315) subscript -> . COLON sliceop
    (316) subscript -> . COLON test
    (317) subscript -> . COLON test sliceop
    (318) subscript -> . test COLON
    (319) subscript -> . test COLON sliceop
    (320) subscript -> . test COLON test
    (321) subscript -> . test COLON test sliceop
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RSQB            reduce using rule 307 (subscriptlist -> subscript COMMA .)
    DOT             shift and go to state 277
    COLON           shift and go to state 276
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 278
    subscript                      shift and go to state 460
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 383

    (304) trailer -> LSQB subscriptlist RSQB .

    DOUBLESTAR      reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LPAR            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LSQB            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    DOT             reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    STAR            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    SLASH           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    PERCENT         reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    DOUBLESLASH     reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    PLUS            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    MINUS           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LEFTSHIFT       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    RIGHTSHIFT      reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    AMPER           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    CIRCUMFLEX      reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    VBAR            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LESS            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    GREATER         reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    EQEQUAL         reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    GREATEREQUAL    reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LESSEQUAL       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    NOTEQUAL        reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    IN              reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    IS              reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    NOT             reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    AND             reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    OR              reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    IF              reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    COMMA           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    PLUSEQUAL       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    MINEQUAL        reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    STAREQUAL       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    SLASHEQUAL      reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    PERCENTEQUAL    reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    AMPEREQUAL      reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    VBAREQUAL       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    CIRCUMFLEXEQUAL reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    LEFTSHIFTEQUAL  reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    RIGHTSHIFTEQUAL reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    DOUBLESTAREQUAL reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    DOUBLESLASHEQUAL reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    EQUAL           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    NEWLINE         reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    SEMI            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    FOR             reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    RPAR            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    COLON           reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    AS              reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    BACKQUOTE       reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    RSQB            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    ELSE            reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)
    RBRACE          reduce using rule 304 (trailer -> LSQB subscriptlist RSQB .)


state 384

    (47) fplist -> fpdef COMMA .
    (50) fplist_star -> COMMA . fpdef
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 47 (fplist -> fpdef COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 461

state 385

    (48) fplist -> fpdef fplist_star .
    (49) fplist -> fpdef fplist_star . COMMA
    (51) fplist_star -> fplist_star . COMMA fpdef

    RPAR            reduce using rule 48 (fplist -> fpdef fplist_star .)
    COMMA           shift and go to state 462


state 386

    (45) fpdef -> LPAR fplist RPAR .

    COMMA           reduce using rule 45 (fpdef -> LPAR fplist RPAR .)
    RPAR            reduce using rule 45 (fpdef -> LPAR fplist RPAR .)
    EQUAL           reduce using rule 45 (fpdef -> LPAR fplist RPAR .)
    COLON           reduce using rule 45 (fpdef -> LPAR fplist RPAR .)


state 387

    (38) varargslist -> STAR NAME COMMA . DOUBLESTAR NAME

    DOUBLESTAR      shift and go to state 463


state 388

    (22) varargslist -> fpdef varargslist_star COMMA . STAR NAME
    (23) varargslist -> fpdef varargslist_star COMMA . STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> fpdef varargslist_star COMMA . DOUBLESTAR NAME
    (26) varargslist -> fpdef varargslist_star COMMA .
    (42) varargslist_star -> varargslist_star COMMA . fpdef
    (43) varargslist_star -> varargslist_star COMMA . fpdef EQUAL test
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    STAR            shift and go to state 464
    DOUBLESTAR      shift and go to state 466
    COLON           reduce using rule 26 (varargslist -> fpdef varargslist_star COMMA .)
    RPAR            reduce using rule 26 (varargslist -> fpdef varargslist_star COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 465

state 389

    (27) varargslist -> fpdef EQUAL test . COMMA STAR NAME
    (28) varargslist -> fpdef EQUAL test . COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> fpdef EQUAL test . COMMA DOUBLESTAR NAME
    (30) varargslist -> fpdef EQUAL test .
    (31) varargslist -> fpdef EQUAL test . COMMA
    (32) varargslist -> fpdef EQUAL test . varargslist_star COMMA STAR NAME
    (33) varargslist -> fpdef EQUAL test . varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> fpdef EQUAL test . varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> fpdef EQUAL test . varargslist_star
    (36) varargslist -> fpdef EQUAL test . varargslist_star COMMA
    (40) varargslist_star -> . COMMA fpdef
    (41) varargslist_star -> . COMMA fpdef EQUAL test
    (42) varargslist_star -> . varargslist_star COMMA fpdef
    (43) varargslist_star -> . varargslist_star COMMA fpdef EQUAL test

    COMMA           shift and go to state 468
    COLON           reduce using rule 30 (varargslist -> fpdef EQUAL test .)
    RPAR            reduce using rule 30 (varargslist -> fpdef EQUAL test .)

    varargslist_star               shift and go to state 467

state 390

    (17) varargslist -> fpdef COMMA STAR . NAME
    (18) varargslist -> fpdef COMMA STAR . NAME COMMA DOUBLESTAR NAME

    NAME            shift and go to state 469


state 391

    (40) varargslist_star -> COMMA fpdef .
    (41) varargslist_star -> COMMA fpdef . EQUAL test

    COMMA           reduce using rule 40 (varargslist_star -> COMMA fpdef .)
    COLON           reduce using rule 40 (varargslist_star -> COMMA fpdef .)
    RPAR            reduce using rule 40 (varargslist_star -> COMMA fpdef .)
    EQUAL           shift and go to state 470


state 392

    (19) varargslist -> fpdef COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 471


state 393

    (301) lambdef -> LAMBDA varargslist COLON test .

    COMMA           reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    RSQB            reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    COLON           reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    PLUSEQUAL       reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    MINEQUAL        reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    STAREQUAL       reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    SLASHEQUAL      reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    PERCENTEQUAL    reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    AMPEREQUAL      reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    VBAREQUAL       reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    CIRCUMFLEXEQUAL reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    LEFTSHIFTEQUAL  reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    RIGHTSHIFTEQUAL reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    DOUBLESTAREQUAL reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    DOUBLESLASHEQUAL reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    EQUAL           reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    NEWLINE         reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    SEMI            reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    FOR             reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    RPAR            reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    RBRACE          reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    AS              reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)
    BACKQUOTE       reduce using rule 301 (lambdef -> LAMBDA varargslist COLON test .)


state 394

    (115) raise_stmt -> RAISE test COMMA test .
    (116) raise_stmt -> RAISE test COMMA test . COMMA test

    NEWLINE         reduce using rule 115 (raise_stmt -> RAISE test COMMA test .)
    SEMI            reduce using rule 115 (raise_stmt -> RAISE test COMMA test .)
    COMMA           shift and go to state 472


state 395

    (151) global_stmt_star -> COMMA NAME .

    COMMA           reduce using rule 151 (global_stmt_star -> COMMA NAME .)
    NEWLINE         reduce using rule 151 (global_stmt_star -> COMMA NAME .)
    SEMI            reduce using rule 151 (global_stmt_star -> COMMA NAME .)


state 396

    (152) global_stmt_star -> global_stmt_star COMMA . NAME

    NAME            shift and go to state 473


state 397

    (171) while_stmt -> WHILE test COLON suite .
    (172) while_stmt -> WHILE test COLON suite . ELSE COLON suite

    ENDMARKER       reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    NEWLINE         reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    TRY             reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    WITH            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    CLASS           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    DEL             reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    PASS            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    GLOBAL          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    EXEC            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    ASSERT          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    BREAK           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    CONTINUE        reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    RAISE           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    IMPORT          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    FROM            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    YIELD           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    AT              reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    LAMBDA          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    NOT             reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    PLUS            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    MINUS           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    TILDE           reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    LPAR            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    LSQB            reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    LBRACE          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    BACKQUOTE       reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    DEDENT          reduce using rule 171 (while_stmt -> WHILE test COLON suite .)
    ELSE            shift and go to state 474


state 398

    (232) expr_star -> expr_star VBAR xor_expr .

    VBAR            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    LESS            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    GREATER         reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    EQEQUAL         reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    GREATEREQUAL    reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    LESSEQUAL       reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    NOTEQUAL        reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    IN              reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    IS              reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    NOT             reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    AND             reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    OR              reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    IF              reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    COMMA           reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    PLUSEQUAL       reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    MINEQUAL        reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    STAREQUAL       reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    SLASHEQUAL      reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    PERCENTEQUAL    reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    AMPEREQUAL      reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    VBAREQUAL       reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    CIRCUMFLEXEQUAL reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    LEFTSHIFTEQUAL  reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    RIGHTSHIFTEQUAL reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    DOUBLESTAREQUAL reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    DOUBLESLASHEQUAL reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    EQUAL           reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    NEWLINE         reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    SEMI            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    FOR             reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    RPAR            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    COLON           reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    AS              reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    BACKQUOTE       reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    RSQB            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    ELSE            reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)
    RBRACE          reduce using rule 232 (expr_star -> expr_star VBAR xor_expr .)


state 399

    (362) list_for -> FOR exprlist . IN testlist_safe
    (363) list_for -> FOR exprlist . IN testlist_safe list_iter

    IN              shift and go to state 475


state 400

    (291) listmaker_star -> COMMA test .

    COMMA           reduce using rule 291 (listmaker_star -> COMMA test .)
    RSQB            reduce using rule 291 (listmaker_star -> COMMA test .)


state 401

    (290) listmaker -> test listmaker_star COMMA .
    (292) listmaker_star -> listmaker_star COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RSQB            reduce using rule 290 (listmaker -> test listmaker_star COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 476
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 402

    (69) expr_stmt -> NAME NAME EQUAL yield_expr .

    NEWLINE         reduce using rule 69 (expr_stmt -> NAME NAME EQUAL yield_expr .)
    SEMI            reduce using rule 69 (expr_stmt -> NAME NAME EQUAL yield_expr .)


state 403

    (70) expr_stmt -> NAME NAME EQUAL testlist .

    NEWLINE         reduce using rule 70 (expr_stmt -> NAME NAME EQUAL testlist .)
    SEMI            reduce using rule 70 (expr_stmt -> NAME NAME EQUAL testlist .)


state 404

    (157) assert_stmt -> ASSERT test COMMA test .

    NEWLINE         reduce using rule 157 (assert_stmt -> ASSERT test COMMA test .)
    SEMI            reduce using rule 157 (assert_stmt -> ASSERT test COMMA test .)


state 405

    (245) shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .

    LEFTSHIFT       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    RIGHTSHIFT      reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    AMPER           reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    CIRCUMFLEX      reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    VBAR            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    LESS            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    GREATER         reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    EQEQUAL         reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    GREATEREQUAL    reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    LESSEQUAL       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    NOTEQUAL        reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    IN              reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    IS              reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    NOT             reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    AND             reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    OR              reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    IF              reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    COMMA           reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    PLUSEQUAL       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    MINEQUAL        reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    STAREQUAL       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    SLASHEQUAL      reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    PERCENTEQUAL    reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    AMPEREQUAL      reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    VBAREQUAL       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    CIRCUMFLEXEQUAL reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    LEFTSHIFTEQUAL  reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    RIGHTSHIFTEQUAL reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    DOUBLESTAREQUAL reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    DOUBLESLASHEQUAL reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    EQUAL           reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    NEWLINE         reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    SEMI            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    FOR             reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    RPAR            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    COLON           reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    AS              reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    BACKQUOTE       reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    RSQB            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    ELSE            reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)
    RBRACE          reduce using rule 245 (shift_expr_star -> shift_expr_star LEFTSHIFT arith_expr .)


state 406

    (246) shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .

    LEFTSHIFT       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    RIGHTSHIFT      reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    AMPER           reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    CIRCUMFLEX      reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    VBAR            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    LESS            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    GREATER         reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    EQEQUAL         reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    GREATEREQUAL    reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    LESSEQUAL       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    NOTEQUAL        reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    IN              reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    IS              reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    NOT             reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    AND             reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    OR              reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    IF              reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    COMMA           reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    PLUSEQUAL       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    MINEQUAL        reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    STAREQUAL       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    SLASHEQUAL      reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    PERCENTEQUAL    reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    AMPEREQUAL      reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    VBAREQUAL       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    CIRCUMFLEXEQUAL reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    LEFTSHIFTEQUAL  reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    RIGHTSHIFTEQUAL reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    DOUBLESTAREQUAL reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    DOUBLESLASHEQUAL reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    EQUAL           reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    NEWLINE         reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    SEMI            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    FOR             reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    RPAR            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    COLON           reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    AS              reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    BACKQUOTE       reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    RSQB            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    ELSE            reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)
    RBRACE          reduce using rule 246 (shift_expr_star -> shift_expr_star RIGHTSHIFT arith_expr .)


state 407

    (212) and_test_star -> and_test_star AND not_test .

    AND             reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    OR              reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    IF              reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    COMMA           reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    PLUSEQUAL       reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    MINEQUAL        reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    STAREQUAL       reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    SLASHEQUAL      reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    PERCENTEQUAL    reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    AMPEREQUAL      reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    VBAREQUAL       reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    CIRCUMFLEXEQUAL reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    LEFTSHIFTEQUAL  reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    RIGHTSHIFTEQUAL reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    DOUBLESTAREQUAL reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    DOUBLESLASHEQUAL reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    EQUAL           reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    NEWLINE         reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    SEMI            reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    FOR             reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    RPAR            reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    COLON           reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    AS              reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    BACKQUOTE       reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    RSQB            reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    ELSE            reduce using rule 212 (and_test_star -> and_test_star AND not_test .)
    RBRACE          reduce using rule 212 (and_test_star -> and_test_star AND not_test .)


state 408

    (335) testlist_star -> testlist_star COMMA test .

    COMMA           reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    PLUSEQUAL       reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    MINEQUAL        reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    STAREQUAL       reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    SLASHEQUAL      reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    PERCENTEQUAL    reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    AMPEREQUAL      reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    VBAREQUAL       reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    CIRCUMFLEXEQUAL reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    LEFTSHIFTEQUAL  reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    RIGHTSHIFTEQUAL reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    DOUBLESTAREQUAL reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    DOUBLESLASHEQUAL reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    EQUAL           reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    NEWLINE         reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    SEMI            reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    RPAR            reduce using rule 335 (testlist_star -> testlist_star COMMA test .)
    COLON           reduce using rule 335 (testlist_star -> testlist_star COMMA test .)


state 409

    (343) classdef -> CLASS NAME LPAR RPAR . COLON suite

    COLON           shift and go to state 477


state 410

    (344) classdef -> CLASS NAME LPAR testlist . RPAR COLON suite

    RPAR            shift and go to state 478


state 411

    (342) classdef -> CLASS NAME COLON suite .

    ENDMARKER       reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    NEWLINE         reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    IF              reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    WHILE           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    FOR             reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    TRY             reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    WITH            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    DEF             reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    CLASS           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    NAME            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    PRINT           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    DEL             reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    PASS            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    GLOBAL          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    EXEC            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    ASSERT          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    BREAK           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    CONTINUE        reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    RETURN          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    RAISE           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    IMPORT          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    FROM            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    YIELD           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    AT              reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    LAMBDA          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    NOT             reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    PLUS            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    MINUS           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    TILDE           reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    LPAR            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    LSQB            reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    LBRACE          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    BACKQUOTE       reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    NUMBER          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    STRING          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)
    DEDENT          reduce using rule 342 (classdef -> CLASS NAME COLON suite .)


state 412

    (8) decorator -> AT dotted_name LPAR RPAR . NEWLINE

    NEWLINE         shift and go to state 479


state 413

    (9) decorator -> AT dotted_name LPAR arglist . RPAR NEWLINE

    RPAR            shift and go to state 480


state 414

    (165) if_stmt -> IF test COLON suite .
    (166) if_stmt -> IF test COLON suite . ELSE COLON suite
    (167) if_stmt -> IF test COLON suite . if_stmt_star
    (168) if_stmt -> IF test COLON suite . if_stmt_star ELSE COLON suite
    (169) if_stmt_star -> . ELIF test COLON suite
    (170) if_stmt_star -> . if_stmt_star ELIF test COLON suite

    ENDMARKER       reduce using rule 165 (if_stmt -> IF test COLON suite .)
    NEWLINE         reduce using rule 165 (if_stmt -> IF test COLON suite .)
    IF              reduce using rule 165 (if_stmt -> IF test COLON suite .)
    WHILE           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    FOR             reduce using rule 165 (if_stmt -> IF test COLON suite .)
    TRY             reduce using rule 165 (if_stmt -> IF test COLON suite .)
    WITH            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    DEF             reduce using rule 165 (if_stmt -> IF test COLON suite .)
    CLASS           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    NAME            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    PRINT           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    DEL             reduce using rule 165 (if_stmt -> IF test COLON suite .)
    PASS            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    GLOBAL          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    EXEC            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    ASSERT          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    BREAK           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    CONTINUE        reduce using rule 165 (if_stmt -> IF test COLON suite .)
    RETURN          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    RAISE           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    IMPORT          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    FROM            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    YIELD           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    AT              reduce using rule 165 (if_stmt -> IF test COLON suite .)
    LAMBDA          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    NOT             reduce using rule 165 (if_stmt -> IF test COLON suite .)
    PLUS            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    MINUS           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    TILDE           reduce using rule 165 (if_stmt -> IF test COLON suite .)
    LPAR            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    LSQB            reduce using rule 165 (if_stmt -> IF test COLON suite .)
    LBRACE          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    BACKQUOTE       reduce using rule 165 (if_stmt -> IF test COLON suite .)
    NUMBER          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    STRING          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    DEDENT          reduce using rule 165 (if_stmt -> IF test COLON suite .)
    ELSE            shift and go to state 483
    ELIF            shift and go to state 482

    if_stmt_star                   shift and go to state 481

state 415

    (135) import_as_names -> import_as_name .
    (136) import_as_names -> import_as_name . COMMA
    (137) import_as_names -> import_as_name . import_as_names_star
    (138) import_as_names -> import_as_name . import_as_names_star COMMA
    (139) import_as_names_star -> . COMMA import_as_name
    (140) import_as_names_star -> . import_as_names_star COMMA import_as_name

    RPAR            reduce using rule 135 (import_as_names -> import_as_name .)
    NEWLINE         reduce using rule 135 (import_as_names -> import_as_name .)
    SEMI            reduce using rule 135 (import_as_names -> import_as_name .)
    COMMA           shift and go to state 484

    import_as_names_star           shift and go to state 485

state 416

    (120) import_from -> FROM dotted_name IMPORT STAR .

    NEWLINE         reduce using rule 120 (import_from -> FROM dotted_name IMPORT STAR .)
    SEMI            reduce using rule 120 (import_from -> FROM dotted_name IMPORT STAR .)


state 417

    (131) import_as_name -> NAME .
    (132) import_as_name -> NAME . AS NAME

    COMMA           reduce using rule 131 (import_as_name -> NAME .)
    NEWLINE         reduce using rule 131 (import_as_name -> NAME .)
    SEMI            reduce using rule 131 (import_as_name -> NAME .)
    RPAR            reduce using rule 131 (import_as_name -> NAME .)
    AS              shift and go to state 486


state 418

    (121) import_from -> FROM dotted_name IMPORT LPAR . import_as_names RPAR
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    NAME            shift and go to state 417

    import_as_names                shift and go to state 487
    import_as_name                 shift and go to state 415

state 419

    (122) import_from -> FROM dotted_name IMPORT import_as_names .

    NEWLINE         reduce using rule 122 (import_from -> FROM dotted_name IMPORT import_as_names .)
    SEMI            reduce using rule 122 (import_from -> FROM dotted_name IMPORT import_as_names .)


state 420

    (123) import_from -> FROM import_from_plus dotted_name IMPORT . STAR
    (124) import_from -> FROM import_from_plus dotted_name IMPORT . LPAR import_as_names RPAR
    (125) import_from -> FROM import_from_plus dotted_name IMPORT . import_as_names
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    STAR            shift and go to state 489
    LPAR            shift and go to state 488
    NAME            shift and go to state 417

    import_as_names                shift and go to state 490
    import_as_name                 shift and go to state 415

state 421

    (127) import_from -> FROM import_from_plus IMPORT LPAR . import_as_names RPAR
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    NAME            shift and go to state 417

    import_as_names                shift and go to state 491
    import_as_name                 shift and go to state 415

state 422

    (126) import_from -> FROM import_from_plus IMPORT STAR .

    NEWLINE         reduce using rule 126 (import_from -> FROM import_from_plus IMPORT STAR .)
    SEMI            reduce using rule 126 (import_from -> FROM import_from_plus IMPORT STAR .)


state 423

    (128) import_from -> FROM import_from_plus IMPORT import_as_names .

    NEWLINE         reduce using rule 128 (import_from -> FROM import_from_plus IMPORT import_as_names .)
    SEMI            reduce using rule 128 (import_from -> FROM import_from_plus IMPORT import_as_names .)


state 424

    (299) testlist_gexp_star -> testlist_gexp_star COMMA test .

    COMMA           reduce using rule 299 (testlist_gexp_star -> testlist_gexp_star COMMA test .)
    RPAR            reduce using rule 299 (testlist_gexp_star -> testlist_gexp_star COMMA test .)


state 425

    (368) gen_for -> FOR exprlist IN . or_test
    (369) gen_for -> FOR exprlist IN . or_test gen_iter
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 492

state 426

    (183) with_stmt -> WITH test with_var COLON suite .

    ENDMARKER       reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    NEWLINE         reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    IF              reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    WHILE           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    FOR             reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    TRY             reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    WITH            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    DEF             reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    CLASS           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    NAME            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    PRINT           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    DEL             reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    PASS            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    GLOBAL          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    EXEC            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    ASSERT          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    BREAK           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    CONTINUE        reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    RETURN          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    RAISE           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    IMPORT          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    FROM            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    YIELD           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    AT              reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    LAMBDA          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    NOT             reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    PLUS            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    MINUS           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    TILDE           reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    LPAR            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    LSQB            reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    LBRACE          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    BACKQUOTE       reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    NUMBER          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    STRING          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)
    DEDENT          reduce using rule 183 (with_stmt -> WITH test with_var COLON suite .)


state 427

    (148) dotted_name_star -> dotted_name_star DOT NAME .

    DOT             reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    AS              reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    COMMA           reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    NEWLINE         reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    SEMI            reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    LPAR            reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)
    IMPORT          reduce using rule 148 (dotted_name_star -> dotted_name_star DOT NAME .)


state 428

    (144) dotted_as_names_star -> dotted_as_names_star COMMA dotted_as_name .

    COMMA           reduce using rule 144 (dotted_as_names_star -> dotted_as_names_star COMMA dotted_as_name .)
    NEWLINE         reduce using rule 144 (dotted_as_names_star -> dotted_as_names_star COMMA dotted_as_name .)
    SEMI            reduce using rule 144 (dotted_as_names_star -> dotted_as_names_star COMMA dotted_as_name .)


state 429

    (155) exec_stmt -> EXEC expr IN test COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 493
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 430

    (203) test -> or_test IF or_test ELSE test .

    COLON           reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    COMMA           reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    RSQB            reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    EQUAL           reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    NEWLINE         reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    SEMI            reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    PLUSEQUAL       reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    MINEQUAL        reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    STAREQUAL       reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    SLASHEQUAL      reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    PERCENTEQUAL    reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    AMPEREQUAL      reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    VBAREQUAL       reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    CIRCUMFLEXEQUAL reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    LEFTSHIFTEQUAL  reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    RIGHTSHIFTEQUAL reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    DOUBLESTAREQUAL reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    DOUBLESLASHEQUAL reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    RPAR            reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    AS              reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    FOR             reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    BACKQUOTE       reduce using rule 203 (test -> or_test IF or_test ELSE test .)
    RBRACE          reduce using rule 203 (test -> or_test IF or_test ELSE test .)


state 431

    (375) testlist1_star -> testlist1_star COMMA test .

    COMMA           reduce using rule 375 (testlist1_star -> testlist1_star COMMA test .)
    BACKQUOTE       reduce using rule 375 (testlist1_star -> testlist1_star COMMA test .)


state 432

    (329) exprlist_star -> exprlist_star COMMA expr .

    COMMA           reduce using rule 329 (exprlist_star -> exprlist_star COMMA expr .)
    NEWLINE         reduce using rule 329 (exprlist_star -> exprlist_star COMMA expr .)
    SEMI            reduce using rule 329 (exprlist_star -> exprlist_star COMMA expr .)
    IN              reduce using rule 329 (exprlist_star -> exprlist_star COMMA expr .)


state 433

    (100) print_stmt_plus -> print_stmt_plus COMMA test .

    COMMA           reduce using rule 100 (print_stmt_plus -> print_stmt_plus COMMA test .)
    NEWLINE         reduce using rule 100 (print_stmt_plus -> print_stmt_plus COMMA test .)
    SEMI            reduce using rule 100 (print_stmt_plus -> print_stmt_plus COMMA test .)


state 434

    (98) print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus COMMA .
    (100) print_stmt_plus -> print_stmt_plus COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         reduce using rule 98 (print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus COMMA .)
    SEMI            reduce using rule 98 (print_stmt -> PRINT RIGHTSHIFT test print_stmt_plus COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 433
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 435

    (16) parameters -> LPAR varargslist RPAR .

    COLON           reduce using rule 16 (parameters -> LPAR varargslist RPAR .)


state 436

    (13) funcdef -> DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    TRY             reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    WITH            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    CLASS           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    DEL             reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    PASS            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    GLOBAL          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    EXEC            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    ASSERT          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    BREAK           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    CONTINUE        reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    RAISE           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    IMPORT          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    FROM            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    YIELD           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    AT              reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    LAMBDA          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    NOT             reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    TILDE           reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    LPAR            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    LSQB            reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    LBRACE          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    BACKQUOTE       reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 13 (funcdef -> DEF NAME parameters COLON suite .)


state 437

    (14) funcdef -> decorators DEF NAME parameters COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 494
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    import_name                    shift and go to state 76
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    expr                           shift and go to state 27
    yield_stmt                     shift and go to state 69

state 438

    (173) for_stmt -> FOR exprlist IN testlist COLON . suite
    (174) for_stmt -> FOR exprlist IN testlist COLON . suite ELSE COLON suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 495
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 439

    (190) suite -> NEWLINE INDENT suite_plus . DEDENT
    (192) suite_plus -> suite_plus . stmt
    (52) stmt -> . simple_stmt
    (53) stmt -> . compound_stmt
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (158) compound_stmt -> . if_stmt
    (159) compound_stmt -> . while_stmt
    (160) compound_stmt -> . for_stmt
    (161) compound_stmt -> . try_stmt
    (162) compound_stmt -> . with_stmt
    (163) compound_stmt -> . funcdef
    (164) compound_stmt -> . classdef
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (165) if_stmt -> . IF test COLON suite
    (166) if_stmt -> . IF test COLON suite ELSE COLON suite
    (167) if_stmt -> . IF test COLON suite if_stmt_star
    (168) if_stmt -> . IF test COLON suite if_stmt_star ELSE COLON suite
    (171) while_stmt -> . WHILE test COLON suite
    (172) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (173) for_stmt -> . FOR exprlist IN testlist COLON suite
    (174) for_stmt -> . FOR exprlist IN testlist COLON suite ELSE COLON suite
    (175) try_stmt -> . TRY COLON suite try_stmt_plus
    (176) try_stmt -> . TRY COLON suite try_stmt_plus FINALLY COLON suite
    (177) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite
    (178) try_stmt -> . TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite
    (179) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (182) with_stmt -> . WITH test COLON suite
    (183) with_stmt -> . WITH test with_var COLON suite
    (13) funcdef -> . DEF NAME parameters COLON suite
    (14) funcdef -> . decorators DEF NAME parameters COLON suite
    (342) classdef -> . CLASS NAME COLON suite
    (343) classdef -> . CLASS NAME LPAR RPAR COLON suite
    (344) classdef -> . CLASS NAME LPAR testlist RPAR COLON suite
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (10) decorators -> . decorators_plus
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (11) decorators_plus -> . decorator
    (12) decorators_plus -> . decorators_plus decorator
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (7) decorator -> . AT dotted_name NEWLINE
    (8) decorator -> . AT dotted_name LPAR RPAR NEWLINE
    (9) decorator -> . AT dotted_name LPAR arglist RPAR NEWLINE
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    DEDENT          shift and go to state 496
    IF              shift and go to state 81
    WHILE           shift and go to state 54
    FOR             shift and go to state 39
    TRY             shift and go to state 41
    WITH            shift and go to state 7
    DEF             shift and go to state 31
    CLASS           shift and go to state 77
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    AT              shift and go to state 80
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom_plus                      shift and go to state 57
    try_stmt                       shift and go to state 6
    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    or_test                        shift and go to state 25
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    decorator                      shift and go to state 22
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    atom                           shift and go to state 48
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 15
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    decorators                     shift and go to state 37
    compound_stmt                  shift and go to state 38
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 497
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 83
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    funcdef                        shift and go to state 5
    import_stmt                    shift and go to state 43
    pass_stmt                      shift and go to state 46
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    if_stmt                        shift and go to state 24
    decorators_plus                shift and go to state 47
    import_name                    shift and go to state 76
    raise_stmt                     shift and go to state 65
    del_stmt                       shift and go to state 84
    while_stmt                     shift and go to state 85
    expr                           shift and go to state 27
    with_stmt                      shift and go to state 26
    xor_expr                       shift and go to state 59
    yield_stmt                     shift and go to state 69

state 440

    (191) suite_plus -> stmt .

    DEDENT          reduce using rule 191 (suite_plus -> stmt .)
    IF              reduce using rule 191 (suite_plus -> stmt .)
    WHILE           reduce using rule 191 (suite_plus -> stmt .)
    FOR             reduce using rule 191 (suite_plus -> stmt .)
    TRY             reduce using rule 191 (suite_plus -> stmt .)
    WITH            reduce using rule 191 (suite_plus -> stmt .)
    DEF             reduce using rule 191 (suite_plus -> stmt .)
    CLASS           reduce using rule 191 (suite_plus -> stmt .)
    NAME            reduce using rule 191 (suite_plus -> stmt .)
    PRINT           reduce using rule 191 (suite_plus -> stmt .)
    DEL             reduce using rule 191 (suite_plus -> stmt .)
    PASS            reduce using rule 191 (suite_plus -> stmt .)
    GLOBAL          reduce using rule 191 (suite_plus -> stmt .)
    EXEC            reduce using rule 191 (suite_plus -> stmt .)
    ASSERT          reduce using rule 191 (suite_plus -> stmt .)
    BREAK           reduce using rule 191 (suite_plus -> stmt .)
    CONTINUE        reduce using rule 191 (suite_plus -> stmt .)
    RETURN          reduce using rule 191 (suite_plus -> stmt .)
    RAISE           reduce using rule 191 (suite_plus -> stmt .)
    IMPORT          reduce using rule 191 (suite_plus -> stmt .)
    FROM            reduce using rule 191 (suite_plus -> stmt .)
    YIELD           reduce using rule 191 (suite_plus -> stmt .)
    AT              reduce using rule 191 (suite_plus -> stmt .)
    LAMBDA          reduce using rule 191 (suite_plus -> stmt .)
    NOT             reduce using rule 191 (suite_plus -> stmt .)
    PLUS            reduce using rule 191 (suite_plus -> stmt .)
    MINUS           reduce using rule 191 (suite_plus -> stmt .)
    TILDE           reduce using rule 191 (suite_plus -> stmt .)
    LPAR            reduce using rule 191 (suite_plus -> stmt .)
    LSQB            reduce using rule 191 (suite_plus -> stmt .)
    LBRACE          reduce using rule 191 (suite_plus -> stmt .)
    BACKQUOTE       reduce using rule 191 (suite_plus -> stmt .)
    NUMBER          reduce using rule 191 (suite_plus -> stmt .)
    STRING          reduce using rule 191 (suite_plus -> stmt .)


state 441

    (180) try_stmt_plus -> except_clause COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 498
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 442

    (186) except_clause -> EXCEPT test .
    (187) except_clause -> EXCEPT test . AS test
    (188) except_clause -> EXCEPT test . COMMA test

    COLON           reduce using rule 186 (except_clause -> EXCEPT test .)
    AS              shift and go to state 499
    COMMA           shift and go to state 500


state 443

    (179) try_stmt -> TRY COLON suite FINALLY COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 501
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 444

    (181) try_stmt_plus -> try_stmt_plus except_clause . COLON suite

    COLON           shift and go to state 502


state 445

    (177) try_stmt -> TRY COLON suite try_stmt_plus ELSE . COLON suite
    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE . COLON suite FINALLY COLON suite

    COLON           shift and go to state 503


state 446

    (176) try_stmt -> TRY COLON suite try_stmt_plus FINALLY . COLON suite

    COLON           shift and go to state 504


state 447

    (337) dictmaker -> test COLON test COMMA .
    (340) dictmaker_star -> COMMA . test COLON test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RBRACE          reduce using rule 337 (dictmaker -> test COLON test COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 505
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 448

    (338) dictmaker -> test COLON test dictmaker_star .
    (339) dictmaker -> test COLON test dictmaker_star . COMMA
    (341) dictmaker_star -> dictmaker_star . COMMA test COLON test

    RBRACE          reduce using rule 338 (dictmaker -> test COLON test dictmaker_star .)
    COMMA           shift and go to state 506


state 449

    (348) arglist -> STAR test COMMA . DOUBLESTAR test

    DOUBLESTAR      shift and go to state 507


state 450

    (359) argument -> test EQUAL test .

    COMMA           reduce using rule 359 (argument -> test EQUAL test .)
    RPAR            reduce using rule 359 (argument -> test EQUAL test .)


state 451

    (352) arglist -> arglist_star STAR test .
    (353) arglist -> arglist_star STAR test . COMMA DOUBLESTAR test

    RPAR            reduce using rule 352 (arglist -> arglist_star STAR test .)
    COMMA           shift and go to state 508


state 452

    (351) arglist -> arglist_star argument COMMA .
    (356) arglist_star -> arglist_star argument COMMA .

    RPAR            reduce using rule 351 (arglist -> arglist_star argument COMMA .)
    STAR            reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    DOUBLESTAR      reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    LAMBDA          reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    NOT             reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    PLUS            reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    MINUS           reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    TILDE           reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    LPAR            reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    LSQB            reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    LBRACE          reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    BACKQUOTE       reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    NAME            reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    NUMBER          reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)
    STRING          reduce using rule 356 (arglist_star -> arglist_star argument COMMA .)


state 453

    (354) arglist -> arglist_star DOUBLESTAR test .

    RPAR            reduce using rule 354 (arglist -> arglist_star DOUBLESTAR test .)


state 454

    (323) sliceop -> COLON test .

    COMMA           reduce using rule 323 (sliceop -> COLON test .)
    RSQB            reduce using rule 323 (sliceop -> COLON test .)


state 455

    (317) subscript -> COLON test sliceop .

    COMMA           reduce using rule 317 (subscript -> COLON test sliceop .)
    RSQB            reduce using rule 317 (subscript -> COLON test sliceop .)


state 456

    (312) subscript -> DOT DOT DOT .

    COMMA           reduce using rule 312 (subscript -> DOT DOT DOT .)
    RSQB            reduce using rule 312 (subscript -> DOT DOT DOT .)


state 457

    (320) subscript -> test COLON test .
    (321) subscript -> test COLON test . sliceop
    (322) sliceop -> . COLON
    (323) sliceop -> . COLON test

    COMMA           reduce using rule 320 (subscript -> test COLON test .)
    RSQB            reduce using rule 320 (subscript -> test COLON test .)
    COLON           shift and go to state 376

    sliceop                        shift and go to state 509

state 458

    (319) subscript -> test COLON sliceop .

    COMMA           reduce using rule 319 (subscript -> test COLON sliceop .)
    RSQB            reduce using rule 319 (subscript -> test COLON sliceop .)


state 459

    (309) subscriptlist -> subscript subscriptlist_star COMMA .
    (311) subscriptlist_star -> subscriptlist_star COMMA . subscript
    (312) subscript -> . DOT DOT DOT
    (313) subscript -> . test
    (314) subscript -> . COLON
    (315) subscript -> . COLON sliceop
    (316) subscript -> . COLON test
    (317) subscript -> . COLON test sliceop
    (318) subscript -> . test COLON
    (319) subscript -> . test COLON sliceop
    (320) subscript -> . test COLON test
    (321) subscript -> . test COLON test sliceop
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RSQB            reduce using rule 309 (subscriptlist -> subscript subscriptlist_star COMMA .)
    DOT             shift and go to state 277
    COLON           shift and go to state 276
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 278
    subscript                      shift and go to state 510
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 460

    (310) subscriptlist_star -> COMMA subscript .

    COMMA           reduce using rule 310 (subscriptlist_star -> COMMA subscript .)
    RSQB            reduce using rule 310 (subscriptlist_star -> COMMA subscript .)


state 461

    (50) fplist_star -> COMMA fpdef .

    COMMA           reduce using rule 50 (fplist_star -> COMMA fpdef .)
    RPAR            reduce using rule 50 (fplist_star -> COMMA fpdef .)


state 462

    (49) fplist -> fpdef fplist_star COMMA .
    (51) fplist_star -> fplist_star COMMA . fpdef
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    RPAR            reduce using rule 49 (fplist -> fpdef fplist_star COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 511

state 463

    (38) varargslist -> STAR NAME COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 512


state 464

    (22) varargslist -> fpdef varargslist_star COMMA STAR . NAME
    (23) varargslist -> fpdef varargslist_star COMMA STAR . NAME COMMA DOUBLESTAR NAME

    NAME            shift and go to state 513


state 465

    (42) varargslist_star -> varargslist_star COMMA fpdef .
    (43) varargslist_star -> varargslist_star COMMA fpdef . EQUAL test

    COMMA           reduce using rule 42 (varargslist_star -> varargslist_star COMMA fpdef .)
    COLON           reduce using rule 42 (varargslist_star -> varargslist_star COMMA fpdef .)
    RPAR            reduce using rule 42 (varargslist_star -> varargslist_star COMMA fpdef .)
    EQUAL           shift and go to state 514


state 466

    (24) varargslist -> fpdef varargslist_star COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 515


state 467

    (32) varargslist -> fpdef EQUAL test varargslist_star . COMMA STAR NAME
    (33) varargslist -> fpdef EQUAL test varargslist_star . COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> fpdef EQUAL test varargslist_star . COMMA DOUBLESTAR NAME
    (35) varargslist -> fpdef EQUAL test varargslist_star .
    (36) varargslist -> fpdef EQUAL test varargslist_star . COMMA
    (42) varargslist_star -> varargslist_star . COMMA fpdef
    (43) varargslist_star -> varargslist_star . COMMA fpdef EQUAL test

    COMMA           shift and go to state 516
    COLON           reduce using rule 35 (varargslist -> fpdef EQUAL test varargslist_star .)
    RPAR            reduce using rule 35 (varargslist -> fpdef EQUAL test varargslist_star .)


state 468

    (27) varargslist -> fpdef EQUAL test COMMA . STAR NAME
    (28) varargslist -> fpdef EQUAL test COMMA . STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> fpdef EQUAL test COMMA . DOUBLESTAR NAME
    (31) varargslist -> fpdef EQUAL test COMMA .
    (40) varargslist_star -> COMMA . fpdef
    (41) varargslist_star -> COMMA . fpdef EQUAL test
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    STAR            shift and go to state 517
    DOUBLESTAR      shift and go to state 518
    COLON           reduce using rule 31 (varargslist -> fpdef EQUAL test COMMA .)
    RPAR            reduce using rule 31 (varargslist -> fpdef EQUAL test COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 391

state 469

    (17) varargslist -> fpdef COMMA STAR NAME .
    (18) varargslist -> fpdef COMMA STAR NAME . COMMA DOUBLESTAR NAME

    COLON           reduce using rule 17 (varargslist -> fpdef COMMA STAR NAME .)
    RPAR            reduce using rule 17 (varargslist -> fpdef COMMA STAR NAME .)
    COMMA           shift and go to state 519


state 470

    (41) varargslist_star -> COMMA fpdef EQUAL . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 520
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 471

    (19) varargslist -> fpdef COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 19 (varargslist -> fpdef COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 19 (varargslist -> fpdef COMMA DOUBLESTAR NAME .)


state 472

    (116) raise_stmt -> RAISE test COMMA test COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 521
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 473

    (152) global_stmt_star -> global_stmt_star COMMA NAME .

    COMMA           reduce using rule 152 (global_stmt_star -> global_stmt_star COMMA NAME .)
    NEWLINE         reduce using rule 152 (global_stmt_star -> global_stmt_star COMMA NAME .)
    SEMI            reduce using rule 152 (global_stmt_star -> global_stmt_star COMMA NAME .)


state 474

    (172) while_stmt -> WHILE test COLON suite ELSE . COLON suite

    COLON           shift and go to state 522


state 475

    (362) list_for -> FOR exprlist IN . testlist_safe
    (363) list_for -> FOR exprlist IN . testlist_safe list_iter
    (193) testlist_safe -> . old_test
    (194) testlist_safe -> . old_test testlist_safe_plus
    (195) testlist_safe -> . old_test testlist_safe_plus COMMA
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    old_test                       shift and go to state 524
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    testlist_safe                  shift and go to state 523
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 476

    (292) listmaker_star -> listmaker_star COMMA test .

    COMMA           reduce using rule 292 (listmaker_star -> listmaker_star COMMA test .)
    RSQB            reduce using rule 292 (listmaker_star -> listmaker_star COMMA test .)


state 477

    (343) classdef -> CLASS NAME LPAR RPAR COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 528
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 478

    (344) classdef -> CLASS NAME LPAR testlist RPAR . COLON suite

    COLON           shift and go to state 529


state 479

    (8) decorator -> AT dotted_name LPAR RPAR NEWLINE .

    AT              reduce using rule 8 (decorator -> AT dotted_name LPAR RPAR NEWLINE .)
    DEF             reduce using rule 8 (decorator -> AT dotted_name LPAR RPAR NEWLINE .)


state 480

    (9) decorator -> AT dotted_name LPAR arglist RPAR . NEWLINE

    NEWLINE         shift and go to state 530


state 481

    (167) if_stmt -> IF test COLON suite if_stmt_star .
    (168) if_stmt -> IF test COLON suite if_stmt_star . ELSE COLON suite
    (170) if_stmt_star -> if_stmt_star . ELIF test COLON suite

    ENDMARKER       reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    NEWLINE         reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    IF              reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    WHILE           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    FOR             reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    TRY             reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    WITH            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    DEF             reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    CLASS           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    NAME            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    PRINT           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    DEL             reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    PASS            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    GLOBAL          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    EXEC            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    ASSERT          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    BREAK           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    CONTINUE        reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    RETURN          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    RAISE           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    IMPORT          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    FROM            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    YIELD           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    AT              reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    LAMBDA          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    NOT             reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    PLUS            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    MINUS           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    TILDE           reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    LPAR            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    LSQB            reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    LBRACE          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    BACKQUOTE       reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    NUMBER          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    STRING          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    DEDENT          reduce using rule 167 (if_stmt -> IF test COLON suite if_stmt_star .)
    ELSE            shift and go to state 532
    ELIF            shift and go to state 531


state 482

    (169) if_stmt_star -> ELIF . test COLON suite
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 533
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 483

    (166) if_stmt -> IF test COLON suite ELSE . COLON suite

    COLON           shift and go to state 534


state 484

    (136) import_as_names -> import_as_name COMMA .
    (139) import_as_names_star -> COMMA . import_as_name
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    RPAR            reduce using rule 136 (import_as_names -> import_as_name COMMA .)
    NEWLINE         reduce using rule 136 (import_as_names -> import_as_name COMMA .)
    SEMI            reduce using rule 136 (import_as_names -> import_as_name COMMA .)
    NAME            shift and go to state 417

    import_as_name                 shift and go to state 535

state 485

    (137) import_as_names -> import_as_name import_as_names_star .
    (138) import_as_names -> import_as_name import_as_names_star . COMMA
    (140) import_as_names_star -> import_as_names_star . COMMA import_as_name

    RPAR            reduce using rule 137 (import_as_names -> import_as_name import_as_names_star .)
    NEWLINE         reduce using rule 137 (import_as_names -> import_as_name import_as_names_star .)
    SEMI            reduce using rule 137 (import_as_names -> import_as_name import_as_names_star .)
    COMMA           shift and go to state 536


state 486

    (132) import_as_name -> NAME AS . NAME

    NAME            shift and go to state 537


state 487

    (121) import_from -> FROM dotted_name IMPORT LPAR import_as_names . RPAR

    RPAR            shift and go to state 538


state 488

    (124) import_from -> FROM import_from_plus dotted_name IMPORT LPAR . import_as_names RPAR
    (135) import_as_names -> . import_as_name
    (136) import_as_names -> . import_as_name COMMA
    (137) import_as_names -> . import_as_name import_as_names_star
    (138) import_as_names -> . import_as_name import_as_names_star COMMA
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    NAME            shift and go to state 417

    import_as_names                shift and go to state 539
    import_as_name                 shift and go to state 415

state 489

    (123) import_from -> FROM import_from_plus dotted_name IMPORT STAR .

    NEWLINE         reduce using rule 123 (import_from -> FROM import_from_plus dotted_name IMPORT STAR .)
    SEMI            reduce using rule 123 (import_from -> FROM import_from_plus dotted_name IMPORT STAR .)


state 490

    (125) import_from -> FROM import_from_plus dotted_name IMPORT import_as_names .

    NEWLINE         reduce using rule 125 (import_from -> FROM import_from_plus dotted_name IMPORT import_as_names .)
    SEMI            reduce using rule 125 (import_from -> FROM import_from_plus dotted_name IMPORT import_as_names .)


state 491

    (127) import_from -> FROM import_from_plus IMPORT LPAR import_as_names . RPAR

    RPAR            shift and go to state 540


state 492

    (368) gen_for -> FOR exprlist IN or_test .
    (369) gen_for -> FOR exprlist IN or_test . gen_iter
    (366) gen_iter -> . gen_for
    (367) gen_iter -> . gen_if
    (368) gen_for -> . FOR exprlist IN or_test
    (369) gen_for -> . FOR exprlist IN or_test gen_iter
    (370) gen_if -> . IF old_test
    (371) gen_if -> . IF old_test gen_iter

    RPAR            reduce using rule 368 (gen_for -> FOR exprlist IN or_test .)
    COMMA           reduce using rule 368 (gen_for -> FOR exprlist IN or_test .)
    FOR             shift and go to state 203
    IF              shift and go to state 543

    gen_for                        shift and go to state 541
    gen_if                         shift and go to state 542
    gen_iter                       shift and go to state 544

state 493

    (155) exec_stmt -> EXEC expr IN test COMMA test .

    NEWLINE         reduce using rule 155 (exec_stmt -> EXEC expr IN test COMMA test .)
    SEMI            reduce using rule 155 (exec_stmt -> EXEC expr IN test COMMA test .)


state 494

    (14) funcdef -> decorators DEF NAME parameters COLON suite .

    ENDMARKER       reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    IF              reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    FOR             reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    TRY             reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    WITH            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    DEF             reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    CLASS           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    NAME            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    DEL             reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    PASS            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    GLOBAL          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    EXEC            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    ASSERT          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    BREAK           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    CONTINUE        reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    RAISE           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    IMPORT          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    FROM            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    YIELD           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    AT              reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    LAMBDA          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    NOT             reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    TILDE           reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    LPAR            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    LSQB            reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    LBRACE          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    BACKQUOTE       reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    STRING          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)
    DEDENT          reduce using rule 14 (funcdef -> decorators DEF NAME parameters COLON suite .)


state 495

    (173) for_stmt -> FOR exprlist IN testlist COLON suite .
    (174) for_stmt -> FOR exprlist IN testlist COLON suite . ELSE COLON suite

    DEDENT          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    IF              reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    WHILE           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    FOR             reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    TRY             reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    WITH            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    DEF             reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    CLASS           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    NAME            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    PRINT           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    DEL             reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    PASS            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    GLOBAL          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    EXEC            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    ASSERT          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    BREAK           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    CONTINUE        reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    RETURN          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    RAISE           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    IMPORT          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    FROM            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    YIELD           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    AT              reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    LAMBDA          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    NOT             reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    PLUS            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    MINUS           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    TILDE           reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    LPAR            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    LSQB            reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    LBRACE          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    BACKQUOTE       reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    NUMBER          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    STRING          reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    ENDMARKER       reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    NEWLINE         reduce using rule 173 (for_stmt -> FOR exprlist IN testlist COLON suite .)
    ELSE            shift and go to state 545


state 496

    (190) suite -> NEWLINE INDENT suite_plus DEDENT .

    ELSE            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    ENDMARKER       reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    NEWLINE         reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    IF              reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    WHILE           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    FOR             reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    TRY             reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    WITH            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    DEF             reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    CLASS           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    NAME            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    PRINT           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    DEL             reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    PASS            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    GLOBAL          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    EXEC            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    ASSERT          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    BREAK           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    CONTINUE        reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    RETURN          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    RAISE           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    IMPORT          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    FROM            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    YIELD           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    AT              reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    LAMBDA          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    NOT             reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    PLUS            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    MINUS           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    TILDE           reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    LPAR            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    LSQB            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    LBRACE          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    BACKQUOTE       reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    NUMBER          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    STRING          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    DEDENT          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    FINALLY         reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    EXCEPT          reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)
    ELIF            reduce using rule 190 (suite -> NEWLINE INDENT suite_plus DEDENT .)


state 497

    (192) suite_plus -> suite_plus stmt .

    DEDENT          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    IF              reduce using rule 192 (suite_plus -> suite_plus stmt .)
    WHILE           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    FOR             reduce using rule 192 (suite_plus -> suite_plus stmt .)
    TRY             reduce using rule 192 (suite_plus -> suite_plus stmt .)
    WITH            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    DEF             reduce using rule 192 (suite_plus -> suite_plus stmt .)
    CLASS           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    NAME            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    PRINT           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    DEL             reduce using rule 192 (suite_plus -> suite_plus stmt .)
    PASS            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    GLOBAL          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    EXEC            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    ASSERT          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    BREAK           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    CONTINUE        reduce using rule 192 (suite_plus -> suite_plus stmt .)
    RETURN          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    RAISE           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    IMPORT          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    FROM            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    YIELD           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    AT              reduce using rule 192 (suite_plus -> suite_plus stmt .)
    LAMBDA          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    NOT             reduce using rule 192 (suite_plus -> suite_plus stmt .)
    PLUS            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    MINUS           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    TILDE           reduce using rule 192 (suite_plus -> suite_plus stmt .)
    LPAR            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    LSQB            reduce using rule 192 (suite_plus -> suite_plus stmt .)
    LBRACE          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    BACKQUOTE       reduce using rule 192 (suite_plus -> suite_plus stmt .)
    NUMBER          reduce using rule 192 (suite_plus -> suite_plus stmt .)
    STRING          reduce using rule 192 (suite_plus -> suite_plus stmt .)


state 498

    (180) try_stmt_plus -> except_clause COLON suite .

    FINALLY         reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    ELSE            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    EXCEPT          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    ENDMARKER       reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    NEWLINE         reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    IF              reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    WHILE           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    FOR             reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    TRY             reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    WITH            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    DEF             reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    CLASS           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    NAME            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    PRINT           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    DEL             reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    PASS            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    GLOBAL          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    EXEC            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    ASSERT          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    BREAK           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    CONTINUE        reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    RETURN          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    RAISE           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    IMPORT          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    FROM            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    YIELD           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    AT              reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    LAMBDA          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    NOT             reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    PLUS            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    MINUS           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    TILDE           reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    LPAR            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    LSQB            reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    LBRACE          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    BACKQUOTE       reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    NUMBER          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    STRING          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)
    DEDENT          reduce using rule 180 (try_stmt_plus -> except_clause COLON suite .)


state 499

    (187) except_clause -> EXCEPT test AS . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 546
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 500

    (188) except_clause -> EXCEPT test COMMA . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 547
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 501

    (179) try_stmt -> TRY COLON suite FINALLY COLON suite .

    ENDMARKER       reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NEWLINE         reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    IF              reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    WHILE           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    FOR             reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    TRY             reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    WITH            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    DEF             reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    CLASS           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NAME            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PRINT           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    DEL             reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PASS            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    GLOBAL          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    EXEC            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    ASSERT          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    BREAK           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    CONTINUE        reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    RETURN          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    RAISE           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    IMPORT          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    FROM            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    YIELD           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    AT              reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LAMBDA          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NOT             reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PLUS            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    MINUS           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    TILDE           reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LPAR            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LSQB            reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LBRACE          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NUMBER          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    STRING          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    DEDENT          reduce using rule 179 (try_stmt -> TRY COLON suite FINALLY COLON suite .)


state 502

    (181) try_stmt_plus -> try_stmt_plus except_clause COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 548
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 503

    (177) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON . suite
    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON . suite FINALLY COLON suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 549
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 504

    (176) try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 550
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 505

    (340) dictmaker_star -> COMMA test . COLON test

    COLON           shift and go to state 551


state 506

    (339) dictmaker -> test COLON test dictmaker_star COMMA .
    (341) dictmaker_star -> dictmaker_star COMMA . test COLON test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    RBRACE          reduce using rule 339 (dictmaker -> test COLON test dictmaker_star COMMA .)
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 552
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 507

    (348) arglist -> STAR test COMMA DOUBLESTAR . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 553
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 508

    (353) arglist -> arglist_star STAR test COMMA . DOUBLESTAR test

    DOUBLESTAR      shift and go to state 554


state 509

    (321) subscript -> test COLON test sliceop .

    COMMA           reduce using rule 321 (subscript -> test COLON test sliceop .)
    RSQB            reduce using rule 321 (subscript -> test COLON test sliceop .)


state 510

    (311) subscriptlist_star -> subscriptlist_star COMMA subscript .

    COMMA           reduce using rule 311 (subscriptlist_star -> subscriptlist_star COMMA subscript .)
    RSQB            reduce using rule 311 (subscriptlist_star -> subscriptlist_star COMMA subscript .)


state 511

    (51) fplist_star -> fplist_star COMMA fpdef .

    COMMA           reduce using rule 51 (fplist_star -> fplist_star COMMA fpdef .)
    RPAR            reduce using rule 51 (fplist_star -> fplist_star COMMA fpdef .)


state 512

    (38) varargslist -> STAR NAME COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 38 (varargslist -> STAR NAME COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 38 (varargslist -> STAR NAME COMMA DOUBLESTAR NAME .)


state 513

    (22) varargslist -> fpdef varargslist_star COMMA STAR NAME .
    (23) varargslist -> fpdef varargslist_star COMMA STAR NAME . COMMA DOUBLESTAR NAME

    COLON           reduce using rule 22 (varargslist -> fpdef varargslist_star COMMA STAR NAME .)
    RPAR            reduce using rule 22 (varargslist -> fpdef varargslist_star COMMA STAR NAME .)
    COMMA           shift and go to state 555


state 514

    (43) varargslist_star -> varargslist_star COMMA fpdef EQUAL . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 556
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 515

    (24) varargslist -> fpdef varargslist_star COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 24 (varargslist -> fpdef varargslist_star COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 24 (varargslist -> fpdef varargslist_star COMMA DOUBLESTAR NAME .)


state 516

    (32) varargslist -> fpdef EQUAL test varargslist_star COMMA . STAR NAME
    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA . STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> fpdef EQUAL test varargslist_star COMMA . DOUBLESTAR NAME
    (36) varargslist -> fpdef EQUAL test varargslist_star COMMA .
    (42) varargslist_star -> varargslist_star COMMA . fpdef
    (43) varargslist_star -> varargslist_star COMMA . fpdef EQUAL test
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    STAR            shift and go to state 557
    DOUBLESTAR      shift and go to state 558
    COLON           reduce using rule 36 (varargslist -> fpdef EQUAL test varargslist_star COMMA .)
    RPAR            reduce using rule 36 (varargslist -> fpdef EQUAL test varargslist_star COMMA .)
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 465

state 517

    (27) varargslist -> fpdef EQUAL test COMMA STAR . NAME
    (28) varargslist -> fpdef EQUAL test COMMA STAR . NAME COMMA DOUBLESTAR NAME

    NAME            shift and go to state 559


state 518

    (29) varargslist -> fpdef EQUAL test COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 560


state 519

    (18) varargslist -> fpdef COMMA STAR NAME COMMA . DOUBLESTAR NAME

    DOUBLESTAR      shift and go to state 561


state 520

    (41) varargslist_star -> COMMA fpdef EQUAL test .

    COMMA           reduce using rule 41 (varargslist_star -> COMMA fpdef EQUAL test .)
    COLON           reduce using rule 41 (varargslist_star -> COMMA fpdef EQUAL test .)
    RPAR            reduce using rule 41 (varargslist_star -> COMMA fpdef EQUAL test .)


state 521

    (116) raise_stmt -> RAISE test COMMA test COMMA test .

    NEWLINE         reduce using rule 116 (raise_stmt -> RAISE test COMMA test COMMA test .)
    SEMI            reduce using rule 116 (raise_stmt -> RAISE test COMMA test COMMA test .)


state 522

    (172) while_stmt -> WHILE test COLON suite ELSE COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 562
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 523

    (362) list_for -> FOR exprlist IN testlist_safe .
    (363) list_for -> FOR exprlist IN testlist_safe . list_iter
    (360) list_iter -> . list_for
    (361) list_iter -> . list_if
    (362) list_for -> . FOR exprlist IN testlist_safe
    (363) list_for -> . FOR exprlist IN testlist_safe list_iter
    (364) list_if -> . IF old_test
    (365) list_if -> . IF old_test list_iter

    RSQB            reduce using rule 362 (list_for -> FOR exprlist IN testlist_safe .)
    FOR             shift and go to state 297
    IF              shift and go to state 566

    list_iter                      shift and go to state 563
    list_if                        shift and go to state 564
    list_for                       shift and go to state 565

state 524

    (193) testlist_safe -> old_test .
    (194) testlist_safe -> old_test . testlist_safe_plus
    (195) testlist_safe -> old_test . testlist_safe_plus COMMA
    (196) testlist_safe_plus -> . COMMA old_test
    (197) testlist_safe_plus -> . testlist_safe_plus COMMA old_test

    FOR             reduce using rule 193 (testlist_safe -> old_test .)
    IF              reduce using rule 193 (testlist_safe -> old_test .)
    RSQB            reduce using rule 193 (testlist_safe -> old_test .)
    COMMA           shift and go to state 568

    testlist_safe_plus             shift and go to state 567

state 525

    (199) old_test -> old_lambdef .

    FOR             reduce using rule 199 (old_test -> old_lambdef .)
    IF              reduce using rule 199 (old_test -> old_lambdef .)
    RSQB            reduce using rule 199 (old_test -> old_lambdef .)
    COMMA           reduce using rule 199 (old_test -> old_lambdef .)
    RPAR            reduce using rule 199 (old_test -> old_lambdef .)


state 526

    (198) old_test -> or_test .

    FOR             reduce using rule 198 (old_test -> or_test .)
    IF              reduce using rule 198 (old_test -> or_test .)
    RSQB            reduce using rule 198 (old_test -> or_test .)
    COMMA           reduce using rule 198 (old_test -> or_test .)
    RPAR            reduce using rule 198 (old_test -> or_test .)


state 527

    (200) old_lambdef -> LAMBDA . COLON old_test
    (201) old_lambdef -> LAMBDA . varargslist COLON old_test
    (17) varargslist -> . fpdef COMMA STAR NAME
    (18) varargslist -> . fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME
    (19) varargslist -> . fpdef COMMA DOUBLESTAR NAME
    (20) varargslist -> . fpdef
    (21) varargslist -> . fpdef COMMA
    (22) varargslist -> . fpdef varargslist_star COMMA STAR NAME
    (23) varargslist -> . fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (24) varargslist -> . fpdef varargslist_star COMMA DOUBLESTAR NAME
    (25) varargslist -> . fpdef varargslist_star
    (26) varargslist -> . fpdef varargslist_star COMMA
    (27) varargslist -> . fpdef EQUAL test COMMA STAR NAME
    (28) varargslist -> . fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME
    (29) varargslist -> . fpdef EQUAL test COMMA DOUBLESTAR NAME
    (30) varargslist -> . fpdef EQUAL test
    (31) varargslist -> . fpdef EQUAL test COMMA
    (32) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME
    (33) varargslist -> . fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME
    (34) varargslist -> . fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME
    (35) varargslist -> . fpdef EQUAL test varargslist_star
    (36) varargslist -> . fpdef EQUAL test varargslist_star COMMA
    (37) varargslist -> . STAR NAME
    (38) varargslist -> . STAR NAME COMMA DOUBLESTAR NAME
    (39) varargslist -> . DOUBLESTAR NAME
    (44) fpdef -> . NAME
    (45) fpdef -> . LPAR fplist RPAR

    COLON           shift and go to state 570
    STAR            shift and go to state 165
    DOUBLESTAR      shift and go to state 169
    NAME            shift and go to state 166
    LPAR            shift and go to state 164

    fpdef                          shift and go to state 167
    varargslist                    shift and go to state 569

state 528

    (343) classdef -> CLASS NAME LPAR RPAR COLON suite .

    ENDMARKER       reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    NEWLINE         reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    IF              reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    WHILE           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    FOR             reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    TRY             reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    WITH            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    DEF             reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    CLASS           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    NAME            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    PRINT           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    DEL             reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    PASS            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    GLOBAL          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    EXEC            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    ASSERT          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    BREAK           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    CONTINUE        reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    RETURN          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    RAISE           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    IMPORT          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    FROM            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    YIELD           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    AT              reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    LAMBDA          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    NOT             reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    PLUS            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    MINUS           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    TILDE           reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    LPAR            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    LSQB            reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    LBRACE          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    BACKQUOTE       reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    NUMBER          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    STRING          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)
    DEDENT          reduce using rule 343 (classdef -> CLASS NAME LPAR RPAR COLON suite .)


state 529

    (344) classdef -> CLASS NAME LPAR testlist RPAR COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 571
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 530

    (9) decorator -> AT dotted_name LPAR arglist RPAR NEWLINE .

    AT              reduce using rule 9 (decorator -> AT dotted_name LPAR arglist RPAR NEWLINE .)
    DEF             reduce using rule 9 (decorator -> AT dotted_name LPAR arglist RPAR NEWLINE .)


state 531

    (170) if_stmt_star -> if_stmt_star ELIF . test COLON suite
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    atom                           shift and go to state 48
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 572
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 532

    (168) if_stmt -> IF test COLON suite if_stmt_star ELSE . COLON suite

    COLON           shift and go to state 573


state 533

    (169) if_stmt_star -> ELIF test . COLON suite

    COLON           shift and go to state 574


state 534

    (166) if_stmt -> IF test COLON suite ELSE COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 575
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 535

    (139) import_as_names_star -> COMMA import_as_name .

    COMMA           reduce using rule 139 (import_as_names_star -> COMMA import_as_name .)
    NEWLINE         reduce using rule 139 (import_as_names_star -> COMMA import_as_name .)
    SEMI            reduce using rule 139 (import_as_names_star -> COMMA import_as_name .)
    RPAR            reduce using rule 139 (import_as_names_star -> COMMA import_as_name .)


state 536

    (138) import_as_names -> import_as_name import_as_names_star COMMA .
    (140) import_as_names_star -> import_as_names_star COMMA . import_as_name
    (131) import_as_name -> . NAME
    (132) import_as_name -> . NAME AS NAME

    RPAR            reduce using rule 138 (import_as_names -> import_as_name import_as_names_star COMMA .)
    NEWLINE         reduce using rule 138 (import_as_names -> import_as_name import_as_names_star COMMA .)
    SEMI            reduce using rule 138 (import_as_names -> import_as_name import_as_names_star COMMA .)
    NAME            shift and go to state 417

    import_as_name                 shift and go to state 576

state 537

    (132) import_as_name -> NAME AS NAME .

    COMMA           reduce using rule 132 (import_as_name -> NAME AS NAME .)
    NEWLINE         reduce using rule 132 (import_as_name -> NAME AS NAME .)
    SEMI            reduce using rule 132 (import_as_name -> NAME AS NAME .)
    RPAR            reduce using rule 132 (import_as_name -> NAME AS NAME .)


state 538

    (121) import_from -> FROM dotted_name IMPORT LPAR import_as_names RPAR .

    NEWLINE         reduce using rule 121 (import_from -> FROM dotted_name IMPORT LPAR import_as_names RPAR .)
    SEMI            reduce using rule 121 (import_from -> FROM dotted_name IMPORT LPAR import_as_names RPAR .)


state 539

    (124) import_from -> FROM import_from_plus dotted_name IMPORT LPAR import_as_names . RPAR

    RPAR            shift and go to state 577


state 540

    (127) import_from -> FROM import_from_plus IMPORT LPAR import_as_names RPAR .

    NEWLINE         reduce using rule 127 (import_from -> FROM import_from_plus IMPORT LPAR import_as_names RPAR .)
    SEMI            reduce using rule 127 (import_from -> FROM import_from_plus IMPORT LPAR import_as_names RPAR .)


state 541

    (366) gen_iter -> gen_for .

    RPAR            reduce using rule 366 (gen_iter -> gen_for .)
    COMMA           reduce using rule 366 (gen_iter -> gen_for .)


state 542

    (367) gen_iter -> gen_if .

    RPAR            reduce using rule 367 (gen_iter -> gen_if .)
    COMMA           reduce using rule 367 (gen_iter -> gen_if .)


state 543

    (370) gen_if -> IF . old_test
    (371) gen_if -> IF . old_test gen_iter
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 578
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 544

    (369) gen_for -> FOR exprlist IN or_test gen_iter .

    RPAR            reduce using rule 369 (gen_for -> FOR exprlist IN or_test gen_iter .)
    COMMA           reduce using rule 369 (gen_for -> FOR exprlist IN or_test gen_iter .)


state 545

    (174) for_stmt -> FOR exprlist IN testlist COLON suite ELSE . COLON suite

    COLON           shift and go to state 579


state 546

    (187) except_clause -> EXCEPT test AS test .

    COLON           reduce using rule 187 (except_clause -> EXCEPT test AS test .)


state 547

    (188) except_clause -> EXCEPT test COMMA test .

    COLON           reduce using rule 188 (except_clause -> EXCEPT test COMMA test .)


state 548

    (181) try_stmt_plus -> try_stmt_plus except_clause COLON suite .

    FINALLY         reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    ELSE            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    EXCEPT          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    ENDMARKER       reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    NEWLINE         reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    IF              reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    WHILE           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    FOR             reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    TRY             reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    WITH            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    DEF             reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    CLASS           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    NAME            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    PRINT           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    DEL             reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    PASS            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    GLOBAL          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    EXEC            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    ASSERT          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    BREAK           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    CONTINUE        reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    RETURN          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    RAISE           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    IMPORT          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    FROM            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    YIELD           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    AT              reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    LAMBDA          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    NOT             reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    PLUS            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    MINUS           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    TILDE           reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    LPAR            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    LSQB            reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    LBRACE          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    BACKQUOTE       reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    NUMBER          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    STRING          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)
    DEDENT          reduce using rule 181 (try_stmt_plus -> try_stmt_plus except_clause COLON suite .)


state 549

    (177) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .
    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite . FINALLY COLON suite

    ENDMARKER       reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    NEWLINE         reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    IF              reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    WHILE           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    FOR             reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    TRY             reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    WITH            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    DEF             reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    CLASS           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    NAME            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    PRINT           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    DEL             reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    PASS            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    GLOBAL          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    EXEC            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    ASSERT          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    BREAK           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    CONTINUE        reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    RETURN          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    RAISE           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    IMPORT          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    FROM            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    YIELD           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    AT              reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    LAMBDA          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    NOT             reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    PLUS            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    MINUS           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    TILDE           reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    LPAR            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    LSQB            reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    LBRACE          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    BACKQUOTE       reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    NUMBER          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    STRING          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    DEDENT          reduce using rule 177 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite .)
    FINALLY         shift and go to state 580


state 550

    (176) try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .

    ENDMARKER       reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    NEWLINE         reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    IF              reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    WHILE           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    FOR             reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    TRY             reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    WITH            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    DEF             reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    CLASS           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    NAME            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    PRINT           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    DEL             reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    PASS            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    GLOBAL          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    EXEC            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    ASSERT          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    BREAK           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    CONTINUE        reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    RETURN          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    RAISE           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    IMPORT          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    FROM            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    YIELD           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    AT              reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    LAMBDA          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    NOT             reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    PLUS            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    MINUS           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    TILDE           reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    LPAR            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    LSQB            reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    LBRACE          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    NUMBER          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    STRING          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)
    DEDENT          reduce using rule 176 (try_stmt -> TRY COLON suite try_stmt_plus FINALLY COLON suite .)


state 551

    (340) dictmaker_star -> COMMA test COLON . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 581
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 552

    (341) dictmaker_star -> dictmaker_star COMMA test . COLON test

    COLON           shift and go to state 582


state 553

    (348) arglist -> STAR test COMMA DOUBLESTAR test .

    RPAR            reduce using rule 348 (arglist -> STAR test COMMA DOUBLESTAR test .)


state 554

    (353) arglist -> arglist_star STAR test COMMA DOUBLESTAR . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 583
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 555

    (23) varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA . DOUBLESTAR NAME

    DOUBLESTAR      shift and go to state 584


state 556

    (43) varargslist_star -> varargslist_star COMMA fpdef EQUAL test .

    COMMA           reduce using rule 43 (varargslist_star -> varargslist_star COMMA fpdef EQUAL test .)
    COLON           reduce using rule 43 (varargslist_star -> varargslist_star COMMA fpdef EQUAL test .)
    RPAR            reduce using rule 43 (varargslist_star -> varargslist_star COMMA fpdef EQUAL test .)


state 557

    (32) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR . NAME
    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR . NAME COMMA DOUBLESTAR NAME

    NAME            shift and go to state 585


state 558

    (34) varargslist -> fpdef EQUAL test varargslist_star COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 586


state 559

    (27) varargslist -> fpdef EQUAL test COMMA STAR NAME .
    (28) varargslist -> fpdef EQUAL test COMMA STAR NAME . COMMA DOUBLESTAR NAME

    COLON           reduce using rule 27 (varargslist -> fpdef EQUAL test COMMA STAR NAME .)
    RPAR            reduce using rule 27 (varargslist -> fpdef EQUAL test COMMA STAR NAME .)
    COMMA           shift and go to state 587


state 560

    (29) varargslist -> fpdef EQUAL test COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 29 (varargslist -> fpdef EQUAL test COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 29 (varargslist -> fpdef EQUAL test COMMA DOUBLESTAR NAME .)


state 561

    (18) varargslist -> fpdef COMMA STAR NAME COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 588


state 562

    (172) while_stmt -> WHILE test COLON suite ELSE COLON suite .

    ENDMARKER       reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IF              reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    TRY             reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WITH            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    CLASS           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEL             reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PASS            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    EXEC            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    BREAK           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    CONTINUE        reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RAISE           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FROM            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    YIELD           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    AT              reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LAMBDA          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NOT             reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    TILDE           reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LPAR            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LSQB            reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LBRACE          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    BACKQUOTE       reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 172 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)


state 563

    (363) list_for -> FOR exprlist IN testlist_safe list_iter .

    RSQB            reduce using rule 363 (list_for -> FOR exprlist IN testlist_safe list_iter .)


state 564

    (361) list_iter -> list_if .

    RSQB            reduce using rule 361 (list_iter -> list_if .)


state 565

    (360) list_iter -> list_for .

    RSQB            reduce using rule 360 (list_iter -> list_for .)


state 566

    (364) list_if -> IF . old_test
    (365) list_if -> IF . old_test list_iter
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 589
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 567

    (194) testlist_safe -> old_test testlist_safe_plus .
    (195) testlist_safe -> old_test testlist_safe_plus . COMMA
    (197) testlist_safe_plus -> testlist_safe_plus . COMMA old_test

    FOR             reduce using rule 194 (testlist_safe -> old_test testlist_safe_plus .)
    IF              reduce using rule 194 (testlist_safe -> old_test testlist_safe_plus .)
    RSQB            reduce using rule 194 (testlist_safe -> old_test testlist_safe_plus .)
    COMMA           shift and go to state 590


state 568

    (196) testlist_safe_plus -> COMMA . old_test
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 591
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 569

    (201) old_lambdef -> LAMBDA varargslist . COLON old_test

    COLON           shift and go to state 592


state 570

    (200) old_lambdef -> LAMBDA COLON . old_test
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 593
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 571

    (344) classdef -> CLASS NAME LPAR testlist RPAR COLON suite .

    ENDMARKER       reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    NEWLINE         reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    IF              reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    WHILE           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    FOR             reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    TRY             reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    WITH            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    DEF             reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    CLASS           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    NAME            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    PRINT           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    DEL             reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    PASS            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    GLOBAL          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    EXEC            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    ASSERT          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    BREAK           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    CONTINUE        reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    RETURN          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    RAISE           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    IMPORT          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    FROM            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    YIELD           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    AT              reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    LAMBDA          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    NOT             reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    PLUS            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    MINUS           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    TILDE           reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    LPAR            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    LSQB            reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    LBRACE          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    BACKQUOTE       reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    NUMBER          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    STRING          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)
    DEDENT          reduce using rule 344 (classdef -> CLASS NAME LPAR testlist RPAR COLON suite .)


state 572

    (170) if_stmt_star -> if_stmt_star ELIF test . COLON suite

    COLON           shift and go to state 594


state 573

    (168) if_stmt -> IF test COLON suite if_stmt_star ELSE COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 595
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 574

    (169) if_stmt_star -> ELIF test COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 596
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 575

    (166) if_stmt -> IF test COLON suite ELSE COLON suite .

    ENDMARKER       reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    IF              reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    TRY             reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    WITH            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    CLASS           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    DEL             reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    PASS            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    EXEC            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    BREAK           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    CONTINUE        reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    RAISE           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    FROM            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    YIELD           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    AT              reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    LAMBDA          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    NOT             reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    TILDE           reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    LPAR            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    LSQB            reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    LBRACE          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    BACKQUOTE       reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)
    DEDENT          reduce using rule 166 (if_stmt -> IF test COLON suite ELSE COLON suite .)


state 576

    (140) import_as_names_star -> import_as_names_star COMMA import_as_name .

    COMMA           reduce using rule 140 (import_as_names_star -> import_as_names_star COMMA import_as_name .)
    NEWLINE         reduce using rule 140 (import_as_names_star -> import_as_names_star COMMA import_as_name .)
    SEMI            reduce using rule 140 (import_as_names_star -> import_as_names_star COMMA import_as_name .)
    RPAR            reduce using rule 140 (import_as_names_star -> import_as_names_star COMMA import_as_name .)


state 577

    (124) import_from -> FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR .

    NEWLINE         reduce using rule 124 (import_from -> FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR .)
    SEMI            reduce using rule 124 (import_from -> FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR .)


state 578

    (370) gen_if -> IF old_test .
    (371) gen_if -> IF old_test . gen_iter
    (366) gen_iter -> . gen_for
    (367) gen_iter -> . gen_if
    (368) gen_for -> . FOR exprlist IN or_test
    (369) gen_for -> . FOR exprlist IN or_test gen_iter
    (370) gen_if -> . IF old_test
    (371) gen_if -> . IF old_test gen_iter

    RPAR            reduce using rule 370 (gen_if -> IF old_test .)
    COMMA           reduce using rule 370 (gen_if -> IF old_test .)
    FOR             shift and go to state 203
    IF              shift and go to state 543

    gen_for                        shift and go to state 541
    gen_if                         shift and go to state 542
    gen_iter                       shift and go to state 597

state 579

    (174) for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 598
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 580

    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY . COLON suite

    COLON           shift and go to state 599


state 581

    (340) dictmaker_star -> COMMA test COLON test .

    COMMA           reduce using rule 340 (dictmaker_star -> COMMA test COLON test .)
    RBRACE          reduce using rule 340 (dictmaker_star -> COMMA test COLON test .)


state 582

    (341) dictmaker_star -> dictmaker_star COMMA test COLON . test
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    test                           shift and go to state 600
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    lambdef                        shift and go to state 19
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 25

state 583

    (353) arglist -> arglist_star STAR test COMMA DOUBLESTAR test .

    RPAR            reduce using rule 353 (arglist -> arglist_star STAR test COMMA DOUBLESTAR test .)


state 584

    (23) varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 601


state 585

    (32) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME .
    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME . COMMA DOUBLESTAR NAME

    COLON           reduce using rule 32 (varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME .)
    RPAR            reduce using rule 32 (varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME .)
    COMMA           shift and go to state 602


state 586

    (34) varargslist -> fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 34 (varargslist -> fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 34 (varargslist -> fpdef EQUAL test varargslist_star COMMA DOUBLESTAR NAME .)


state 587

    (28) varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA . DOUBLESTAR NAME

    DOUBLESTAR      shift and go to state 603


state 588

    (18) varargslist -> fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 18 (varargslist -> fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 18 (varargslist -> fpdef COMMA STAR NAME COMMA DOUBLESTAR NAME .)


state 589

    (364) list_if -> IF old_test .
    (365) list_if -> IF old_test . list_iter
    (360) list_iter -> . list_for
    (361) list_iter -> . list_if
    (362) list_for -> . FOR exprlist IN testlist_safe
    (363) list_for -> . FOR exprlist IN testlist_safe list_iter
    (364) list_if -> . IF old_test
    (365) list_if -> . IF old_test list_iter

    RSQB            reduce using rule 364 (list_if -> IF old_test .)
    FOR             shift and go to state 297
    IF              shift and go to state 566

    list_iter                      shift and go to state 604
    list_if                        shift and go to state 564
    list_for                       shift and go to state 565

state 590

    (195) testlist_safe -> old_test testlist_safe_plus COMMA .
    (197) testlist_safe_plus -> testlist_safe_plus COMMA . old_test
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    FOR             reduce using rule 195 (testlist_safe -> old_test testlist_safe_plus COMMA .)
    IF              reduce using rule 195 (testlist_safe -> old_test testlist_safe_plus COMMA .)
    RSQB            reduce using rule 195 (testlist_safe -> old_test testlist_safe_plus COMMA .)
    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 605
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 591

    (196) testlist_safe_plus -> COMMA old_test .

    COMMA           reduce using rule 196 (testlist_safe_plus -> COMMA old_test .)
    FOR             reduce using rule 196 (testlist_safe_plus -> COMMA old_test .)
    IF              reduce using rule 196 (testlist_safe_plus -> COMMA old_test .)
    RSQB            reduce using rule 196 (testlist_safe_plus -> COMMA old_test .)


state 592

    (201) old_lambdef -> LAMBDA varargslist COLON . old_test
    (198) old_test -> . or_test
    (199) old_test -> . old_lambdef
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (200) old_lambdef -> . LAMBDA COLON old_test
    (201) old_lambdef -> . LAMBDA varargslist COLON old_test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    LAMBDA          shift and go to state 527
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NAME            shift and go to state 90
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    old_test                       shift and go to state 606
    atom_plus                      shift and go to state 57
    shift_expr                     shift and go to state 35
    factor                         shift and go to state 11
    and_expr                       shift and go to state 13
    power                          shift and go to state 34
    and_test                       shift and go to state 42
    atom                           shift and go to state 48
    xor_expr                       shift and go to state 59
    old_lambdef                    shift and go to state 525
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    arith_expr                     shift and go to state 71
    expr                           shift and go to state 27
    or_test                        shift and go to state 526

state 593

    (200) old_lambdef -> LAMBDA COLON old_test .

    COMMA           reduce using rule 200 (old_lambdef -> LAMBDA COLON old_test .)
    FOR             reduce using rule 200 (old_lambdef -> LAMBDA COLON old_test .)
    IF              reduce using rule 200 (old_lambdef -> LAMBDA COLON old_test .)
    RSQB            reduce using rule 200 (old_lambdef -> LAMBDA COLON old_test .)
    RPAR            reduce using rule 200 (old_lambdef -> LAMBDA COLON old_test .)


state 594

    (170) if_stmt_star -> if_stmt_star ELIF test COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    not_test                       shift and go to state 72
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 607
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 595

    (168) if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .

    ENDMARKER       reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    NEWLINE         reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    IF              reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    WHILE           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    FOR             reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    TRY             reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    WITH            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    DEF             reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    CLASS           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    NAME            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    PRINT           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    DEL             reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    PASS            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    GLOBAL          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    EXEC            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    ASSERT          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    BREAK           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    CONTINUE        reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    RETURN          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    RAISE           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    IMPORT          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    FROM            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    YIELD           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    AT              reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    LAMBDA          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    NOT             reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    PLUS            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    MINUS           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    TILDE           reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    LPAR            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    LSQB            reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    LBRACE          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    BACKQUOTE       reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    NUMBER          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    STRING          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)
    DEDENT          reduce using rule 168 (if_stmt -> IF test COLON suite if_stmt_star ELSE COLON suite .)


state 596

    (169) if_stmt_star -> ELIF test COLON suite .

    ELSE            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    ELIF            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    ENDMARKER       reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    NEWLINE         reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    IF              reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    WHILE           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    FOR             reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    TRY             reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    WITH            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    DEF             reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    CLASS           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    NAME            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    PRINT           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    DEL             reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    PASS            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    GLOBAL          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    EXEC            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    ASSERT          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    BREAK           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    CONTINUE        reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    RETURN          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    RAISE           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    IMPORT          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    FROM            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    YIELD           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    AT              reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    LAMBDA          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    NOT             reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    PLUS            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    MINUS           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    TILDE           reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    LPAR            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    LSQB            reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    LBRACE          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    BACKQUOTE       reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    NUMBER          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    STRING          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)
    DEDENT          reduce using rule 169 (if_stmt_star -> ELIF test COLON suite .)


state 597

    (371) gen_if -> IF old_test gen_iter .

    RPAR            reduce using rule 371 (gen_if -> IF old_test gen_iter .)
    COMMA           reduce using rule 371 (gen_if -> IF old_test gen_iter .)


state 598

    (174) for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .

    DEDENT          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    IF              reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    FOR             reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    TRY             reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    WITH            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    DEF             reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    CLASS           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    NAME            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    DEL             reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    PASS            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    EXEC            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    BREAK           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    CONTINUE        reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    RAISE           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    FROM            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    YIELD           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    AT              reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    LAMBDA          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    NOT             reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    TILDE           reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    LPAR            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    LSQB            reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    LBRACE          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    BACKQUOTE       reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    STRING          reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    ENDMARKER       reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 174 (for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite .)


state 599

    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON . suite
    (189) suite -> . simple_stmt
    (190) suite -> . NEWLINE INDENT suite_plus DEDENT
    (54) simple_stmt -> . small_stmt NEWLINE
    (55) simple_stmt -> . small_stmt SEMI NEWLINE
    (56) simple_stmt -> . small_stmt simple_stmt_star NEWLINE
    (57) simple_stmt -> . small_stmt simple_stmt_star SEMI NEWLINE
    (60) small_stmt -> . expr_stmt
    (61) small_stmt -> . print_stmt
    (62) small_stmt -> . del_stmt
    (63) small_stmt -> . pass_stmt
    (64) small_stmt -> . flow_stmt
    (65) small_stmt -> . import_stmt
    (66) small_stmt -> . global_stmt
    (67) small_stmt -> . exec_stmt
    (68) small_stmt -> . assert_stmt
    (69) expr_stmt -> . NAME NAME EQUAL yield_expr
    (70) expr_stmt -> . NAME NAME EQUAL testlist
    (71) expr_stmt -> . testlist augassign yield_expr
    (72) expr_stmt -> . testlist augassign testlist
    (73) expr_stmt -> . testlist
    (74) expr_stmt -> . testlist expr_stmt_star
    (91) print_stmt -> . PRINT
    (92) print_stmt -> . PRINT test
    (93) print_stmt -> . PRINT test COMMA
    (94) print_stmt -> . PRINT test print_stmt_plus
    (95) print_stmt -> . PRINT test print_stmt_plus COMMA
    (96) print_stmt -> . PRINT RIGHTSHIFT test
    (97) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus
    (98) print_stmt -> . PRINT RIGHTSHIFT test print_stmt_plus COMMA
    (101) del_stmt -> . DEL exprlist
    (102) pass_stmt -> . PASS
    (103) flow_stmt -> . break_stmt
    (104) flow_stmt -> . continue_stmt
    (105) flow_stmt -> . return_stmt
    (106) flow_stmt -> . raise_stmt
    (107) flow_stmt -> . yield_stmt
    (117) import_stmt -> . import_name
    (118) import_stmt -> . import_from
    (149) global_stmt -> . GLOBAL NAME
    (150) global_stmt -> . GLOBAL NAME global_stmt_star
    (153) exec_stmt -> . EXEC expr
    (154) exec_stmt -> . EXEC expr IN test
    (155) exec_stmt -> . EXEC expr IN test COMMA test
    (156) assert_stmt -> . ASSERT test
    (157) assert_stmt -> . ASSERT test COMMA test
    (330) testlist -> . test
    (331) testlist -> . test COMMA
    (332) testlist -> . test testlist_star
    (333) testlist -> . test testlist_star COMMA
    (108) break_stmt -> . BREAK
    (109) continue_stmt -> . CONTINUE
    (110) return_stmt -> . RETURN
    (111) return_stmt -> . RETURN testlist
    (113) raise_stmt -> . RAISE
    (114) raise_stmt -> . RAISE test
    (115) raise_stmt -> . RAISE test COMMA test
    (116) raise_stmt -> . RAISE test COMMA test COMMA test
    (112) yield_stmt -> . yield_expr
    (119) import_name -> . IMPORT dotted_as_names
    (120) import_from -> . FROM dotted_name IMPORT STAR
    (121) import_from -> . FROM dotted_name IMPORT LPAR import_as_names RPAR
    (122) import_from -> . FROM dotted_name IMPORT import_as_names
    (123) import_from -> . FROM import_from_plus dotted_name IMPORT STAR
    (124) import_from -> . FROM import_from_plus dotted_name IMPORT LPAR import_as_names RPAR
    (125) import_from -> . FROM import_from_plus dotted_name IMPORT import_as_names
    (126) import_from -> . FROM import_from_plus IMPORT STAR
    (127) import_from -> . FROM import_from_plus IMPORT LPAR import_as_names RPAR
    (128) import_from -> . FROM import_from_plus IMPORT import_as_names
    (202) test -> . or_test
    (203) test -> . or_test IF or_test ELSE test
    (204) test -> . lambdef
    (377) yield_expr -> . YIELD
    (378) yield_expr -> . YIELD testlist
    (205) or_test -> . and_test
    (206) or_test -> . and_test or_test_star
    (300) lambdef -> . LAMBDA COLON test
    (301) lambdef -> . LAMBDA varargslist COLON test
    (209) and_test -> . not_test
    (210) and_test -> . not_test and_test_star
    (213) not_test -> . NOT not_test
    (214) not_test -> . comparison
    (215) comparison -> . expr
    (216) comparison -> . expr comparison_star
    (229) expr -> . xor_expr
    (230) expr -> . xor_expr expr_star
    (233) xor_expr -> . and_expr
    (234) xor_expr -> . and_expr xor_expr_star
    (237) and_expr -> . shift_expr
    (238) and_expr -> . shift_expr and_expr_star
    (241) shift_expr -> . arith_expr
    (242) shift_expr -> . arith_expr shift_expr_star
    (247) arith_expr -> . term
    (248) arith_expr -> . term arith_expr_star
    (253) term -> . factor
    (254) term -> . factor term_star
    (263) factor -> . PLUS factor
    (264) factor -> . MINUS factor
    (265) factor -> . TILDE factor
    (266) factor -> . power
    (267) power -> . atom
    (268) power -> . atom DOUBLESTAR factor
    (269) power -> . atom power_star
    (270) power -> . atom power_star DOUBLESTAR factor
    (273) atom -> . LPAR RPAR
    (274) atom -> . LPAR yield_expr RPAR
    (275) atom -> . LPAR testlist_gexp RPAR
    (276) atom -> . LSQB RSQB
    (277) atom -> . LSQB listmaker RSQB
    (278) atom -> . LBRACE RBRACE
    (279) atom -> . LBRACE dictmaker RBRACE
    (280) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (281) atom -> . NAME
    (282) atom -> . NUMBER
    (283) atom -> . atom_plus
    (284) atom_plus -> . STRING
    (285) atom_plus -> . atom_plus STRING

    NEWLINE         shift and go to state 258
    NAME            shift and go to state 66
    PRINT           shift and go to state 30
    DEL             shift and go to state 29
    PASS            shift and go to state 20
    GLOBAL          shift and go to state 53
    EXEC            shift and go to state 14
    ASSERT          shift and go to state 70
    BREAK           shift and go to state 68
    CONTINUE        shift and go to state 49
    RETURN          shift and go to state 56
    RAISE           shift and go to state 52
    IMPORT          shift and go to state 12
    FROM            shift and go to state 82
    YIELD           shift and go to state 79
    LAMBDA          shift and go to state 51
    NOT             shift and go to state 50
    PLUS            shift and go to state 10
    MINUS           shift and go to state 8
    TILDE           shift and go to state 61
    LPAR            shift and go to state 2
    LSQB            shift and go to state 64
    LBRACE          shift and go to state 45
    BACKQUOTE       shift and go to state 28
    NUMBER          shift and go to state 63
    STRING          shift and go to state 32

    not_test                       shift and go to state 72
    small_stmt                     shift and go to state 3
    import_from                    shift and go to state 4
    arith_expr                     shift and go to state 71
    return_stmt                    shift and go to state 55
    atom_plus                      shift and go to state 57
    flow_stmt                      shift and go to state 33
    expr_stmt                      shift and go to state 21
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 35
    simple_stmt                    shift and go to state 259
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 11
    test                           shift and go to state 74
    global_stmt                    shift and go to state 75
    import_name                    shift and go to state 76
    and_expr                       shift and go to state 13
    break_stmt                     shift and go to state 73
    yield_expr                     shift and go to state 78
    power                          shift and go to state 34
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 42
    assert_stmt                    shift and go to state 18
    lambdef                        shift and go to state 19
    suite                          shift and go to state 608
    import_stmt                    shift and go to state 43
    comparison                     shift and go to state 44
    term                           shift and go to state 23
    pass_stmt                      shift and go to state 46
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 27
    raise_stmt                     shift and go to state 65
    or_test                        shift and go to state 25
    del_stmt                       shift and go to state 84
    atom                           shift and go to state 48
    yield_stmt                     shift and go to state 69

state 600

    (341) dictmaker_star -> dictmaker_star COMMA test COLON test .

    COMMA           reduce using rule 341 (dictmaker_star -> dictmaker_star COMMA test COLON test .)
    RBRACE          reduce using rule 341 (dictmaker_star -> dictmaker_star COMMA test COLON test .)


state 601

    (23) varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 23 (varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 23 (varargslist -> fpdef varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .)


state 602

    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA . DOUBLESTAR NAME

    DOUBLESTAR      shift and go to state 609


state 603

    (28) varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 610


state 604

    (365) list_if -> IF old_test list_iter .

    RSQB            reduce using rule 365 (list_if -> IF old_test list_iter .)


state 605

    (197) testlist_safe_plus -> testlist_safe_plus COMMA old_test .

    COMMA           reduce using rule 197 (testlist_safe_plus -> testlist_safe_plus COMMA old_test .)
    FOR             reduce using rule 197 (testlist_safe_plus -> testlist_safe_plus COMMA old_test .)
    IF              reduce using rule 197 (testlist_safe_plus -> testlist_safe_plus COMMA old_test .)
    RSQB            reduce using rule 197 (testlist_safe_plus -> testlist_safe_plus COMMA old_test .)


state 606

    (201) old_lambdef -> LAMBDA varargslist COLON old_test .

    COMMA           reduce using rule 201 (old_lambdef -> LAMBDA varargslist COLON old_test .)
    FOR             reduce using rule 201 (old_lambdef -> LAMBDA varargslist COLON old_test .)
    IF              reduce using rule 201 (old_lambdef -> LAMBDA varargslist COLON old_test .)
    RSQB            reduce using rule 201 (old_lambdef -> LAMBDA varargslist COLON old_test .)
    RPAR            reduce using rule 201 (old_lambdef -> LAMBDA varargslist COLON old_test .)


state 607

    (170) if_stmt_star -> if_stmt_star ELIF test COLON suite .

    ELSE            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    ELIF            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    ENDMARKER       reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    NEWLINE         reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    IF              reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    WHILE           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    FOR             reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    TRY             reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    WITH            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    DEF             reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    CLASS           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    NAME            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    PRINT           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    DEL             reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    PASS            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    GLOBAL          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    EXEC            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    ASSERT          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    BREAK           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    CONTINUE        reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    RETURN          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    RAISE           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    IMPORT          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    FROM            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    YIELD           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    AT              reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    LAMBDA          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    NOT             reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    PLUS            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    MINUS           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    TILDE           reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    LPAR            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    LSQB            reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    LBRACE          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    BACKQUOTE       reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    NUMBER          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    STRING          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)
    DEDENT          reduce using rule 170 (if_stmt_star -> if_stmt_star ELIF test COLON suite .)


state 608

    (178) try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .

    ENDMARKER       reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    NEWLINE         reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    IF              reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    WHILE           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    FOR             reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    TRY             reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    WITH            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    DEF             reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    CLASS           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    NAME            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    PRINT           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    DEL             reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    PASS            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    GLOBAL          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    EXEC            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    ASSERT          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    BREAK           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    CONTINUE        reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    RETURN          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    RAISE           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    IMPORT          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    FROM            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    YIELD           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    AT              reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    LAMBDA          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    NOT             reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    PLUS            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    MINUS           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    TILDE           reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    LPAR            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    LSQB            reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    LBRACE          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    NUMBER          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    STRING          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)
    DEDENT          reduce using rule 178 (try_stmt -> TRY COLON suite try_stmt_plus ELSE COLON suite FINALLY COLON suite .)


state 609

    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR . NAME

    NAME            shift and go to state 611


state 610

    (28) varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 28 (varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 28 (varargslist -> fpdef EQUAL test COMMA STAR NAME COMMA DOUBLESTAR NAME .)


state 611

    (33) varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .

    COLON           reduce using rule 33 (varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .)
    RPAR            reduce using rule 33 (varargslist -> fpdef EQUAL test varargslist_star COMMA STAR NAME COMMA DOUBLESTAR NAME .)

